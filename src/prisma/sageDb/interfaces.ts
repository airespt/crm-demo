// This file was auto-generated by prisma-generator-typescript-interfaces

export interface AccountCashSchemeDetails {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  LedgerGuid: string;
  DocSerial: string;
  DocID: string;
  DocNumber: bigint;
  DocInstallmentID: number;
  CreateDate: Date | null;
  TaxGroupID: string;
  TaxSequenceID: number;
  CountryId: string;
  TaxRegionId: string;
  TaxRate: number;
  TotalNetAmount: number;
  TotalTaxAmount: number;
  TotalDiscountAmount: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  TaxItemType: number;
  TaxExemptionReasonCode: string;
  TaxCode: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date;
  HrAlt: number;
  AccountTransaction?: AccountTransaction;
}

export interface AccountingExportHistory {
  Id: number;
  TemplateId: number;
  StartDate: Date | null;
  EndDate: Date | null;
  SystemUserGuid: string;
  ExportDateTime: Date | null;
  StockLocked: boolean;
  WorkstationId: number;
  SessionId: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface AccountingExportTemplates {
  TemplateID: number;
  TemplateName: string;
  Filename: string;
  DoNotGroupHeaderFields: boolean;
  DoNotConvertToOEM: boolean;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  AccountingFormatFields?: AccountingFormatFields[];
}

export interface AccountingExportValues {
  TemplateID: number;
  FieldName: string;
  TransDocumentID: string;
  TransSerial: string;
  TransYear: number;
  ZoneType: number;
  GroupType: number;
  LineID: number;
  Iteractive: boolean;
  Value: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface AccountingFormatFields {
  TemplateID: number;
  FieldName: string;
  Description: string;
  FieldType: number;
  StartPosition: number;
  Lenght: number;
  Format: string;
  MinValue: number;
  MaxValue: number;
  FillChar: number;
  TextAlignment: number;
  DecimalSeparator: number;
  DecimalPlaces: number;
  ValueList: string;
  FieldValue: string;
  Mandatory: boolean;
  DoNotParse: boolean;
  Master: boolean;
  FormulaField: boolean;
  ListOrder: number;
  GroupType: number;
  LedgerType: number;
  DoNotExport: boolean;
  SumField: boolean;
  RememberValue: boolean;
  Unique: boolean;
  GroupKey: boolean;
  GroupSum: boolean;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  AccountingExportTemplates?: AccountingExportTemplates;
}

export interface AccountingTableValues {
  TableName: string;
  TransYear: number;
  IndexValue1: string;
  IndexValue2: string;
  IndexValue3: string;
  IndexValue4: string;
  GeneralLedger: string;
  AnaliticalLedger: string;
  CostCenterLedger: string;
  FunctionalLedger: string;
  OrganicalLedger: string;
  EconomicalLedger: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface AccountTransaction {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  CreateDate: Date | null;
  CreateTime: number;
  SystemEntryDate: Date | null;
  SystemEntryUser: string;
  UserChanged: string;
  TotalAmount: number;
  TotalRetentionAmount: number;
  TotalRetentionStampDuty: number;
  TotalDiscountAmount: number;
  TotalDiscountPercent: number;
  TotalExchangeDifference: number;
  TotalNetAmount: number;
  TotalOtherDebit: number;
  PartyTypeCode: number;
  PartyID: bigint;
  PartyName: string;
  PartyAddress1: string;
  PartyAddress2: string;
  PartyPostalCode: string;
  PartyAddressID: number;
  PartyCountryID: string;
  PartyProvinceID: string;
  PartyLocalityID: bigint;
  TransferAccountTypeID: string;
  PartyFederalTaxID: string;
  SettleTax: boolean;
  Comments: string;
  SalesmanID: bigint;
  ZoneID: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  CashDiscountTermID: string;
  TransStatus: number;
  AccountingExportDate: Date | null;
  PrintedCopies: number;
  TillID: string;
  FinancialDiscountPercentBase: number;
  ExternalReferenceNumber: string;
  EffectivePaymentDate: Date | null;
  CashAccountingSchemeType: number;
  ChargeableMotive: number;
  AccountingExportDate2: Date | null;
  TransmissionStatus: number;
  ATCUD: string;
  QRCode: string;
  ContractReferenceNumber: string;
  WithholdingTaxType: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  AccountCashSchemeDetails?: AccountCashSchemeDetails[];
  DocumentsSeriesNumber?: DocumentsSeriesNumber;
  AccountTransactionDetails?: AccountTransactionDetails[];
  PostVoidAccountCashSchemeDetails?: PostVoidAccountCashSchemeDetails[];
  PostVoidAccountTransactionDetails?: PostVoidAccountTransactionDetails[];
}

export interface AccountTransactionDetails {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  PartyTypeCode: number;
  PartyID: bigint;
  PartyAccountTypeID: string;
  LedgerGuid: string;
  DocSerial: string;
  DocID: string;
  DocNumber: bigint;
  DocInstallmentID: number;
  DocContractReference: string;
  DocCreateDate: Date | null;
  DocDeferredPaymentDate: Date | null;
  TotalOriginalAmount: number;
  TotalPendingAmount: number;
  TotalDiscountAmount: number;
  TotalDiscountPercent: number;
  TotalPayedAmount: number;
  RetentionOriginalAmount: number;
  RetentionPendingAmount: number;
  RetentionPayedAmount: number;
  RetentionOriginalStampDuty: number;
  RetentionPendingStampDuty: number;
  RetentionPayedStampDuty: number;
  DocCurrencyID: string;
  DocCurrencyExchange: number;
  DocCurrencyFactor: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date;
  HrAlt: number;
  AccountTransaction?: AccountTransaction;
}

export interface AccountTypes {
  AccountTypeID: string;
  UseOnCustomers: boolean;
  UseOnSuppliers: boolean;
  UseOnSalesman: boolean;
  UseOnOtherEntities: boolean;
  Description: string;
  AffectsBalanceAmount: boolean;
  AffectsPlafondAmount: boolean;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface AddressType {
  AddressTypeID: number;
  Description: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date;
  HrAlt: number;
}

export interface AdsPlanner {
  adsID: Decimal;
  adsWorkstationID: number;
  CampaignID: bigint;
  ImageDescription: string;
  ImagePath: string;
  adsOrder: number;
  adsFullScreen: boolean;
  VisualizationTime: number;
  ShowCount: number;
  BarCode: string;
  ShowMon: boolean;
  ShowTue: boolean;
  ShowWed: boolean;
  ShowThu: boolean;
  ShowFri: boolean;
  ShowSat: boolean;
  ShowSun: boolean;
  StartDate: Date | null;
  StartTime: Date | null;
  EndDate: Date | null;
  EndTime: Date | null;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface AggregateGroupItem {
  GroupID: bigint;
  GroupKey: string;
  GroupClassification1: string;
  GroupClassification2: string;
  GroupClassification3: string;
  GroupClassification4: string;
  GroupClassification5: string;
  GroupClassification6: string;
  GroupClassification7: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface AllowanceCharge {
  AllowanceChargeID: number;
  AllowanceChargeDescription: string;
  ChargeIndicator: boolean;
  AllowanceChargeReason: number;
  CalculationMethod: number;
  AllowanceChargeValue: number;
  Inactive: boolean;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface AlternativeItem {
  ItemID: string;
  AlternativeItemID: string;
  SubstitutionReasonDesc: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Item?: Item;
}

export interface AppDocumentsGroups {
  TransDocumentID: string;
  AppGroupID: number;
  ActionFlags: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  AppGroups?: AppGroups;
  Documents?: Documents;
}

export interface AppDocumentsSeriesGroups {
  Series: string;
  AppGroupID: number;
  ActionFlags: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  AppGroups?: AppGroups;
  DocumentsSeries?: DocumentsSeries;
}

export interface AppGroups {
  AppGroupID: number;
  SystemGroupGuid: string;
  AppGroupDescription: string;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  AppDocumentsGroups?: AppDocumentsGroups[];
  AppDocumentsSeriesGroups?: AppDocumentsSeriesGroups[];
  AppOperationsByUserGroup?: AppOperationsByUserGroup[];
  AppSalesmansGroups?: AppSalesmansGroups[];
  AppStatusFlowGroups?: AppStatusFlowGroups[];
  AppUsersGroups?: AppUsersGroups[];
}

export interface AppOperations {
  AppOperationID: number;
  Name: string;
  LocalizeStringID: number;
  ItsMenuItem: boolean;
  ParentID: number;
  Level: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  AppOperationsByUserGroup?: AppOperationsByUserGroup[];
}

export interface AppOperationsByUserGroup {
  AppGroupID: number;
  AppOperationID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  AppGroups?: AppGroups;
  AppOperations?: AppOperations;
}

export interface AppSalesmansGroups {
  SalesmanID: bigint;
  AppGroupID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  AppGroups?: AppGroups;
  Salesman?: Salesman;
}

export interface AppStatusFlowGroups {
  StatusFlowID: string;
  AppGroupID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  AppGroups?: AppGroups;
}

export interface AppTasks {
  TaskID: number;
  TaskType: number;
  TaskExecutionDate: Date | null;
  TaskData: string;
  TaskState: number;
  TaskNotify: boolean;
  ExportToBranch: boolean;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface AppTempOperations {
  AppTempOperationID: number;
  MenuName: string;
  Name: string;
  LocalizeStringID: number;
  AppTempParentID: number;
}

export interface AppUserMessages {
  UserMessageID: Decimal;
  FromUserType: number;
  FromUser: bigint;
  Subject: string;
  Message: string;
  DtSend: Date | null;
  HrSend: Date | null;
  DeleteStateFrom: number;
  ToUserType: number;
  ToUser: bigint;
  MsgRead: boolean;
  DtReceived: Date | null;
  HrReceived: Date | null;
  DeleteStateTo: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface AppUsers {
  AppUserID: number;
  AppUserKey: string;
  SystemUserGuid: string;
  AppUserName: string;
  AppUserPassword: string;
  AppUserPasswordE: string;
  AppUserPicturePath: string;
  IsAdministrator: boolean;
  ConfQuickSearch: boolean;
  ConfReport: boolean;
  PrintReport: boolean;
  ExportReport: boolean;
  UseBackoffice: boolean;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  AppUsersGroups?: AppUsersGroups[];
}

export interface AppUsersGroups {
  AppUserID: number;
  AppGroupID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  AppGroups?: AppGroups;
  AppUsers?: AppUsers;
}

export interface BalanceCompensationTenderLineItem {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: number;
  TransOrder: number;
  PartyType: number;
  PartyID: bigint;
  BalanceCompensationAmount: number;
  DebitedTransSerial: string;
  DebitedTransDocument: string;
  DebitedTransDocNumber: number;
  UpdatedTransactionGuid: string;
  TenderDetailGuid: string;
  Guid: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface BalconyScaleLayout {
  SectionID: number;
  KeyID: number;
  KeyFunction: string;
  KeyValue: string;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  BalconyScaleSection?: BalconyScaleSection;
}

export interface BalconyScaleSection {
  SectionID: number;
  ItemCountLimit: bigint;
  IngredientsCharLimit: number;
  PriceLine: number;
  PriceLineOffer1: number;
  PriceLineOffer2: number;
  BarCodeTicket: string;
  BarCodeLabel: string;
  SendTicketHeading: boolean;
  SendTicketFooter: boolean;
  SendBarCodeStructure: boolean;
  SendVATRates: boolean;
  SendFamilys: boolean;
  SendVendors: boolean;
  SendPLUs: boolean;
  SendIngredients: boolean;
  SendPLUDirectKeys: boolean;
  ScaleIpAddress: string;
  LayoutCols: number;
  LayoutRows: number;
  LayoutStartKey: number;
  LayoutOrientation: number;
  LayoutLevels: number;
  DeleteTableRecords: boolean;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  BalconyScaleLayout?: BalconyScaleLayout[];
}

export interface BalconyScaleSectionTerminal {
  SectionID: number;
  TerminalID: number;
  ScaleIpAddress: string;
  IsMaster: boolean;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface BalconyScaleTicketDetail {
  DestinationType: number;
  DestinationID: number;
  ScaleCorrelativeID: bigint;
  OperationID: bigint;
  SalesmanID: bigint;
  TerminalID: number;
  WeightType: number;
  ItemQuantity: number;
  ItemPrice: number;
  ItemCost: number;
  ItemID: string;
  RecordDeleted: boolean;
  RecodProcessed: boolean;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface BalconyScaleTicketHeader {
  DestinationType: number;
  DestinationID: number;
  RecordNumber: bigint;
  TicketSection: number;
  MasterSlave: number;
  SalesmanID: bigint;
  ScaleCorrelativeID: bigint;
  ScaleCustomerID: bigint;
  DetailStartOperation: number;
  CreateDate: Date | null;
  CreateTime: Date | null;
  TotalValue: number;
  TotalWeight: number;
  TotalUnits: number;
  OperationsCount: number;
  RecodProcessed: boolean;
  TempTransactionGuid: string;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface Bank {
  BankID: number;
  BankKey: string;
  PartyID: bigint;
  BankCode: string;
  SwiftCode: string;
  Name: string;
  CountryID: string;
  Comments: string;
  WebAddress: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  CountryCodes?: CountryCodes;
  Party?: Party;
}

export interface BankAccountCodes {
  CountryID: string;
  BankCode: string;
  Swift: string;
  QuickSearchBankName: string;
  BankName: string;
  Category: string;
  HeadName: string;
  HeadID: string;
}

export interface BankAccountFormat {
  CountryID: string;
  AccountType: string;
  Format: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  CountryCodes?: CountryCodes;
  BankAccountFormatFields?: BankAccountFormatFields[];
}

export interface BankAccountFormatFields {
  CountryID: string;
  AccountType: string;
  FieldOrder: number;
  Identifying: string;
  FieldMin: number;
  FieldMax: number;
  FieldFills: string;
  FieldCharType: string;
  ScriptCode: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  BankAccountFormat?: BankAccountFormat;
}

export interface BankCategory {
  BankCategoryID: bigint;
  Description: string;
  Level: bigint;
  ParentID: bigint;
  ParentDescription: string;
  FullPath: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface BankLedgerAccount {
  InternalID: bigint;
  TransSerial: string;
  LedgerDocNumber: bigint;
  BankID: number;
  BankAccountID: bigint;
  ReconciledFlag: boolean;
  CreateDate: Date | null;
  DeferredPaymentDate: Date | null;
  ContractReferenceNumber: string;
  DocumentReferenceNumber: string;
  TotalAmount: number;
  TotalPendingAmount: number;
  OperationID: number;
  OperationDescription: string;
  TotalAccountSign: number;
  BalanceAmount: number;
  BalanceAccountSign: number;
  PartyTypeCode: number;
  PartyID: bigint;
  BankCategoryID: bigint;
  BankMethodID: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  RetentionTotalAmount: number;
  RetentionPendingAmount: number;
  DebitTotalAmount: number;
  CreditTotalAmount: number;
  ReferenceTransSerial: string;
  ReferenceTransDocument: string;
  ReferenceTransDocNumber: bigint;
  ReferenceTransOrder: bigint;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Operation?: Operation;
}

export interface BankMethod {
  BankMethodID: number;
  Description: string;
  DoNotExpressInReport: boolean;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface BankNotes {
  BankNoteID: number;
  CurrencyID: string;
  ObverseSidePicturePath: string;
  ReverseSidePicturePath: string;
  MoneyAmount: number;
  Currency?: Currency;
}

export interface BankReceipt {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  TransDocInstallmentID: number;
  CreateDate: Date | null;
  CreateTime: number;
  DeferredPaymentDate: Date | null;
  TotalAmount: number;
  TotalRetentionAmount: number;
  TotalExchangeDifference: number;
  PartyTypeCode: number;
  PartyID: bigint;
  PartyName: string;
  PartyAddress1: string;
  PartyAddress2: string;
  PartyPostalCode: string;
  PartyAddressID: number;
  PartyCountryID: string;
  PartyProvinceID: string;
  PartyLocalityID: bigint;
  PartyFederalTaxID: string;
  SettleTax: boolean;
  Comments: string;
  SalesmanID: bigint;
  ZoneID: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  RemittanceBankID: number;
  RemittanceAccountID: bigint;
  RemittanceSerial: string;
  RemittanceDocument: string;
  RemittanceDocNumber: bigint;
  TransStatus: number;
  TransPrinted: boolean;
  GroupedStatus: number;
  GroupedTransSerial: string;
  GroupedTransDocument: string;
  GroupedTransDocNumber: bigint;
  GroupedTransInstallmentID: number;
  ReferenceTransSerial: string;
  ReferenceTransDocument: string;
  ReferenceTransDocNumber: bigint;
  PartyBankAccountNumber: string;
  PartyBankCode: string;
  PartyBranchCode: string;
  PartyAccountCheckDigit: string;
  PartyBankName: string;
  CashAccountingSchemeType: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  DocumentsSeriesNumber?: DocumentsSeriesNumber;
}

export interface BankRemittance {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  BankID: number;
  AccountID: bigint;
  CreateDate: Date | null;
  CreateTime: number;
  DeferredPaymentDateStart: Date | null;
  DeferredPaymentDateEnd: Date | null;
  TotalAmount: number;
  TotalExchangeDifference: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  Comments: string;
  TransStatus: number;
  AccountingExportDate: Date | null;
  AccountingDate: Date | null;
  PrintedCopies: number;
  SystemEntryUser: string;
  UserChanged: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  DocumentsSeriesNumber?: DocumentsSeriesNumber;
  BankRemittanceDetails?: BankRemittanceDetails[];
}

export interface BankRemittanceDetails {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  LineItemID: bigint;
  CreateDate: Date | null;
  BankReceiptTransSerial: string;
  BankReceiptTransDocument: string;
  BankReceiptTransDocNumber: bigint;
  BankReceiptTransDocInstallmentID: number;
  BankReceiptHistoryID: number;
  TotalAmount: number;
  PartyID: bigint;
  PartyName: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  BankRemittance?: BankRemittance;
}

export interface BillOfExchangeTenderLineItem {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  TransOrder: number;
  DebitedTransSerial: string;
  DebitedTransDocument: string;
  DebitedTransDocNumber: number;
  UpdatedTransactionGuid: string;
  TenderDetailGuid: string;
  Guid: string;
  IssueDateOfTheBond: Date | null;
  MaturityDateOfTheBond: Date | null;
  OriginalBOEGuid: string;
  PreviousBOEGuid: string;
  PartyTypeCode: number;
  PartyID: bigint;
  PartyBankAccountID: bigint;
  PartyBankAccountNumber: string;
  PartyBankCode: string;
  PartyBranchCode: string;
  PartyAccountCheckDigit: string;
  PartyBankCountryID: string;
  RemittanceBankID: number;
  RemittanceBankAccountID: bigint;
  RemittanceAccountNumber: string;
  RemittanceCode: string;
  RemittanceBranchCode: string;
  RemittanceAccountCheckDigit: string;
  RemittanceBankCountryID: string;
  ContractReferenceNumber: string;
  BillChargesTo: number;
  Guarantor: string;
  StampTaxGroupID: string;
  StampTaxRate: number;
  StampTaxValue: number;
  SecuritiesStateID: number;
  FaceAmount: number;
  PendingAmount: number;
  Comments: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  TenderLineItem?: TenderLineItem;
}

export interface BuyGroups {
  GroupID: string;
  Description: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface BuyShareOtherCosts {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  ShareTransSerial: string;
  ShareTransDocument: string;
  ShareTransDocNumber: bigint;
  ShareAmount: number;
  ShareCurrencyID: string;
  ShareCurrencyExchange: number;
  ShareCurrencyFactor: number;
}

export interface BuyShareOtherCostsDetails {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  ShareTransSerial: string;
  ShareTransDocument: string;
  ShareTransDocNumber: bigint;
  ShareLineItemID: bigint;
  ShareItemID: string;
  ShareLotID: string;
  ShareColorID: number;
  ShareSizeID: number;
  ShareAmount: number;
}

export interface BuyTransaction {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  CreateDate: Date | null;
  SystemEntryDate: Date | null;
  SystemEntryUser: string;
  CreateTime: number;
  DeferredPaymentDate: Date | null;
  ActualDeliveryDate: Date | null;
  ContractReferenceNumber: string;
  DefaultWarehouse: number;
  PartyTypeCode: number;
  PartyID: bigint;
  PartyName: string;
  PartyAddress1: string;
  PartyAddress2: string;
  PartyPostalCode: string;
  PartyAddressID: number;
  PartyCountryID: string;
  PartyProvinceID: string;
  PartyLocalityID: bigint;
  PartyFederalTaxID: string;
  BillToPartyID: bigint;
  SalesmanID: bigint;
  PaymentID: number;
  TenderID: number;
  ZoneID: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  CarrierID: number;
  CarrierDescription: string;
  LoadPlaceID: number;
  LoadPlaceDescription: string;
  LoadPlaceDateTime: Date | null;
  UnloadPlaceID: number;
  UnloadPlaceDescription: string;
  UnloadPlaceDateTime: Date | null;
  TransactionTaxIncluded: boolean;
  TransactionCreditSale: boolean;
  LineItemsCount: bigint;
  TransactionConverted: boolean;
  Comments: string;
  RectificationMotive: string;
  RetentionTax: number;
  GlobalDiscountPercent: number;
  GlobalCumulativeDiscountPercent1: number;
  GlobalCumulativeDiscountPercent2: number;
  GlobalCumulativeDiscountPercent3: number;
  PaymentDiscountPercent: number;
  PaymentCumulativeDiscountPercent1: number;
  PaymentCumulativeDiscountPercent2: number;
  PaymentCumulativeDiscountPercent3: number;
  TotalGrossAmount: number;
  TotalLineItemDiscountAmount: number;
  TotalPaymentDiscountAmount: number;
  TotalRedeemedVoucherAmount: number;
  TotalGlobalDiscountAmount: number;
  TotalNetAmount: number;
  TotalTaxAmount: number;
  TotalOtherTaxesAmount: number;
  TotalFreightAmount: number;
  TotalFreightAmountWithTax: number;
  FreightTaxableGroupID: number;
  TotalAdjustmentAmount: number;
  TotalAmount: number;
  TotalAllowanceAmount: number;
  TotalChargeAmount: number;
  TotalRetentionAmount: number;
  TotalTransactionAmount: number;
  TotalPayedAmount: number;
  TotalAdvancementNetAmount: number;
  TotalAdvancementAmount: number;
  TotalAdvancementRetentionAmount: number;
  FrequentShopperPoints: number;
  DiscountFreqShopperPoints: number;
  SecondIssue: boolean;
  TransStatus: number;
  LogicStatus: number;
  StatusFlags: bigint;
  AccountingExportDate: Date | null;
  VoucherGiftTransSerial: string;
  VoucherGiftTransDocument: string;
  VoucherGiftTransDocNumber: bigint;
  VoucherGiftValue: number;
  CustomerImputeID: bigint;
  VehicleKilometers: number;
  SecondHandTaxRegimen: boolean;
  Signature: string;
  SignatureControl: number;
  SignatureInvoiceNo: string;
  SoftwareCertificateNumber: bigint;
  OriginatingON: string;
  HandWrittenTransactionNumber: string;
  TotalOtherCostAmount: number;
  AccountingOperation: string;
  CurrentStatusID: string;
  TransactionGuid: string;
  PrintedCopies: number;
  TillID: string;
  TransmissionStatus: number;
  DownPaymentInvoice: boolean;
  ShipToAddressDetailLine1: string;
  ShipToAddressDetailLine2: string;
  ShipToPostalCode: string;
  ShipToCountryID: string;
  ShipFromAddressDetailLine1: string;
  ShipFromAddressDetailLine2: string;
  ShipFromPostalCode: string;
  ShipFromCountryID: string;
  ATDocCodeId: string;
  ShipmentDocumentType: number;
  RegistrationPlate: string;
  CashAccountingSchemeType: number;
  PlantProtectionActivityAuth: string;
  PlantProtectionApplicator: string;
  UID: string;
  ChangeSetID: number;
  EInvoiceStatus: number;
  EInvoiceStatusDate: Date | null;
  EInvoiceSender: string;
  EInvoiceReceiver: string;
  EInvoiceSubmitDate: Date | null;
  EntityFiscalStatusID: number;
  LoyaltyId: string;
  LoyaltyUploadDate: Date | null;
  BalanceFreqShopperPoints: number;
  OnlineReceiptTagType: number;
  OnlineReceiptTag: string;
  OnlineReceiptToken: string;
  OnlineReceiptEmail: string;
  PABudgetExpenditureNumber: string;
  PAContractNumber: string;
  PACommitmentNumber: string;
  ATCUD: string;
  QRCode: string;
  PartyGLN: string;
  FrequentShopperProcessingState: number;
  PartyDelivery: string;
  WithholdingTaxType: string;
  SDNStatus: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  UserChanged: string;
  DtAlt: Date | null;
  HrAlt: number;
  DocumentsSeriesNumber?: DocumentsSeriesNumber;
  BuyTransactionDetails?: BuyTransactionDetails[];
}

export interface BuyTransactionDetails {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  CreateDate: Date | null;
  ActualDeliveryDate: Date | null;
  PhysicalQtyDate: Date | null;
  OriginCreateDate: Date | null;
  OriginTransSerial: string;
  OriginTransDocument: string;
  OriginTransDocNumber: bigint;
  OriginLineItemID: bigint;
  OriginLineItemSubID: number;
  OriginQuantity: number;
  OriginUnits: number;
  DestinationTransSerial: string;
  DestinationTransDocument: string;
  DestinationTransDocNumber: bigint;
  DestinationLineItemID: bigint;
  DestinationLineItemSubID: number;
  DestinationQuantity: number;
  DestinationUnits: number;
  TransactionConverted: boolean;
  LineItemID: bigint;
  LineItemSubID: number;
  ItemID: string;
  POSItemID: string;
  LotID: string;
  ItemType: number;
  SupplierItemID: string;
  ColorID: number;
  SizeID: number;
  Description: string;
  TaxableGroupID: number;
  UnitOfSaleID: string;
  Quantity: number;
  PackQuantity: number;
  Units: number;
  StockUnits: number;
  UnitConversion: number;
  Quantity1: number;
  Quantity2: number;
  Quantity3: number;
  Quantity4: number;
  ComponentQty: number;
  UnitCasesCount: number;
  UnitPrice: number;
  TaxIncludedPrice: number;
  OriginalUnitPrice: number;
  OriginalTaxIncludedPrice: number;
  ItemAverageUnitPrice: number;
  ItemAverageTaxIncludedPrice: number;
  ItemLastCostUnitPrice: number;
  ItemLastCostTaxIncludedPrice: number;
  DiscountPercent: number;
  DiscountValue: number;
  UnitDiscountValue: number;
  DiscountID: number;
  WarehouseID: number;
  CumulativeDiscountPercent1: number;
  CumulativeDiscountPercent2: number;
  CumulativeDiscountPercent3: number;
  PaymentDiscountPercent1: number;
  PaymentDiscountPercent2: number;
  PaymentDiscountPercent3: number;
  PartyTypeCode: number;
  PartyID: bigint;
  SalesmanID: bigint;
  TotalGrossAmount: number;
  TotalLineItemDiscountAmount: number;
  TotalPaymentDiscountAmount: number;
  TotalNetAmount: number;
  TotalNetBaseTaxAmount: number;
  TotalNetPrintAmout: number;
  TotalOtherTaxAmount: number;
  TotalTaxAmount: number;
  TotalAmount: number;
  TotalTaxIncludedAmount: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  PromotionApplied: boolean;
  TransactionDetailClosed: boolean;
  Comments: string;
  DetailGuid: string;
  Signature: string;
  RequiredDeliveryDateTime: Date | null;
  ProductCode: string;
  PlantProtectionSaleAuthNumber: string;
  ProductCategory: number;
  ImputeToCustomerID: bigint;
  CustomerImputeID: bigint;
  RetentionTax: number;
  AdvancementOriginItemID: string;
  AdvancementOriginDescription: string;
  AdvancementMethod: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date;
  HrAlt: number;
  Documents?: Documents;
  BuyTransaction?: BuyTransaction;
}

export interface CallLog {
  CallID: number;
  CallDate: Date;
  TimeStart: number;
  TimeEnd: number;
  CallTypeID: string;
  PartyTypeCode: number;
  PartyID: bigint;
  Contact: string;
  Comments: string;
  SalesmanID: bigint;
  MsgGUID: string;
  MsgID: string;
  SendType: number;
  SendMobileNumber: string;
  SendEmail: string;
  SendUser: string;
  SendStatus: number;
  TruncatedMessage: boolean;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  CallType?: CallType;
}

export interface CallType {
  CallTypeID: string;
  Description: string;
  InternalUse: boolean;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  CallLog?: CallLog[];
}

export interface CardServiceFee {
  PartyID: bigint;
  BankAccountID: bigint;
  TenderID: number;
  ExpirationDate: Date;
  AmountFeeEndingOn: number;
  IsRate: boolean;
  ServiceFee: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  PartyBankAccount?: PartyBankAccount;
  Tender?: Tender;
}

export interface CardTenderLineItem {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  TransOrder: number;
  TenderDetailGuid: string;
  BIDStore: string;
  BIDPos: string;
  BIDSession: string;
  CardType: string;
  CardMediaIssuer: string;
  CardNumber: string;
  CardExpirationDate: string;
  CardHolderName: string;
  ApprovalCode: string;
  ApprovalType: number;
  ApprovalDate: Date | null;
  ApprovalTime: Date | null;
  RequestNumber: bigint;
  ControlNumber: bigint;
  EPSReferenceNumber: string;
  HostProcessor: string;
  OriginRequestNumber: bigint;
  OriginEPSReferenceNumber: string;
  OriginTransSerial: string;
  OriginTransDocument: string;
  OriginTransDocNumber: bigint;
  AmountPaid: number;
  AmountTip: number;
  SalesmanID: bigint;
  DCC_CardholderChoice: boolean;
  DCC_CardholderCurrencyAlfaCode: string;
  DCC_CardholderCurrencyCode: number;
  DCC_CardholderCurrencyDesc: string;
  DCC_CardholderCurrencySymbol: string;
  DCC_ConversionRate: number;
  DCC_InformativeTicket: string;
  EMV_ApplicationLabel: string;
  EMV_AuthorizationResponseCode: string;
  EMV_ApplicationIdentifier: string;
  EMV_ApplicationTransactionCounter: bigint;
  EMV_TerminalVerificationResult: string;
  StoreTicket: string;
  CustomerTicket: string;
  PosIdentification: bigint;
  TillID: string;
  Guid: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  TenderLineItem?: TenderLineItem;
}

export interface Carrier {
  CarrierID: number;
  CarrierKey: string;
  Name: string;
  DefaultSaleFreightCharge: number;
  SaleFreightChargeLimit: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  TaxableGroupID: number;
  WorkstationID: number;
  ModeOfTransportID: string;
  CurrentKm: number;
  RegistrationPlate: string;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface CashDiscountTerms {
  CashDiscountTermID: string;
  Description: string;
  AplyToDueTransactions: boolean;
  MaximumNumberOfDays1: number;
  MaximumNumberOfDays2: number;
  MaximumNumberOfDays3: number;
  MaximumNumberOfDays4: number;
  MaximumNumberOfDays5: number;
  DiscountPercent0: number;
  DiscountPercent1: number;
  DiscountPercent2: number;
  DiscountPercent3: number;
  DiscountPercent4: number;
  DiscountPercent5: number;
  RestrictedToTenders: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface CheckTenderLineItem {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  TransOrder: number;
  DebitedTransSerial: string;
  DebitedTransDocument: string;
  DebitedTransDocNumber: number;
  UpdatedTransactionGuid: string;
  TenderDetailGuid: string;
  Guid: string;
  BankID: string;
  CheckAccountNumber: string;
  CheckSequenceNumber: string;
  CheckDeferredDate: Date | null;
  CheckAmount: number;
  PersonalIDNumber: string;
  AddressVerification: string;
  CustomerBirthDate: Date | null;
  InternalBankID: number;
  InternalBankAccountID: number;
  DoNotDeposit: boolean;
  TenderUse: number;
  SecuritiesStateID: number;
  CheckPrinted: boolean;
  TillID: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  TenderLineItem?: TenderLineItem;
}

export interface ClothingType {
  ClothingTypeID: number;
  Description: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Size?: Size[];
  StandardSizeGenderClothingType?: StandardSizeGenderClothingType[];
}

export interface Color {
  ColorID: number;
  ColorKey: string;
  Description: string;
  ColorCode: number;
  PantoneCode: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  CustomerContractItem?: CustomerContractItem[];
  ItemColor?: ItemColor[];
  ItemPredefinitionColor?: ItemPredefinitionColor[];
  POSIdentity?: POSIdentity[];
  Stock?: Stock[];
  StockHistory?: StockHistory[];
}

export interface ComissionBySalesman {
  SalesmanID: bigint;
  SubSalesmanID: bigint;
  Comission: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Salesman?: Salesman;
}

export interface ComissionPlan {
  ComissionPlanID: number;
  Description: string;
  ComissionPlanType: number;
  ComissionPlanValueType: number;
  Comission: number;
  HasExpireDate: boolean;
  InitialDate: Date | null;
  FinalDate: Date | null;
  Weight: number;
  Indexed: number;
  ComissionOnProfit: boolean;
  ComissionBasePrice: number;
  ComissionScalingGroupOption: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  ComissionPlanItems?: ComissionPlanItems[];
  ComissionPlanScaling?: ComissionPlanScaling[];
}

export interface ComissionPlanItems {
  ComissionPlanID: number;
  Item1: string;
  Item2: string;
  Size: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  ComissionPlan?: ComissionPlan;
}

export interface ComissionPlanScaling {
  ComissionPlanID: number;
  Amount: number;
  Comission: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  ComissionPlan?: ComissionPlan;
}

export interface CommunicationLog {
  StoreID: string;
  FileDate: Date;
  CommunicationOrder: number;
  CommunicationDate: Date | null;
  CommunicationTime: number;
  CommunicationType: number;
  FileType: number;
}

export interface ConfBranches {
  TableID: number;
  TableName: string;
  ExportAll: boolean;
  ExportTable: boolean;
  CanChangeRecord: boolean;
  HasWorkstationField: boolean;
  TableType: number;
  ItemRelated: boolean;
}

export interface ConfDiscFreqShopPoints {
  ConfDiscFreqShopPointsID: number;
  PointsValue: number;
  DiscountAmount: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface ConfExtraFields {
  ExtraFieldID: bigint;
  Description: string;
  AplyToTable: string;
  TextField: boolean;
  TextFieldLenght: number;
  TextAnswersList: string;
  LongTextAnswersList: string;
  NumberField: boolean;
  NumberFieldLenght: number;
  DataField: boolean;
  BooleanField: boolean;
  MemoField: boolean;
  IsMandatory: boolean;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  ConfExtraFieldsDocuments?: ConfExtraFieldsDocuments[];
  ItemExtraFields?: ItemExtraFields[];
  PartyExtraFields?: PartyExtraFields[];
  TransactionExtraFields?: TransactionExtraFields[];
}

export interface ConfExtraFieldsAnswer {
  ExtraFieldID: bigint;
  AnswerType: number;
  Formula: string;
  DefaultValue: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface ConfExtraFieldsDocuments {
  ExtraFieldID: bigint;
  TransDocumentID: string;
  WorkstationID: number;
  DtAlt: Date | null;
  HrAlt: number;
  ConfExtraFields?: ConfExtraFields;
}

export interface ConfGDPRFieldPurposes {
  FieldId: number;
  PurposeId: number;
  FieldOrder: number;
  InternalUse: boolean;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  ConfGDPRFields?: ConfGDPRFields;
  ConfGDPRPurposes?: ConfGDPRPurposes;
}

export interface ConfGDPRFields {
  Id: number;
  TableName: string;
  Field: string;
  FieldObjectName: string;
  GDPRType: number;
  GDPRPurposeType: number;
  WorkstationID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  ConfGDPRFieldPurposes?: ConfGDPRFieldPurposes[];
  GDPRConsents?: GDPRConsents[];
}

export interface ConfGDPRPurposes {
  PurposeId: number;
  PurposeDescription: string;
  LongDescription: string;
  ExpiresAfter: number;
  ExpirationUnit: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  ConfGDPRFieldPurposes?: ConfGDPRFieldPurposes[];
}

export interface ConfGeneric {
  Key1: string;
  Key2: string;
  SettingValue: string;
  ExportToBranch: boolean;
  ExportToStore: boolean;
  ExportToHeadOffice: boolean;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface ConfSpecial {
  ConfSpecialID: number;
  Active: boolean;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface ConfStores {
  StoreID: number;
  StoreKey: string;
  Description: string;
  HeadOffice: boolean;
  Version: number;
  VaspAgentId: string;
  Inactive: boolean;
  TaxRegionID: string;
  TaxEntity: string;
  StartTime: number;
  EndTime: number;
  ShowSchedulerReminders: boolean;
  CheckEntityEndorsement: string;
  CheckLocalityEndorsement: string;
  ReceiptAdvertising1: string;
  ReceiptAdvertising2: string;
  ReceiptAdvertising3: string;
  LineDisplayAdvertising: string;
  ItemTransactionIdleTime: number;
  UseOffLineMode: boolean;
  SyncOnlyMyWarehousesInOffLineMode: boolean;
  ExternalApp1: string;
  ExternalApp2: string;
  ExternalApp3: string;
  WndDelayMoneyChange: number;
  DefaultCustomerID: number;
  FrontOfficePermissionType: number;
  TransDocForVoucherGift: string;
  TransDocForOrders: string;
  TouchFamilySortOrder: number;
  TouchItemSortOrder: number;
  TransDocForReturnOrder: string;
  CanRestoreTempTranOnAll: boolean;
  IndexCaptionToTempTran: string;
  OfferTicketDescription: string;
  FrontOfficeLogo: string;
  BalconyScaleBarcodePrefix: string;
  TicketLine1: string;
  TicketLine2: string;
  TicketLine3: string;
  TicketLine4: string;
  TicketLine5: string;
  TicketLine6: string;
  TicketLine7: string;
  Picture: string;
  DefaultTicketLogo: string;
  AccountTransactionsInOffLineMode: boolean;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  ConfWorkstationStore?: ConfWorkstationStore[];
}

export interface ConfWorkstationDiverse {
  WorkstationID: number;
  DefaultItemCollectType: number;
  PrinterReportName: string;
  HaveBiometricHardware: boolean;
  BiometricEntryLog: boolean;
  PrinterLabelName: string;
  DefaultLayoutLabel: string;
  ItsPrinterLabelRollPaper: boolean;
  OperatorTenderStatement: boolean;
  TenderStatementTentatives: number;
  DefaultTransDocument: string;
  DefaultUser: number;
  AskForCashDate: boolean;
  DefaultTransSerial: string;
  DefaultOfflineTransSerial: string;
  DefaultOfflineTill: string;
  FrontOfficePassword: string;
  FrontOfficePasswordE: string;
  AutoPOSFunctionID: string;
  DefaultLayoutTill: string;
  TillPrintCopies: number;
  MobilephoneToSMSTill: string;
  RequestDetailChangeMotive: boolean;
  TempSaleTicketFileLayout: string;
  TempSaleTicketPrinter: number;
  BackupOnExitFlags: number;
  BackupDestinationFolder: string;
  BackupAfterThisTime: Date | null;
  DefaultMainTillID: string;
  DefaultTillID: string;
  NewBarCodeMask: string;
  SAFTDestinationFolder: string;
  PDFDestinationFolder: string;
  PDFConcatenatePages: boolean;
  WorkstationIDAlt: number;
  MachineID: string;
  Active: boolean;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface ConfWorkstationDocDefaults {
  WorkstationID: number;
  TransDocumentID: string;
  DefaultTransSerial: string;
  DefaultSalesman: bigint;
  DefaultShipment: number;
  DefaultPayment: number;
  DefaultZone: number;
  DefaultShipmentLoad: number;
  DefaultShipmentUnload: number;
  DefaultPrice: number;
  DefaultWarehouse: number;
  DefaultDiscount: number;
  DefaultSecWarehouse: number;
  WorkstationIDAlt: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface ConfWorkstationDocFields {
  WorkstationID: number;
  TransDocumentID: string;
  ReadOrder: number;
  TransDocFieldID: number;
  TransDocFieldSize: bigint;
  TransDocFieldStatus: boolean;
  TransDocFieldListID: number;
  ConfigurationOwnerID: number;
  WorkstationIDAlt: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface ConfWorkstationDocFieldsTemplates {
  TemplateID: number;
  TransDocumentType: number;
  StockBehavior: number;
  ReadOrder: number;
  TransDocFieldID: number;
  TransDocFieldSize: bigint;
  TransDocFieldStatus: boolean;
  TransDocFieldListID: number;
  ConfigurationOwnerID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface ConfWorkstationDocPrinter {
  WorkstationID: number;
  TransDocumentID: string;
  PrintFileLayoutName: string;
  PrintPrinterType: number;
  PrintCopies: number;
  PrintPrinterName: string;
  PrintPrinterHardwareID: number;
  AskForPrinter: boolean;
  AskForPrint: boolean;
  WorkstationIDAlt: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Documents?: Documents;
}

export interface ConfWorkstationDocument {
  WorkstationID: number;
  TransDocumentID: string;
  UpdateStock: boolean;
  UpdateLedgerAccount: boolean;
  UpdateSalesmanLedgerAccount: boolean;
  TaxIncludedPrice: boolean;
  PrintPrinterType: number;
  PrintFileLayoutName: string;
  PrintCopies: number;
  PrintPrinterName: string;
  AskForDocSummary: boolean;
  AskForPrinter: boolean;
  AskForPrint: boolean;
  AskForTender: boolean;
  AskForLineValidation: boolean;
  ShowCashChange: boolean;
  WorkstationIDAlt: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Documents?: Documents;
}

export interface ConfWorkstationHardware {
  WorkstationID: number;
  HardwareType: number;
  HardwareID: number;
  POSTemplateID: number;
  POSTemplateTechnology: number;
  Description: string;
  DeviceLDNName: string;
  HardwareTechnology: number;
  HardwareSettings: string;
  Port: string;
  BaudRate: bigint;
  BitLength: number;
  Parity: string;
  StopBit: number;
  Handshake: number;
  CapTransaction: boolean;
  CapCustomerDisplayWriteLine: boolean;
  MSRTrack: number;
  WorkstationIDAlt: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface ConfWorkstationKeyboard {
  WorkstationID: number;
  POSKeyCode: bigint;
  POSShift: number;
  POSFunctionID: string;
  POSKeyName: string;
  FunctionKeyType: number;
  KeyPassword: string;
  KeyPasswordE: string;
  UserAlt: number;
  WorkstationIDAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface ConfWorkstationOfflineSeries {
  WorkstationID: number;
  Series: string;
  WorkstationIDAlt: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface ConfWorkstationPOSPassword {
  WorkstationID: number;
  POSOptionID: number;
  POSPassword: string;
  POSPasswordE: string;
  WorkstationIDAlt: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface ConfWorkstationSEQR {
  WorkstationID: number;
  SEQRTerminalName: string;
  SEQRPassword: string;
  SEQRTerminalID: string;
  SEQRID: string;
  SEQRFooter: string;
  SEQRCashierId: string;
  SEQRPrintStoreTicket: boolean;
  WorkstationIDAlt: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface ConfWorkstationShortCut {
  WorkstationID: number;
  TransDocumentID: string;
  DefaultTransDocumentID: string;
  AreaID: number;
  WorkstationIDAlt: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface ConfWorkstationStore {
  StoreID: number;
  StoreWorkstation: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  ConfStores?: ConfStores;
}

export interface ConfWorkstationTouchCfg {
  WorkstationID: number;
  TouchHomePage: bigint;
  UseCursor: boolean;
  ToolbarRight: boolean;
  ShowActionInfoMessages: boolean;
  ShowUnitPriceAndDiscount: boolean;
  ShowItemID: boolean;
  ShowBankNotesByDefault: boolean;
  TemplatePageName: string;
  ClearAdsViewerDelay: number;
  OnTouchUseRoute: boolean;
  UseSmallVirtualKeyboard: boolean;
  DoNotShowVirtualKeyboard: boolean;
  WorkstationIDAlt: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface CostCenters {
  CostCenterID: string;
  Description: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface CountryCodes {
  CountryID: string;
  CountryKey: string;
  ISOCountryID: string;
  CountryName: string;
  EANUCCPrefix: string;
  FederalTaxIDFormat: string;
  FederalTaxScriptCode: string;
  UID: string;
  ChangeSetID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Bank?: Bank[];
  BankAccountFormat?: BankAccountFormat[];
  ProvinceCodes?: ProvinceCodes[];
  TaxAuthority?: TaxAuthority[];
}

export interface Currency {
  CurrencyID: string;
  CurrencyKey: string;
  SaleExchange: number;
  BuyExchange: number;
  ExchangeDate: Date | null;
  ItsEuroCurrency: boolean;
  EuroConversionRate: number;
  RelatedCurrencyID: string;
  Symbol: string;
  SymbolPosition: string;
  NegativeFormat: string;
  DecimalSeparator: string;
  GroupSeparator: string;
  DecimalPlaces: number;
  PriceItemDecimalPlaces: number;
  FormatMask: string;
  ISOCode: string;
  Inactive: boolean;
  UID: string;
  ChangeSetID: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  BankNotes?: BankNotes[];
  CurrencyNames?: CurrencyNames[];
  PartyBankAccount?: PartyBankAccount[];
  Zone?: Zone[];
}

export interface CurrencyNames {
  CurrencyID: string;
  LanguageID: string;
  Description: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Currency?: Currency;
}

export interface Customer {
  CustomerID: bigint;
  PartyID: bigint;
  CustomerKey: string;
  CreateDate: Date | null;
  OrganizationName: string;
  FederalTaxID: string;
  KeyFederalTaxID: bigint;
  PersonalIDNumber: string;
  SalesmanID: bigint;
  ZoneID: number;
  PaymentID: number;
  CashDiscountTermID: string;
  TenderID: number;
  CarrierID: number;
  WebAddress: string;
  EmailAddress: string;
  Telephone1: string;
  Telephone2: string;
  Telephone3: string;
  Telephone4: string;
  MobileTelephone1: string;
  MobileTelephone2: string;
  Fax: string;
  CustomerGroupDescription: string;
  PriceLineID: number;
  CustomerLevel: number;
  LastUpdated: Date | null;
  LastTransSerial: string;
  LastTransDocument: string;
  LastTransDocNumber: bigint;
  TaxablePersonType: number;
  LimitType: number;
  LimitPurchaseDays: number;
  LimitPurchaseValue: number;
  LimitPurchaseCurrencyID: string;
  LimitPurchaseExchange: number;
  LimitPurchaseFactor: number;
  DirectDiscount: number;
  GlobalDiscount: number;
  Comments: string;
  CustomerPicturePath: string;
  EntityFiscalStatusID: number;
  AplyRetentionTax: boolean;
  RetentionTax: number;
  TemporaryID: string;
  IntranetUsername: string;
  IntranetPassword: string;
  IntranetGroup: string;
  IntranetActive: boolean;
  IntranetEMailDaily: boolean;
  IntranetEMailWeekly: boolean;
  IntranetLastVisit: Date | null;
  Locked: boolean;
  RemittanceBankID: number;
  RemittanceAccountID: number;
  SendXMLMailAfterSave: boolean;
  DefaultTransSerial: string;
  DefaultTransDocument: string;
  DefaultTransDocNumber: bigint;
  FrequentShopperPoints: number;
  CardID: string;
  UseIntraStat: boolean;
  IntraStatPortID: string;
  CustomerDefaultTransSerial: string;
  CustomerPrintCopies: number;
  ActiveParty: boolean;
  RelationshipID: number;
  DefaultBillToCustomerID: bigint;
  CashAccountingSchemeSignIn: Date | null;
  CashAccountingSchemeSignOut: Date | null;
  UID: string;
  ChangeSetID: number;
  IssuingOutput: number;
  PlantProtectionActivityAuth: string;
  EInvoicingEmail: string;
  O365Id: string;
  GDPRConsent: boolean;
  GDPRConsentDate: Date | null;
  GDPRSystemUserGUID: string;
  GDPRForgetDate: Date | null;
  GDPRForgetUserGUID: string;
  GDPRRequestDate: Date | null;
  GDPRRequestEmail: string;
  GDPRRequestUserGUID: string;
  GDPRStateDate: Date | null;
  GDPRStateUserGUID: string;
  GDPRState: number;
  IsPublicAdministration: boolean;
  PricingID: number;
  GLN: string;
  CustomerSupplierID: string;
  Delivery: string;
  EInvoiceChannel: string;
  WithholdingTaxType: string;
  WhatsAppConsent: boolean;
  PACustomerID: string;
  XCHOnboarded: boolean;
  XCHConsent: boolean;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date;
  HrAlt: number;
  EntityFiscalStatus?: EntityFiscalStatus;
  Payment?: Payment;
  Salesman?: Salesman;
  Tender?: Tender;
  Zone?: Zone;
  CustomerContract?: CustomerContract[];
  CustomerContractItem?: CustomerContractItem[];
  CustomerImpute?: CustomerImpute[];
  CustomerLedgerAccount?: CustomerLedgerAccount[];
  ItemReserve?: ItemReserve[];
  SubRoutes?: SubRoutes[];
}

export interface CustomerContract {
  CustomerID: bigint;
  CustomerContractID: string;
  DocumentToCreate: string;
  CreateToTempTransaction: boolean;
  DocumentToConvert: string;
  WarehouseID: number;
  Periodicity: number;
  Days: number;
  InitialDate: Date | null;
  FinalDate: Date | null;
  NextContractDate: Date | null;
  LastContractDate: Date | null;
  ContractTaxIncluded: boolean;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  CarrierID: number;
  CarrierName: string;
  LoadingPlaceId: number;
  LoadingPlaceName: string;
  UnloadingPlaceId: number;
  UnloadingPlaceName: string;
  PaymentID: number;
  PartyAddressID: number;
  IncludeDetailsInfo: boolean;
  SerialToCreate: string;
  PriceLineId: number;
  LoadingPlaceAddressID: number;
  UnloadingPlaceAddressID: number;
  GlobalDiscountPercent: number;
  Customer?: Customer;
  Warehouse?: Warehouse;
}

export interface CustomerContractItem {
  CustomerID: bigint;
  CustomerContractID: string;
  ItemID: string;
  LineItemID: bigint;
  ColorID: number;
  SizeID: number;
  ItemDescription: string;
  Quantity: number;
  UnitPrice: number;
  TaxIncludedPrice: number;
  Discount: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Color?: Color;
  Customer?: Customer;
  Size?: Size;
}

export interface CustomerGroups {
  GroupID: number;
  Description: string;
  GroupKey: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface CustomerImpute {
  CustomerImputeID: bigint;
  CustomerImputeType: number;
  Description: string;
  CustomerID: bigint;
  DefaultBillToCustomerID: bigint;
  WorkStartDate: Date | null;
  WorkEndDate: Date | null;
  WorkBudgetValue: number;
  WorkCurrencyID: string;
  WorkCurrencyExchange: number;
  WorkCurrencyFactor: number;
  VehicleMake: string;
  VehicleModel: string;
  VehicleYear: number;
  VehicleMonth: number;
  VehicleDateOfFirstRegistration: Date | null;
  VehicleColor: string;
  VehicleFrameNumber: string;
  VehicleEngineNumber: string;
  VehicleKilometers: number;
  Comments: string;
  Discontinued: boolean;
  CostCenterID1: string;
  CostCenterID2: string;
  CostCenterID3: string;
  CostCenterID4: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Customer?: Customer;
}

export interface CustomerLedgerAccount {
  LedgerCounter: Decimal;
  LedgerGuid: string;
  InternalID: bigint;
  ReconciledFlag: boolean;
  CreateDate: Date | null;
  DeferredPaymentDate: Date | null;
  SystemEntryDate: Date | null;
  ContractReferenceNumber: string;
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  TransInstallmentID: number;
  TotalAmount: number;
  TotalPendingAmount: number;
  OperationID: number;
  TotalAccountSign: number;
  BalanceAmount: number;
  BalanceAccountSign: number;
  PartyTypeCode: number;
  PartyID: bigint;
  SalesmanID: bigint;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  ExchangeDifCurrency: string;
  RetentionTotalAmount: number;
  RetentionPendingAmount: number;
  RetentionStampDutyTotal: number;
  RetentionStampDutyPending: number;
  DebitTotalAmount: number;
  CreditTotalAmount: number;
  TransStatus: number;
  PartyAccountTypeID: string;
  OriginTransSerial: string;
  OriginTransDocument: string;
  OriginTransDocNumber: bigint;
  PartyAddressID: number;
  CashAccountingSchemeType: number;
  ComissionAmount: number;
  BalanceCompensationFlag: boolean;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Customer?: Customer;
  Operation?: Operation;
}

export interface CustomerLedgerLockout {
  CustomerLedgerLockoutID: bigint;
  WorkstationID: number;
  CustomerID: bigint;
  AccountTypes: string;
  LockDate: Date | null;
  State: number;
  WorkstationIDAlt: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface CustomReports {
  ReportId: number;
  Name: string;
  Description: string;
}

export interface Departments {
  DepartmentID: string;
  Description: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface DetailChangeMotive {
  DetailChangeMotiveID: string;
  Description: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface DirectDebitTenderLineItem {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  TransOrder: number;
  DebitedTransSerial: string;
  DebitedTransDocument: string;
  DebitedTransDocNumber: number;
  UpdatedTransactionGuid: string;
  TenderDetailGuid: string;
  Guid: string;
  DirectDebitDate: Date | null;
  PartyTypeCode: number;
  PartyID: bigint;
  PartyBankAccountID: bigint;
  PartyBankAccountNumber: string;
  PartyBankCode: string;
  PartyBranchCode: string;
  PartyAccountCheckDigit: string;
  PartyBankCountryID: string;
  RemittanceBankID: number;
  RemittanceBankAccountID: bigint;
  SecuritiesStateID: number;
  FaceAmount: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  TenderLineItem?: TenderLineItem;
}

export interface DiscountDefinition {
  DiscountID: number;
  DiscountKey: string;
  Description: string;
  CriteriaType: number;
  EvaluationTime: number;
  OfferTypeFlags: number;
  ScalingMode: number;
  GroupScaledItems: boolean;
  ScalingType: number;
  DiscountPriceFlags: number;
  DiscountFlags: number;
  PriceFlags: number;
  HasExpireDate: boolean;
  StartDate: Date | null;
  EndDate: Date | null;
  TimeIntervals: string;
  DiscountWeekDays: number;
  Discount1: number;
  Discount2: number;
  Discount3: number;
  DiscountValue: number;
  PriceChargePercentage: number;
  PriceChargeValue: number;
  PriceLineID: number;
  UnitPrice: number;
  TaxIncludedPrice: number;
  VoucherGiftValue: number;
  ItemID: string;
  SizeID: number;
  ColorID: number;
  FamilyID: bigint;
  ItemOfferType: number;
  EligibilityTypeFlag: number;
  OfferQuantityMustExist: boolean;
  WorkstationList: string;
  Cumulative: boolean;
  CanBeEvaluatedByOthers: boolean;
  UseTaxIncludedValues: boolean;
  Inactive: boolean;
  UID: string;
  ChangeSetID: number;
  PriceUnitID: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  DiscountEligibleItem?: DiscountEligibleItem[];
  DiscountScalingItem?: DiscountScalingItem[];
}

export interface DiscountEligibleItem {
  DiscountID: number;
  ItemID: string;
  SizeID: number;
  FamilyID: bigint;
  CustomerLevel: number;
  SalesmanLevel: number;
  CustomerID: bigint;
  UnitPrice: number;
  TaxIncludedPrice: number;
  DiscountPercent: number;
  ExcludesGlobalDiscount: boolean;
  PriceUnitID: string;
  ColorID: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  DiscountDefinition?: DiscountDefinition;
}

export interface DiscountScalingItem {
  DiscountID: number;
  Quantity: number;
  MeasureQuantity: number;
  OfferQuantity: number;
  Discount1: number;
  Discount2: number;
  Discount3: number;
  DiscountValue: number;
  PriceChargePercentage: number;
  PriceChargeValue: number;
  PriceLineID: number;
  VoucherGiftValue: number;
  UnitPrice: number;
  TaxIncludedPrice: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  DiscountDefinition?: DiscountDefinition;
}

export interface DiscountStores {
  DiscountID: number;
  StoreID: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface DiscPointsTransaction {
  TransSerial: string;
  TransDocNumber: bigint;
  CreateDate: Date | null;
  CreateTime: number;
  PartyID: bigint;
  SalesmanID: bigint;
  DiscountedPoints: number;
  ReasonCode: number;
  Comments: string;
  TotalAmount: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  VoucherTransSerial: string;
  VoucherTransDocument: string;
  VoucherTransDocNumber: bigint;
  ItemID: string;
  ItemQuantity: number;
  TransStatus: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface Documents {
  TransDocumentID: string;
  TransDocumentKey: string;
  ListOrder: number;
  TransDocType: bigint;
  TaxIncludedPrice: boolean;
  OperationID: number;
  SecondOperationID: number;
  StockBehavior: number;
  AccountBehavior: number;
  AccountUsed: number;
  UpdateTaxReport: boolean;
  SignTaxReport: string;
  UpdateSummarizeReport: boolean;
  SignSummarizeReport: string;
  UpdateSalesReport: boolean;
  SignSalesReport: string;
  UpdatePurchaseReport: boolean;
  SignPurchaseReport: string;
  UpdateTenderReport: boolean;
  SignTenderReport: string;
  TenderReceiveType: string;
  CanBeTurnaround: boolean;
  CreditControl: boolean;
  CanUsedAsPayment: boolean;
  RectifyingTransaction: boolean;
  TicketPrintOnly1LineHeader: boolean;
  TicketPrintDocumentID: boolean;
  DefaultPrice: string;
  BankReceiptDocID: string;
  AccountTransactionDocID: string;
  AccountingOperation: string;
  DocumentIDBeingUsedBy: number;
  ValidateCreateDate: boolean;
  VoucherExpirationDays: number;
  VoucherDeductibleAfter: number;
  ForceContractReference: boolean;
  AskForLaundryFields: boolean;
  MandatoryPartyID: boolean;
  OnPrintSendEmailCC: string;
  AskForProperties: boolean;
  MandatoryFederalTaxID: boolean;
  DefaultStatusID: string;
  UpdateTenderOnTillReport: boolean;
  TransactionNatureID: number;
  TransferAccountTypes: string;
  OtherDebitAccountTypeID: string;
  ExchangeDifferenceAccountTypeID: string;
  CheckOutboundPropertyExistence: boolean;
  MandatoryExtraFields: boolean;
  SecuritiesStatusAllowed: string;
  SecuritiesStatusTarget: string;
  Inactive: boolean;
  CanSaveZeroValue: boolean;
  DefaultAddressType: number;
  AskForVoidReason: boolean;
  MandatoryDocumentReference: boolean;
  InvoiceTransDocID: string;
  ActAsAdvancement: boolean;
  AskForBillToParty: boolean;
  WorkstationID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  AppDocumentsGroups?: AppDocumentsGroups[];
  BuyTransactionDetails?: BuyTransactionDetails[];
  ConfWorkstationDocPrinter?: ConfWorkstationDocPrinter[];
  ConfWorkstationDocument?: ConfWorkstationDocument[];
  Operation?: Operation;
  DocumentsName?: DocumentsName[];
  DocumentsSeriesNumber?: DocumentsSeriesNumber[];
  PostVoidTranPropDetails?: PostVoidTranPropDetails[];
  PostVoidTransaction?: PostVoidTransaction[];
  SaleTransactionDetails?: SaleTransactionDetails[];
  TransactionStatusFlow?: TransactionStatusFlow[];
}

export interface DocumentsAccountUsed {
  TransDocumentID: string;
  AccountUsed: number;
  AccountTypeID: string;
  DefaultAccountTypeID: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface DocumentsName {
  TransDocumentID: string;
  LanguageID: string;
  Description: string;
  ShortDescription: string;
  Comments: string;
  WorkstationID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Documents?: Documents;
  LanguageCodes?: LanguageCodes;
}

export interface DocumentsSeries {
  Series: string;
  SeriesKey: string;
  OffLineSeries: boolean;
  TaxOnPayment: boolean;
  DoNotExportToBranch: boolean;
  IsInactive: boolean;
  SeriesType: number;
  TaxAuthorityReportType: number;
  SelfBillingSupplierID: number;
  EACode: string;
  CashAccountingScheme: boolean;
  SecondHandTaxRegimen: boolean;
  IssuingOutput: number;
  RXOStoreID: string;
  OnLineSeries: boolean;
  ValidThrough: Date | null;
  ReplaceByTransSerial: string;
  OSS: boolean;
  IOSS: boolean;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  AppDocumentsSeriesGroups?: AppDocumentsSeriesGroups[];
  DocumentsSeriesNumber?: DocumentsSeriesNumber[];
}

export interface DocumentsSeriesNumber {
  Series: string;
  TransDocID: string;
  TransDocNumber: bigint;
  Active: boolean;
  LastCreateDate: Date | null;
  LastDocumentSignature: string;
  SoftwareCertificateNumber: bigint;
  SignatureControl: number;
  LCSync: boolean;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  AccountTransaction?: AccountTransaction[];
  BankReceipt?: BankReceipt[];
  BankRemittance?: BankRemittance[];
  BuyTransaction?: BuyTransaction[];
  Documents?: Documents;
  DocumentsSeries?: DocumentsSeries;
  LedgerAccountTransaction?: LedgerAccountTransaction[];
  PostVoidAccountTransaction?: PostVoidAccountTransaction[];
  PostVoidTransactionHeader?: PostVoidTransactionHeader[];
  SaleTransaction?: SaleTransaction[];
  TaxTransaction?: TaxTransaction[];
  TenderTransaction?: TenderTransaction[];
  TransactionExtraFields?: TransactionExtraFields[];
  Voucher?: Voucher[];
}

export interface DocumentsSeriesOther {
  Series: string;
  TransDocType: bigint;
  TransactionNatureID: number;
  PrintFileLayoutName: string;
  PrintPrinterType: number;
  PrintCopies: number;
  PrintPrinterName: string;
  PrintPrinterHardwareID: number;
  AskForPrinter: boolean;
  AskForPrint: boolean;
  UseDigitalArchive: boolean;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface DocumentsSeriesStores {
  Series: string;
  StoreID: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface EletronicInvoiceReport {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  TransactionGuid: string;
  ReportDateTime: Date | null;
  ReportType: number;
  ReturnCode: number;
  ReturnMessage: string;
  SystemEntryUser: string;
  EstimatedDeliveryDateTime: Date | null;
  AuditFileName: string;
  WorkstationID: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface EmailAddress {
  EmailAddressID: bigint;
  PartyID: bigint;
  PersonID: bigint;
  EmailAddress: string;
  DailyMailingListFlag: boolean;
  MonthlyMailingListFlag: boolean;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Person?: Person;
}

export interface EMVTransactionCounters {
  BIDPOS: string;
  BIDCounter: bigint;
}

export interface EntityFiscalStatus {
  EntityFiscalStatusID: number;
  Description: string;
  ZoneType: number;
  InternalUse: boolean;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Customer?: Customer[];
  Supplier?: Supplier[];
  TaxGroupFiscalStatus?: TaxGroupFiscalStatus[];
}

export interface EntryLogSalesperson {
  WorkstationID: number;
  EntryID: bigint;
  EntryType: number;
  SalesmanID: bigint;
  EntryDate: Date | null;
  EntryHourLogin: Date | null;
  EntryHourLogout: Date | null;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface Events {
  EventID: number;
  WorkstationCreated: number;
  MasterEventID: number;
  MasterWorkstationCreated: number;
  Label: number;
  Subject: string;
  Location: string;
  Description: string;
  StartDate: Date | null;
  EndDate: Date | null;
  StartTime: number;
  EndTime: number;
  AllDayEvent: boolean;
  MeetingFlag: boolean;
  PrivateFlag: boolean;
  BusyStatus: number;
  Importance: number;
  EventType: number;
  PartyID: bigint;
  RecurrenceState: number;
  ISExceptionDeleted: boolean;
  ISException: boolean;
  IsReminder: boolean;
  ReminderSoundFile: string;
  ReminderMinutesBeforeStart: bigint;
  EventPartyType: number;
  EventPartyID: bigint;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface ExpeditionReport {
  Filename: string;
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  LogicOperationNumber: bigint;
  LogicTransDocNumber: bigint;
  ActualDeliveryDate: Date | null;
  PartyID: bigint;
  PartyName: string;
  DestinationTransSerial: string;
  DestinationTransDocument: string;
  DestinationTransDocNumber: bigint;
}

export interface ExpeditionReportDetails {
  Filename: string;
  LogicTransDocNumber: bigint;
  LogicLineItemID: bigint;
  LineItemID: bigint;
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  ItemID: string;
  Quantity: number;
}

export interface ExternalVASPFAM {
  VASPFamilyID: string;
  Description: string;
  ShortDescription: string;
  GESPOSFamilyID: bigint;
}

export interface Family {
  FamilyID: bigint;
  FamilyKey: string;
  Description: string;
  Level: number;
  ParentDescription: string;
  MaximumDiscountAllowed: number;
  DOSFamilyID: bigint;
  FullPath: string;
  ParentID: bigint;
  Service: boolean;
  FamilyType: number;
  LabelCopies: number;
  FamilyPicturePath: string;
  ItemDefaultUnit: string;
  TillReportSummary: boolean;
  ExportToTouch: boolean;
  TouchButtonFontColor: bigint;
  TouchLastLevel: boolean;
  PropertyID1: string;
  PropertyID2: string;
  PropertyID3: string;
  InformationField1: string;
  InformationField2: string;
  InformationField3: string;
  InformationField4: string;
  InformationField5: string;
  InformationField6: string;
  InformationField7: string;
  InformationField8: string;
  InformationField9: string;
  InformationField10: string;
  MonthWarranty: number;
  MandatoryCustomer: boolean;
  ProductCategory: number;
  UID: string;
  ChangeSetID: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date;
  HrAlt: number;
  Item?: Item[];
  SupplierFamilyDiscounts?: SupplierFamilyDiscounts[];
}

export interface FamilyProfitRate {
  FamilyID: bigint;
  PriceLineID: number;
  ProfitRate: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface FrequentShopperPoints {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  CreateDate: Date | null;
  PartyID: bigint;
  Points: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface FuncPOS {
  POSFunctionID: string;
  LocalizedFunction: string;
  LanguageID: string;
  LongDescription: string;
  ShortDescription: string;
  ApliesTo: number;
  CanBeUsedOffLine: boolean;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  LanguageCodes?: LanguageCodes;
}

export interface GDPRConsents {
  ConsentId: bigint;
  FieldId: number;
  PartyType: number;
  PartyId: bigint;
  PurposeType: number;
  PurposeDescription: string;
  ListOrder: number;
  ConsentDate: Date | null;
  ExpiryDate: Date | null;
  Active: boolean;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  ConfGDPRFields?: ConfGDPRFields;
}

export interface Gender {
  GenderID: number;
  Description: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Size?: Size[];
  StandardSizeGenderClothingType?: StandardSizeGenderClothingType[];
}

export interface Installment {
  PaymentID: number;
  InstallmentID: number;
  DaysSinceLastPayment: number;
  InstallmentPercent: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Payment?: Payment;
}

export interface InterfaceDefinition {
  InterfaceID: number;
  Description: string;
  CurrencyID: string;
  DataType: number;
  SepDecimal: string;
  SepFields: string;
  SepRecords: string;
  StartRecord: number;
  EndRecord: number;
  KeepFieldSize: boolean;
  Active: boolean;
  DelImportedFiles: boolean;
  ImpExecutionMode: number;
  ImpStartTime: Date | null;
  ImpStartDate: Date | null;
  ImpRecurrenceType: number;
  ImpRecurrenceInterval: number;
  ImpDaysOfWeek: string;
  DelOldExportedFiles: boolean;
  ExpExecutionMode: number;
  ExpStartTime: Date | null;
  ExpStartDate: Date | null;
  ExpRecurrenceType: number;
  ExpRecurrenceInterval: number;
  ExpDaysOfWeek: string;
  FlagNewClient: string;
  FlagNullify: string;
  MainFileExport: string;
  DefaultFolderOutput: string;
  DefaultFolderInput: string;
  IntConnectionString: string;
  ExternalSwCertificateNumber: bigint;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface InterfaceMapDocPrefix {
  InterfaceID: number;
  SourceDocPrefix: string;
  GesposDocPrefix: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface InterfaceMapFields {
  MapTableID: number;
  Order: number;
  FieldName: string;
  Startpos: number;
  FieldLenght: number;
  DecimalsPlaces: number;
  FieldType: number;
  FieldMask: string;
  DecSeparator: string;
  Padzeros: boolean;
  Value: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface InterfaceMapTable {
  MapTableID: number;
  InterfaceID: number;
  GesPOSTable: string;
  GesPOSTableID: number;
  DestFileName: string;
  MapTableType: number;
  FilesWithTerminalID: number;
  TerminalIDSize: number;
  Description: string;
  FilterBy: number;
  TableHeader: string;
  UseOperationID: number;
  UseAddOp: number;
  UseRemOp: number;
  UseChgOp: number;
  ExpLastDays: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface InterfaceMapTenderID {
  InterfaceID: number;
  SourceTenderID: string;
  GesposTenderID: number;
  GesposTenderType: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface InterfaceTerminals {
  TerminalID: number;
  WarehouseID: number;
  CentralWarehouseID: number;
  SalesmanID: bigint;
  AssociatedInterface: number;
  TransSerial: string;
  FolderOutput: string;
  FolderInput: string;
  StockControl: boolean;
  ExpeditionPlace: boolean;
  ChangePrice: boolean;
  AllowDiscounts: boolean;
  DiscountsOnReceipts: boolean;
  DiscountsOnReceiving: boolean;
  FindBestPrice: boolean;
  MinimumSellPrice: boolean;
  UseTaxIncludedPrice: boolean;
  DefaultTillID: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface IntraStatCN {
  CombinedNomenclature: string;
  Description: string;
  UseSupplementaryUnits: boolean;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface IntraStatDeliveryTerm {
  DeliveryTermID: string;
  Description: string;
  UserAlt: number;
  WorkstationID: number;
  SessionID: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface IntraStatModeOfTransport {
  ModeOfTransportID: string;
  Description: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface IntraStatNatureA {
  NatureA: string;
  Description: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  IntraStatNatureB?: IntraStatNatureB[];
}

export interface IntraStatNatureB {
  NatureA: string;
  NatureB: string;
  Description: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  IntraStatNatureA?: IntraStatNatureA;
}

export interface IntraStatPort {
  PortID: string;
  Description: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface IntraStatRegion {
  RegionID: string;
  Description: string;
  UserAlt: number;
  WorkstationID: number;
  SessionID: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface IntraStatReport {
  TransDocType: number;
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  CreateDate: Date | null;
  IntraStatNatureA: string;
  IntraStatNatureB: string;
  DeliveryTerm: string;
  IsCompleted: boolean;
}

export interface IssuedTmpTaxTrans {
  TransDocType: number;
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  IndexValue: bigint;
  CreateDate: Date | null;
  TaxGroupID: string;
  TaxSequenceID: number;
  TaxRate: number;
  TotalNetAmount: number;
  TotalTaxAmount: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  CountryId: string;
  TaxRegionId: string;
  TransInstallmentId: number;
  TaxItemType: number;
  TaxExemptionReasonCode: string;
  TaxCode: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface IssuedTmpTaxTransDetail {
  TransDocType: number;
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  IndexValue: bigint;
  CreateDate: Date | null;
  LineItemID: bigint;
  LineItemSubID: number;
  ItemID: string;
  TaxGroupID: string;
  TaxSequenceID: number;
  TaxRate: number;
  TotalNetAmount: number;
  TotalTaxAmount: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  CountryId: string;
  TaxRegionId: string;
  TransInstallmentId: number;
  TaxItemType: number;
  TaxExemptionReasonCode: string;
  TaxCode: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface IssuedTmpTaxTransDetailParty {
  TransDocType: number;
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  IndexValue: bigint;
  LineItemID: bigint;
  LineItemSubID: number;
  ItemID: string;
  TaxGroupID: string;
  TaxSequenceID: number;
  TaxGroupName: string;
  PartyID: bigint;
  PartyName: string;
  PartyWebAddress: string;
  TaxItemType: number;
  TaxExemptionReasonCode: string;
  TaxCode: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface IssuedTmpTrans {
  TransDocType: number;
  TransSerial: string;
  TransDocNumber: bigint;
  IndexValue: bigint;
  TransactionGuid: string;
  CreateDate: Date | null;
  CreateTime: number;
  SystemEntryDate: Date | null;
  SalesmanID: bigint;
  ContractReferenceNumber: string;
  PartyTypeCode: number;
  PartyID: bigint;
  PartyName: string;
  PartyAddress1: string;
  PartyAddress2: string;
  PartyPostalCode: string;
  PartyAddressID: number;
  PartyCountryID: string;
  PartyProvinceID: string;
  PartyLocalityID: bigint;
  PartyFederalTaxID: string;
  WarehouseReceipt: number;
  WarehouseOutgoing: number;
  PaymentID: number;
  TenderID: number;
  ZoneID: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  CarrierID: number;
  CarrierDescription: string;
  LoadPlaceID: number;
  LoadPlaceDescription: string;
  LoadPlaceDateTime: Date | null;
  UnloadPlaceID: number;
  UnloadPlaceDescription: string;
  UnloadPlaceDateTime: Date | null;
  TransactionTaxIncluded: boolean;
  LineItemsCount: bigint;
  Comments: string;
  RectificationMotive: string;
  PaymentDiscountPercent: number;
  PaymentCumulativeDiscountPercent1: number;
  PaymentCumulativeDiscountPercent2: number;
  PaymentCumulativeDiscountPercent3: number;
  GlobalDiscountPercent: number;
  GlobalCumulativeDiscountPercent1: number;
  GlobalCumulativeDiscountPercent2: number;
  GlobalCumulativeDiscountPercent3: number;
  TotalGrossAmount: number;
  TotalLineItemDiscountAmount: number;
  TotalPaymentDiscountAmount: number;
  TotalRedeemedVoucherAmount: number;
  TotalGlobalDiscountAmount: number;
  TotalNetAmount: number;
  TotalTaxAmount: number;
  TotalFreightAmount: number;
  TotalFreightAmountWithTax: number;
  FreightTaxableGroupID: number;
  TotalAdjustmentAmount: number;
  TotalAmount: number;
  TotalRetentionAmount: number;
  TotalTransactionAmount: number;
  TotalPayedAmount: number;
  FrequentShopperPoints: number;
  DiscountFreqShopperPoints: number;
  VoucherGiftTransSerial: string;
  VoucherGiftTransDocument: string;
  VoucherGiftTransDocNumber: bigint;
  VoucherGiftValue: number;
  CustomerImputeID: bigint;
  VehicleKilometers: number;
  SecondIssue: boolean;
  SecondHandTaxRegimen: boolean;
  OriginatingON: string;
  Signature: string;
  SignatureControl: number;
  SignatureInvoiceNo: string;
  SoftwareCertificateNumber: bigint;
  DestinTransSerial: string;
  DestinTransDocument: string;
  DestinTransDocNumber: bigint;
  TillID: string;
  PlantProtectionActivityAuth: string;
  PlantProtectionApplicator: string;
  EntityFiscalStatusID: number;
  LoyaltyId: string;
  LoyaltyUploadDate: Date | null;
  BalanceFreqShopperPoints: number;
  PABudgetExpenditureNumber: string;
  PAContractNumber: string;
  PACommitmentNumber: string;
  ATCUD: string;
  QRCode: string;
  PartyGLN: string;
  FrequentShopperProcessingState: number;
  PartyDelivery: string;
  WithholdingTaxType: string;
  TransmissionStatus: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface IssuedTmpTransDetailExtraFields {
  TransDocType: number;
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  IndexValue: bigint;
  LineItemID: bigint;
  LineItemSubID: number;
  ExtraFieldID: bigint;
  TextAnswer: string;
  NumberAnswer: number;
  DateAnswer: Date | null;
  BooleanAnswer: boolean;
  MemoAnswer: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface IssuedTmpTransDetails {
  TransDocType: number;
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  IndexValue: bigint;
  CreateDate: Date | null;
  ActualDeliveryDate: Date | null;
  PhysicalQtyDate: Date | null;
  OriginCreateDate: Date | null;
  OriginTransSerial: string;
  OriginTransDocument: string;
  OriginTransDocNumber: bigint;
  OriginLineItemID: bigint;
  OriginLineItemSubID: number;
  OriginQuantity: number;
  OriginUnits: number;
  DestinationTransSerial: string;
  DestinationTransDocument: string;
  DestinationTransDocNumber: bigint;
  DestinationLineItemID: bigint;
  DestinationLineItemSubID: number;
  DestinationQuantity: number;
  DestinationUnits: number;
  TransactionConverted: boolean;
  LineItemID: bigint;
  LineItemSubID: number;
  ItemID: string;
  POSItemID: string;
  LotID: string;
  ItemType: number;
  SupplierItemID: string;
  SalesmanID: bigint;
  ColorID: number;
  SizeID: number;
  Description: string;
  TaxableGroupID: number;
  UnitOfSaleID: string;
  Quantity: number;
  PackQuantity: number;
  Units: number;
  StockUnits: number;
  UnitConversion: number;
  Quantity1: number;
  Quantity2: number;
  Quantity3: number;
  Quantity4: number;
  PhysicalQtyRule: number;
  ComponentQty: number;
  UnitCasesCount: number;
  UnitPrice: number;
  TaxIncludedPrice: number;
  OriginalUnitPrice: number;
  OriginalTaxIncludedPrice: number;
  ItemAverageUnitPrice: number;
  ItemAverageTaxIncludedPrice: number;
  ItemLastCostUnitPrice: number;
  ItemLastCostTaxIncludedPrice: number;
  DiscountPercent: number;
  DiscountValue: number;
  UnitDiscountValue: number;
  DiscountID: number;
  WarehouseID: number;
  WarehouseReceipt: number;
  WarehouseOutgoing: number;
  CumulativeDiscountPercent1: number;
  CumulativeDiscountPercent2: number;
  CumulativeDiscountPercent3: number;
  PaymentDiscountPercent1: number;
  PaymentDiscountPercent2: number;
  PaymentDiscountPercent3: number;
  PartyTypeCode: number;
  PartyID: bigint;
  TotalGrossAmount: number;
  TotalLineItemDiscountAmount: number;
  TotalPaymentDiscountAmount: number;
  TotalNetAmount: number;
  TotalNetBaseTaxAmount: number;
  TotalNetPrintAmout: number;
  TotalOtherTaxAmount: number;
  TotalTaxAmount: number;
  TotalAmount: number;
  TotalTaxIncludedAmount: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  PromotionApplied: boolean;
  Comments: string;
  RequiredDeliveryDateTime: Date | null;
  ProductCode: string;
  PlantProtectionSaleAuthNumber: string;
  ProductCategory: number;
  ImputeToCustomerID: bigint;
  CustomerImputeID: bigint;
  RetentionTax: number;
  AdvancementOriginItemID: string;
  AdvancementOriginDescription: string;
  AdvancementMethod: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface IssuedTmpTransPropDetails {
  TransDocType: number;
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  IndexValue: bigint;
  LineItemID: bigint;
  LineItemSubID: number;
  CreateDate: Date | null;
  ActualDeliveryDate: Date | null;
  PhysicalQtyDate: Date | null;
  ItemID: string;
  PropertyValue1: string;
  PropertyValue1_Key2: string;
  PropertyValue1_Key3: string;
  PropertyValue2: string;
  PropertyValue2_Key2: string;
  PropertyValue2_Key3: string;
  PropertyValue3: string;
  PropertyValue3_Key2: string;
  PropertyValue3_Key3: string;
  PropertyControlType: number;
  PropertyControlMode: number;
  PropertyUseExpirationDate: boolean;
  PropertyUseProductionDate: boolean;
  PropertyExpDateControl: number;
  PropertyMaximumQuantity: number;
  ProductionDate: Date | null;
  ExpirationDate: Date | null;
  PartyTypeCode: number;
  PartyID: bigint;
  Quantity: number;
  PackQuantity: number;
  Units: number;
  StockUnits: number;
  UnitConversion: number;
  UnitOfMeasure: string;
  WarehouseID: number;
  TotalNetAmount: number;
  TotalOtherCostsAmount: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface Item {
  ItemID: string;
  ItemKey: string;
  ItemType: number;
  BarCode: string;
  BarCodeType: number;
  BinLocation: string;
  UnitOfSaleID: string;
  AlternativeUnitOfStock: string;
  UnitConversion: number;
  WeightUnitOfMeasure: string;
  WeightMeasure: number;
  Graduation: number;
  TaxableGroupID: number;
  ItemTax: number;
  ItemTax2: number;
  ItemTax3: number;
  SaleDefaultQntMeasure1: number;
  SaleDefaultQntMeasure2: number;
  SaleDefaultQntMeasure3: number;
  AverageCostPrice: number;
  CurrencyID: string;
  CurrencyFactor: number;
  CurrencyExchange: number;
  CustomerOrderQty: number;
  SupplierOrderQty: number;
  CustomerConsignmentQty: number;
  SupplierConsignmentQty: number;
  AvailableQty: number;
  PhysicalQty: number;
  CustomerOrderUnits: number;
  SupplierOrderUnits: number;
  CustomerConsignmentUnits: number;
  SupplierConsignmentUnits: number;
  PhysicalUnits: number;
  AvailableUnits: number;
  AverageCostStockValue: number;
  LastCostStockValue: number;
  ReorderPoint: number;
  RestockLevel: number;
  LastReceivedDate: Date | null;
  LastOutgoingDate: Date | null;
  SupplierID: bigint;
  FamilyID: bigint;
  Comments: string;
  TagAlongItem: string;
  TagAlongQuantity: number;
  InformationMessage: string;
  StockManagement: boolean;
  Discontinued: boolean;
  SalesRestrictionTypeCode: number;
  SalesRestrictionStartDate: Date | null;
  SalesRestrictionEndDate: Date | null;
  ItemFirstGroupID: number;
  ItemSecondGroupID: number;
  ItemThirdGroupID: number;
  ItemPictureName: string;
  ReadQuantityFromScale: boolean;
  TareValue: number;
  CanotChangeSalePrice: boolean;
  ExportToBranch: boolean;
  ExportToTouch: boolean;
  HaveStatusState: boolean;
  ScientificName: string;
  ProductionMethodID: number;
  CaptureAreaID: number;
  CaptureCountryID: string;
  NetDrainedWeight: number;
  NetDrainedUnitOfMeasure: string;
  SerialNumberCount: number;
  CollectionBaseQuantity: number;
  Periodicity: number;
  WeekDays: number;
  DirectDiscount: number;
  EditionReturnWeekCount: number;
  WorkstationCreate: number;
  CreateDate: Date | null;
  GrossWeight: number;
  MeasureLength: number;
  MeasureWidth: number;
  MeasureDepth: number;
  OriginCountryID: string;
  IntraStatCN: string;
  IntraStatLiquidWeight: number;
  IntraStatRegion: string;
  NeededComponents: number;
  UseComponentPrices: boolean;
  UseComponentPriceLineID: number;
  ItemVariables: string;
  PrintStub: boolean;
  PropertyID1: string;
  PropertyID2: string;
  PropertyID3: string;
  UsePriceOnProp1: boolean;
  UsePriceOnProp2: boolean;
  UsePriceOnProp3: boolean;
  PropertyControlType: number;
  PropertyControlMode: number;
  PropertyUseExpirationDate: boolean;
  PropertyUseProductionDate: boolean;
  PropertyExpDateControl: number;
  PropertyMaximumQuantity: number;
  InformationValue1: string;
  InformationValue2: string;
  InformationValue3: string;
  InformationValue4: string;
  InformationValue5: string;
  InformationValue6: string;
  InformationValue7: string;
  InformationValue8: string;
  InformationValue9: string;
  InformationValue10: string;
  MonthWarranty: number;
  DoNotGroup: boolean;
  SaleGroupID: string;
  BuyGroupID: string;
  MandatoryCustomer: boolean;
  LabelIngredients: string;
  LabelExpirationType: number;
  LabelExpirationDays: number;
  LabelBestBeforeDays: number;
  LabelExpirationDate: Date | null;
  LabelBestBeforeDate: Date | null;
  LabelExpirationHour: number;
  LabelBestBeforeHour: number;
  LabelFormatID: number;
  PLU: number;
  Locked: number;
  DefaultSellingUnit: string;
  DefaultBuyUnit: string;
  DefaultStockUnit: string;
  ProductCategory: number;
  SubCaptureAreaID: number;
  FishingGear: string;
  ConservationMethod: number;
  PlantProtectionSaleAuthNumber: string;
  ComponentTemplateID: string;
  AutoDecompose: boolean;
  WithholdingTaxRate: number;
  UID: string;
  ChangesetID: bigint;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date;
  HrAlt: number;
  AlternativeItem?: AlternativeItem[];
  Family?: Family;
  Supplier?: Supplier;
  ItemAlternative?: ItemAlternative[];
  ItemColor?: ItemColor[];
  ItemComponents?: ItemComponents[];
  ItemContract?: ItemContract | null;
  ItemCostChange?: ItemCostChange[];
  ItemExtraFields?: ItemExtraFields[];
  ItemGroupDetails?: ItemGroupDetails[];
  ItemLot?: ItemLot[];
  ItemNames?: ItemNames[];
  ItemPricesProperty?: ItemPricesProperty[];
  ItemReserve?: ItemReserve[];
  ItemSellingPrices?: ItemSellingPrices[];
  ItemSerial?: ItemSerial[];
  ItemSize?: ItemSize[];
  ItemSupplier?: ItemSupplier[];
  ItemUnits?: ItemUnits[];
  POSIdentity?: POSIdentity[];
  Stock?: Stock[];
}

export interface ItemAlternative {
  ItemID: string;
  ItemAlternativeID: string;
  SequenceNumber: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Item?: Item;
}

export interface ItemCaptureArea {
  CaptureAreaID: number;
  LanguageID: string;
  Description: string;
  FAOArea: string;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface ItemColor {
  ItemID: string;
  ColorID: number;
  ColorKey: string;
  SequenceNumber: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Color?: Color;
  Item?: Item;
}

export interface ItemComponents {
  ItemID: string;
  ComponentGUID: string;
  ComponentItemID: string;
  ComponentFamilyID: bigint;
  ComponentItemGroupID: string;
  ComponentLotID: string;
  ComponentColorID: number;
  ComponentSizeID: number;
  SequenceNumber: number;
  ItemFormula: string;
  Quantity: number;
  ComponentTemplateID: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Item?: Item;
}

export interface ItemContract {
  ItemContractID: string;
  ExpireTimeUnit: number;
  ExpireTime: number;
  MaxValue: number;
  TaxIncluded: boolean;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Item?: Item;
  ItemContractItems?: ItemContractItems[];
  ItemContractSale?: ItemContractSale[];
}

export interface ItemContractHistory {
  ItemContractGuid: string;
  RecordGuid: string;
  DetailGuid: string;
  TransactionGuid: string;
  ActionType: number;
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  ItemID: string;
  ColorID: number;
  SizeID: number;
  FamilyID: bigint;
  Quantity: number;
  TotalNetAmount: number;
  TotalTaxIncludedAmount: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface ItemContractItems {
  ItemContractID: string;
  ContractItemGuid: string;
  ItemID: string;
  ColorID: number;
  SizeID: number;
  FamilyID: bigint;
  MaxValue: number;
  MaxQuantity: number;
  SequenceNumber: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  ItemContract?: ItemContract;
}

export interface ItemContractSale {
  ItemContractGuid: string;
  ItemContractID: string;
  Description: string;
  CustomerID: bigint;
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  StartDate: Date | null;
  ExpireDate: Date | null;
  MaxValue: number;
  TotalValue: number;
  TaxIncluded: boolean;
  Inactive: boolean;
  FullyCharged: boolean;
  Credited: boolean;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  ItemContract?: ItemContract;
}

export interface ItemCostChange {
  ItemID: string;
  LotID: string;
  SizeID: number;
  PriceLineID: number;
  UnitPrice: number;
  TaxIncludedPrice: number;
  CostPrice: number;
  ProfitRate: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  LastTransSerial: string;
  LastTransDocument: string;
  LastTransDocNumber: bigint;
  LastTransCreateDate: Date | null;
  NewPrice: number;
  NewPriceCurrency: string;
  NewPriceExchange: number;
  NewPriceFactor: number;
  PerVariation: number;
  PartyType: number;
  PartyID: bigint;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Item?: Item;
}

export interface ItemCustomer {
  ItemID: string;
  SizeID: number;
  CustomerID: bigint;
  UnitOfMeasure: string;
  CustomerItemID: string;
  ItemCustomerGuid: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface ItemExtraComments {
  ItemExtraCommentID: number;
  ExtraComment: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface ItemExtraFields {
  ItemID: string;
  ExtraFieldID: bigint;
  TextAnswer: string;
  NumberAnswer: number;
  DateAnswer: Date | null;
  BooleanAnswer: boolean;
  MemoAnswer: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  ConfExtraFields?: ConfExtraFields;
  Item?: Item;
}

export interface ItemFirstGroup {
  ItemFirstGroupID: number;
  ItemFirstGroupKey: string;
  Description: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface ItemFishingGear {
  FishingGearID: string;
  LanguageID: string;
  Description: string;
  FishingGearCategory: string;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface ItemGroup {
  ItemGroupID: string;
  Description: string;
  UID: string;
  ChangesetID: bigint;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date;
  HrAlt: number;
}

export interface ItemGroupDetails {
  ItemGroupID: string;
  ItemID: string;
  LineItemID: bigint;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date;
  HrAlt: number;
  Item?: Item;
}

export interface ItemLot {
  ItemID: string;
  LotID: string;
  EditionID: bigint;
  EffectiveDate: Date | null;
  ExpirationDate: Date | null;
  ReturnWeek: number;
  ReturnYear: number;
  ItemLotDescription: string;
  SupplierItemID: string;
  BarCode: string;
  StoreId: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Item?: Item;
  TagAlongEdition_TagAlongEdition_ItemID_LotIDToItemLot?: TagAlongEdition[];
  TagAlongEdition_TagAlongEdition_TagAlongItemID_TagAlongLotIDToItemLot?: TagAlongEdition[];
}

export interface ItemNames {
  ItemID: string;
  LanguageID: string;
  ShortDescription: string;
  Description: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Item?: Item;
  LanguageCodes?: LanguageCodes;
}

export interface ItemPredefinition {
  PredefinitionID: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  ItemPredefinitionColor?: ItemPredefinitionColor[];
  ItemPredefinitionSize?: ItemPredefinitionSize[];
}

export interface ItemPredefinitionColor {
  PredefinitionID: string;
  ColorID: number;
  SequenceNumber: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Color?: Color;
  ItemPredefinition?: ItemPredefinition;
}

export interface ItemPredefinitionSize {
  PredefinitionID: string;
  SizeID: number;
  SequenceNumber: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  ItemPredefinition?: ItemPredefinition;
  Size?: Size;
}

export interface ItemPricesProperty {
  ItemID: string;
  PropertyValue1: string;
  PropertyValue2: string;
  PropertyValue3: string;
  PriceLineID: number;
  CreateDate: Date | null;
  UnitPrice: number;
  TaxIncludedPrice: number;
  CurrencyID: string;
  CurrencyFactor: number;
  CurrencyExchange: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Item?: Item;
}

export interface ItemProductionMethod {
  ProductionMethodID: number;
  LanguageID: string;
  Description: string;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface ItemProperty {
  PropertyID: string;
  Description: string;
  KeyDescription: string;
  PropertyKeyType: number;
  AskForKey2: boolean;
  KeyDescription2: string;
  AskForKey3: boolean;
  KeyDescription3: string;
  MaximumQuantity: number;
  UsePropertyTable: boolean;
  ControlType: number;
  ControlMode: number;
  UseExpirationDate: boolean;
  UseProductionDate: boolean;
  ExpirationDateControl: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  UseInItemQuickSearch: boolean;
  ItemPropertyTable?: ItemPropertyTable[];
}

export interface ItemPropertyTable {
  PropertyID: string;
  PropertyValue: string;
  PropertyValueOrder: number;
  PropertyValueBarcode: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  ItemProperty?: ItemProperty;
}

export interface ItemReserve {
  CustomerID: bigint;
  ItemID: string;
  Quantity: number;
  InitialDate: Date | null;
  FinalDate: Date | null;
  Periodicity: number;
  WeekDays: number;
  LastDateReceived: Date | null;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Customer?: Customer;
  Item?: Item;
}

export interface ItemSecondGroup {
  ItemSecondGroupID: number;
  ItemSecondGroupKey: string;
  Description: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface ItemSellingPrices {
  ItemID: string;
  SizeID: number;
  LotID: string;
  PriceLineID: number;
  CreateDate: Date | null;
  UnitPrice: number;
  TaxIncludedPrice: number;
  FixedProfitRate: number;
  CurrencyID: string;
  CurrencyFactor: number;
  CurrencyExchange: number;
  UID: string;
  ChangeSetID: number;
  ExcludesGlobalDiscount: boolean;
  PriceUnitID: string;
  ColorID: number;
  DiscountPercent: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Item?: Item;
}

export interface ItemSerial {
  ItemID: string;
  SerialNumber: string;
  SerialNumber2: string;
  SerialNumber3: string;
  BuyTransSerial: string;
  BuyTransDocument: string;
  BuyTransDocNumber: bigint;
  BuyPrice: number;
  BuyTaxIncludedPrice: number;
  SaleTransSerial: string;
  SaleTransDocument: string;
  SaleTransDocNumber: bigint;
  SalePrice: number;
  SaleTaxIncludedPrice: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Item?: Item;
}

export interface ItemSize {
  ItemID: string;
  SizeID: number;
  SizeKey: string;
  SequenceNumber: number;
  ReorderPoint: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Item?: Item;
  Size?: Size;
}

export interface ItemSubCaptureArea {
  SubCaptureAreaID: number;
  CaptureAreaID: number;
  Description: string;
  SubFAOArea: string;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface ItemSupplier {
  ItemID: string;
  SizeID: number;
  SupplierID: bigint;
  UnitOfMeasure: string;
  ReorderID: string;
  CostPrice: number;
  TaxIncludedCostPrice: number;
  CostPriceDate: Date | null;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  Discount1: number;
  Discount2: number;
  Discount3: number;
  MinOrder: number;
  LastTransSerial: string;
  LastTransDocument: string;
  LastTransDocNumber: bigint;
  LastContractReferenceNumber: string;
  LastQuantity: number;
  LastUnits: number;
  LastNetAmount: number;
  PackQuantity: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Item?: Item;
}

export interface ItemTaxableGroupChange {
  ItemID: string;
  TaxableGroupID: number;
  IgnoreItem: boolean;
}

export interface ItemThirdGroup {
  ItemThirdGroupID: number;
  ItemThirdGroupKey: string;
  Description: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface ItemUnits {
  ItemID: string;
  UnitOfMeasure: string;
  UnitConversion: number;
  UnitType: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Item?: Item;
}

export interface LanguageCodes {
  LanguageID: string;
  LanguageKey: string;
  LanguageName: string;
  FontCharacterSet: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  DocumentsName?: DocumentsName[];
  FuncPOS?: FuncPOS[];
  ItemNames?: ItemNames[];
  SystemWordTerms?: SystemWordTerms[];
  TenderNames?: TenderNames[];
  UnitOfMeasure?: UnitOfMeasure[];
}

export interface LedgerAccountTransaction {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  ContractReferenceNumber: string;
  CreateDate: Date | null;
  SystemEntryDate: Date | null;
  SystemEntryUser: string;
  UserChanged: string;
  CreateTime: number;
  PaymentID: number;
  DeferredPaymentDate: Date | null;
  SalesmanID: bigint;
  PartyType: number;
  PartyID: bigint;
  PartyName: string;
  PartyAddress1: string;
  PartyAddress2: string;
  PartyPostalCode: string;
  PartyAddressID: number;
  PartyCountryID: string;
  PartyProvinceID: string;
  PartyLocalityID: bigint;
  PartyFederalTaxID: string;
  TaxableGroupID: number;
  TotalNetAmount: number;
  TotalTaxAmount: number;
  TotalRetentionAmount: number;
  TotalAmount: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  Comments: string;
  TransStatus: number;
  AccountingExportDate: Date | null;
  PrintedCopies: number;
  Signature: string;
  SignatureControl: number;
  SignatureInvoiceNo: string;
  SoftwareCertificateNumber: bigint;
  TillID: string;
  PartyAccountTypeID: string;
  CashAccountingSchemeType: number;
  DownPaymentInvoice: boolean;
  ComissionAmount: number;
  BalanceCompensationFlag: boolean;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date;
  HrAlt: number;
  DocumentsSeriesNumber?: DocumentsSeriesNumber;
}

export interface LoadUnloadPlace {
  LoadUnloadPlaceID: number;
  Description: string;
  AddressType: number;
  AddressTypeID: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface LocalityCodes {
  CountryID: string;
  ProvinceID: string;
  LocalityID: bigint;
  LocalityName: string;
  PostalCode: string;
  StreetCode: string;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  ProvinceCodes?: ProvinceCodes;
}

export interface LogicLog {
  FileType: string;
  FileNumber: bigint;
  FileName: string;
  ComType: number;
  ComDate: Date | null;
  ComTime: number;
}

export interface LogicTransaction {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  FileName: string;
  SendDate: Date | null;
  SendTime: number;
}

export interface MNMPromotionsRuleActions {
  PromotionRuleID: number;
  RulesApplyID: number;
  DiscountAmount: number;
  PromoFamilyIDs: string;
  PromoItemIDs: string;
  DiscountMaxQty: number;
  DiscountMinQty: number;
  ApplyToShippingAmount: boolean;
  JsonRuleActions: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface MNMPromotionsRuleConditions {
  PromotionRuleID: number;
  JsonRuleConditions: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface MNMPromotionsRules {
  PromotionRuleID: number;
  Name: string;
  Description: string;
  Active: boolean;
  HasCoupon: boolean;
  CouponCode: string;
  CouponUses: number;
  StartDate: Date | null;
  EndDate: Date | null;
  Priority: number;
  UseTaxIncludedValues: boolean;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface O365Company {
  Id: string;
  Created: Date | null;
  LastModified: Date | null;
  ExtensionProperties: string;
  Schema: string;
  Name: string;
  BaseCurrency: string;
}

export interface O365Payable {
  Id: string;
  Created: Date | null;
  LastModified: Date | null;
  ExtensionProperties: string;
  Month: string;
  Period: string;
  Description: string;
  Overdue: number;
}

export interface O365PayableAccount {
  Id: string;
  Created: Date | null;
  LastModified: Date | null;
  ExtensionProperties: string;
  Code: string;
  Description: string;
  Currency: string;
  Balance: number;
  Period: string;
  OverdueDescription: string;
  Overdue: number;
}

export interface O365PayableTransaction {
  Id: string;
  Created: Date | null;
  LastModified: Date | null;
  ExtensionProperties: string;
  LinkID: string;
  LinkType: string;
  AccountID: string;
  Reference: string;
  Date: Date | null;
  Currency: string;
  Type: string;
  DueDate: Date | null;
  NetAmount: number;
  TaxAmounts: number;
  Description: string;
  OverdueDays: number;
  OutstandingBalance: number;
  Code: string;
}

export interface O365Receivable {
  Id: string;
  Created: Date | null;
  LastModified: Date | null;
  ExtensionProperties: string;
  Month: string;
  Period: string;
  Description: string;
  Overdue: number;
}

export interface O365ReceivableAccount {
  Id: string;
  Created: Date | null;
  LastModified: Date | null;
  ExtensionProperties: string;
  Code: string;
  Description: string;
  Currency: string;
  Balance: number;
  ParentAccountId: string;
  Period: string;
  OverdueDescription: string;
  CreditLimit: number;
  Overdue: number;
}

export interface O365ReceivableTransaction {
  Id: string;
  Created: Date | null;
  LastModified: Date | null;
  ExtensionProperties: string;
  LinkID: string;
  LinkType: string;
  AccountID: string;
  Reference: string;
  Date: Date | null;
  Currency: string;
  Type: string;
  DueDate: Date | null;
  NetAmount: number;
  TaxAmounts: number;
  Description: string;
  OverdueDays: number;
  OutstandingBalance: number;
  Code: string;
}

export interface O365Setting {
  Id: number;
  Created: Date | null;
  LastModified: Date | null;
  ExtensionProperties: string;
  Domain: string;
  Name: string;
  Value: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface OnlineReceipts {
  Id: Decimal;
  Tag: string;
  TagType: number;
  Token: string;
  Sent: number;
  Errors: number;
  Raw: string;
  Created: Date | null;
  UpdatedAt: Date | null;
}

export interface Operation {
  OperationID: number;
  Description: string;
  UpdateAverageCostPrice: boolean;
  UpdateLastCostPrice: boolean;
  LedgerAccountRule: number;
  PhysicalQtyRule: number;
  AvailableQtyRule: number;
  CustomerOrderQtyRule: number;
  SupplierOrderQtyRule: number;
  CustomerConsignmentQtyRule: number;
  SupplierConsignmentQtyRule: number;
  OldOperationID: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  BankLedgerAccount?: BankLedgerAccount[];
  CustomerLedgerAccount?: CustomerLedgerAccount[];
  Documents?: Documents[];
  OtherContactLedgerAccount?: OtherContactLedgerAccount[];
  SalesmanLedgerAccount?: SalesmanLedgerAccount[];
  StockHistory?: StockHistory[];
  SupplierLedgerAccount?: SupplierLedgerAccount[];
}

export interface OperationLog {
  OperationLogID: number;
  Operation: string;
  ActionDateTime: Date | null;
  ActionTaken: string;
  ConfirmationUsername: string;
  TransactionDocs: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface OptinForMessages {
  MobileNumber: string;
  TransactionalMsg: boolean;
  MarketingMsg: boolean;
  OptinAcceptDate: Date | null;
  PartyID: bigint;
  PartyTypeCode: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface OtherContact {
  OtherContactID: number;
  PartyID: bigint;
  OtherContactName: string;
  FederalTaxID: string;
  KeyFederalTaxID: bigint;
  GDPRConsent: boolean;
  GDPRConsentDate: Date | null;
  GDPRSystemUserGUID: string;
  GDPRForgetDate: Date | null;
  GDPRForgetUserGUID: string;
  GDPRRequestDate: Date | null;
  GDPRRequestEmail: string;
  GDPRRequestUserGUID: string;
  GDPRStateDate: Date | null;
  GDPRStateUserGUID: string;
  GDPRState: number;
  OtherContactType: number;
  WebAddress: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Party?: Party;
}

export interface OtherContactLedgerAccount {
  LedgerCounter: Decimal;
  LedgerGuid: string;
  InternalID: bigint;
  ReconciledFlag: boolean;
  CreateDate: Date | null;
  DeferredPaymentDate: Date | null;
  SystemEntryDate: Date | null;
  ContractReferenceNumber: string;
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  TransInstallmentID: number;
  TotalAmount: number;
  TotalPendingAmount: number;
  OperationID: number;
  TotalAccountSign: number;
  BalanceAmount: number;
  BalanceAccountSign: number;
  PartyTypeCode: number;
  PartyID: bigint;
  SalesmanID: bigint;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  ExchangeDifCurrency: string;
  RetentionTotalAmount: number;
  RetentionPendingAmount: number;
  RetentionStampDutyTotal: number;
  RetentionStampDutyPending: number;
  DebitTotalAmount: number;
  CreditTotalAmount: number;
  TransStatus: number;
  PartyAccountTypeID: string;
  OriginTransSerial: string;
  OriginTransDocument: string;
  OriginTransDocNumber: bigint;
  PartyAddressID: number;
  CashAccountingSchemeType: number;
  ComissionAmount: number;
  BalanceCompensationFlag: boolean;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Operation?: Operation;
}

export interface Party {
  PartyID: bigint;
  PartyTypeCode: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Bank?: Bank[];
  OtherContact?: OtherContact[];
  PartyAddress?: PartyAddress[];
  PartyBankAccount?: PartyBankAccount[];
  PartyComments?: PartyComments[];
  PartyExtraFields?: PartyExtraFields[];
  PartyMessages?: PartyMessages[];
  Person?: Person[];
}

export interface PartyAddress {
  PartyID: bigint;
  AddressID: number;
  AddressKey: string;
  AddressLine1: string;
  AddressLine2: string;
  PostalCode: string;
  CountryID: string;
  ProvinceID: string;
  LocalityID: bigint;
  AddressTypeCode: number;
  SendMailFlag: boolean;
  GLN: string;
  Delivery: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date;
  HrAlt: number;
  Party?: Party;
}

export interface PartyBankAccount {
  PartyID: bigint;
  BankAccountID: bigint;
  BankAccountKey: string;
  AccountNumber: string;
  Description: string;
  DoNotExpressInReport: boolean;
  BankID: number;
  CountryID: string;
  BankCode: string;
  BankSwift: string;
  BankName: string;
  BranchCode: string;
  AccountCheckDigit: string;
  FormattedDAN: string;
  FormattedIBAN: string;
  AccountType: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  AccessPassword: string;
  AccessPasswordE: string;
  UsedInBankReceipt: boolean;
  RemittanceAccount: boolean;
  RemittanceSuffix: string;
  RemittanceSuffix58: string;
  UsedAsRemittanceDefault: boolean;
  Inactive: boolean;
  DefaultBankAccount: boolean;
  DirectDebitAuthorization: string;
  DirectDebitStatus: number;
  DirectDebitWithBoundaries: boolean;
  DirectDebitMaximumAmount: number;
  DirectDebitFinalYear: number;
  DirectDebitFinalMonth: number;
  PartyAddressID: number;
  BorrowingRate: number;
  LendingRate: number;
  AllowedOverdraw: number;
  MinimumBalance: number;
  MaximumBalance: number;
  DiscBillsInterestRate: number;
  DiscBillsHandlingCharge: number;
  CCardCurrentAccountID: bigint;
  CCardAccountReferenceDay: number;
  CCardAccountPayDay: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  CardServiceFee?: CardServiceFee[];
  Currency?: Currency;
  Party?: Party;
}

export interface PartyComments {
  PartyID: bigint;
  CommentID: number;
  CommentTypeID: string;
  Subject: string;
  CommentDate: Date;
  Comment: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Party?: Party;
}

export interface PartyCommentType {
  CommentTypeID: string;
  Description: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface PartyEInvoicingEmail {
  KeyFederalTaxID: bigint;
  EInvoicingEmail: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface PartyExtraFields {
  PartyID: bigint;
  ExtraFieldID: bigint;
  TextAnswer: string;
  NumberAnswer: number;
  DateAnswer: Date | null;
  BooleanAnswer: boolean;
  MemoAnswer: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  ConfExtraFields?: ConfExtraFields;
  Party?: Party;
}

export interface PartyMessages {
  MessageID: Decimal;
  PartyID: bigint;
  CreateDate: Date | null;
  UserCreatedID: number;
  CloseDate: Date | null;
  UserClosedID: number;
  Active: boolean;
  Message: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Party?: Party;
}

export interface PartyRelationship {
  RelationshipID: number;
  RelationshipKey: string;
  Description: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface PartyTaxGroup {
  PartyTaxGroupID: bigint;
  PartyID: bigint;
  TaxGroupID: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface Payment {
  PaymentID: number;
  PaymentKey: string;
  Description: string;
  PaymentDateType: number;
  WeekDay: number;
  Installments: number;
  InstallmentsType: number;
  FirstInstallmentPercent: number;
  PaymentDays: number;
  PaymentDiscount1: number;
  PaymentDiscount2: number;
  PaymentDiscount3: number;
  IssueReceipt: boolean;
  InternalUse: boolean;
  TenderID: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Customer?: Customer[];
  Installment?: Installment[];
  Supplier?: Supplier[];
}

export interface Person {
  PersonID: bigint;
  PartyID: bigint;
  Name: string;
  Title: string;
  PersonalIDNumber: string;
  BirthDate: Date | null;
  Position: string;
  Comments: string;
  O365Id: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date;
  HrAlt: number;
  EmailAddress?: EmailAddress[];
  Party?: Party;
  Telephone?: Telephone[];
}

export interface PinPadAccountPeriod {
  AccountPeriodID: string;
  OperationType: number;
  ResponseCode: number;
  OperatorMessage: string;
  StoreTicket: string;
  TillID: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface POSBalconyScales {
  BalconyScaleID: number;
  ScaleType: number;
  Description: string;
  DestinationType: number;
  DestinationNumber: number;
  CommPort: string;
  CommProtocol: number;
  CommSpeedSelected: number;
  CommBaudRate: string;
  CommParity: number;
  CommDataBits: number;
  CommStopBits: number;
  CommFlowControl: number;
  HostIpAddress: string;
  TicketLine1: string;
  TicketLine2: string;
  TicketLine3: string;
  TicketLine4: string;
  TicketLine5: string;
  TicketLine6: string;
  TicketLine7: string;
  TicketLine8: string;
  TicketLine9: string;
  TicketLine10: string;
  TicketFloatText: string;
  DefBarCode: string;
  StartSection: number;
  MaxTerminals: number;
  MaxSalesman: number;
  LastResetDate: Date | null;
  LastResetNumber: number;
  ScaleIpAddress: string;
  ScaleIpMask: string;
  ScaleMultcastIP: string;
  UseEthernetConnection: boolean;
  UseOfferPrice: boolean;
  DeleteTicketsAfterRead: boolean;
  TimeoutValue: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface POSBiometric {
  BiometricID: number;
  Description: string;
  Biometric_DRVType: string;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface POSCashDrawers {
  CashDrawerID: number;
  CashDrawerType: number;
  DefaultPort: string;
  DefaultBaudRate: string;
  Description: string;
  ESCTriggerPeripheralUnit: string;
  ESCDrawerState: string;
  ShellCommand: string;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface POSCustomerDisplays {
  CustomerDisplayID: number;
  Description: string;
  DriverMode: number;
  DefaultPort: string;
  DefaultBaudRate: string;
  DisplayLines: string;
  DisplayColumns: string;
  ESCInitialize: string;
  ESCCodePageSelect: string;
  ESCClearDisplay: string;
  ESCCursorUpperRow: string;
  ESCCursorLowerRow: string;
  SupportedCharSet: number;
  DisplayDataDelay: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface POSIButtonReader {
  IButtonReaderID: number;
  DefaultPort: string;
  DefaultBaudRate: string;
  Description: string;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface POSIdentity {
  ItemID: string;
  ColorID: number;
  SizeID: number;
  Description: string;
  POSItemID: string;
  BarCodeType: number;
  UnitOfMeasure: string;
  Quantity: number;
  SalePrice: number;
  TaxIncludedSalePrice: number;
  ExportToTouch: boolean;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Color?: Color;
  Item?: Item;
  Size?: Size;
}

export interface POSMagneticStripeReader {
  POSMagneticStripeReaderID: number;
  DriverMode: number;
  Description: string;
  MSRTrack: number;
  DefaultPort: string;
  DefaultBaudRate: string;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface POSNoSaleTransaction {
  DrawerOpenDate: Date;
  DrawerOpenTime: number;
  SalesmanID: bigint;
  TillID: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface POSPDTs {
  PDTID: number;
  Description: string;
  DefaultPort: string;
  DefaultBaudRate: string;
  PDT_DRVType: string;
  PDT_Model: string;
  PDT_LoadType: string;
  PDT_Mask: string;
  PDT_FieldSeparator: string;
  PDT_CanUpload: boolean;
  PDT_ImportFolder: string;
  PDT_ExportFolder: string;
  PDT_ImportFileName: string;
  PDT_ExportFileName: string;
  PDT_ShellCommand: string;
  PDT_ExportShellCommand: string;
  PDT_ProductID_Start: number;
  PDT_ProductID_Lenght: number;
  PDT_Quantity_Start: number;
  PDT_Quantity_Lenght: number;
  PDT_QuantityDec_Start: number;
  PDT_QuantityDec_Lenght: number;
  PDT_Units_Start: number;
  PDT_Units_Lenght: number;
  PDT_UnitsDec_Start: number;
  PDT_UnitsDec_Lenght: number;
  PDT_Warehouse_Start: number;
  PDT_Warehouse_Lenght: number;
  PDT_Price_Start: number;
  PDT_Price_Lenght: number;
  PDT_PriceDec_Start: number;
  PDT_PriceDec_Lenght: number;
  PDT_PriceLine_Start: number;
  PDT_PriceLine_Lenght: number;
  PDT_Property1_Start: number;
  PDT_Property1_Lenght: number;
  PDT_UnitOfMeasure_Start: number;
  PDT_UnitOfMeasure_Lenght: number;
  PDT_IgnoreFirstLine: boolean;
  PDT_ExpProductID_Start: number;
  PDT_ExpProductID_Lenght: number;
  PDT_ExpProductDesc_Start: number;
  PDT_ExpProductDesc_Lenght: number;
  PDT_ExpQuantity_Start: number;
  PDT_ExpQuantity_Lenght: number;
  PDT_ExpQuantityDec_Start: number;
  PDT_ExpQuantityDec_Lenght: number;
  PDT_ExpUnits_Start: number;
  PDT_ExpUnits_Lenght: number;
  PDT_ExpUnitsDec_Start: number;
  PDT_ExpUnitsDec_Lenght: number;
  PDT_ExpPrice_Start: number;
  PDT_ExpPrice_Lenght: number;
  PDT_ExpPriceDec_Start: number;
  PDT_ExpPriceDec_Lenght: number;
  PDT_ExpCost_Start: number;
  PDT_ExpCost_Lenght: number;
  PDT_ExpCostDec_Start: number;
  PDT_ExpCostDec_Lenght: number;
  PDT_ExpTagAlongQty_Start: number;
  PDT_ExpTagAlongQty_Lenght: number;
  PDT_UsedInSaleTransaction: boolean;
  PDT_UsedInStockTransaction: boolean;
  PDT_UsedInShopping: boolean;
  PDT_ItemCountLimit: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface POSPinpad {
  PinpadID: number;
  Description: string;
  ProviderType: number;
  DefaultPort: string;
  DefaultBaudRate: string;
  WSVersion: string;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface POSPriceCheckers {
  PriceCheckerID: number;
  Description: string;
  LocalPort: number;
  PriceCheckerModel: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface POSPrinters {
  POSPrinterID: number;
  DefaultPort: string;
  DefaultBaudRate: string;
  Description: string;
  ESCInicializar: string;
  ESCRedON: string;
  ESCRedOFF: string;
  ESCUnderlineModeOn: string;
  ESCUnderlineModeOff: string;
  ESCDoubleWidthCharOn: string;
  ESCDoubleWidthCharOff: string;
  ESCDoubleHeightCharOn: string;
  ESCDoubleHeightCharOff: string;
  ESCInvertedPrintOn: string;
  ESCInvertedPrintOff: string;
  ESCFullCut: string;
  ESCSelectReceipt: string;
  ESCCarriageReturn: string;
  ESCReceiptPaperEnableSequence: string;
  ESCReceiptPaperDisableSequence: string;
  ESCReceiptAndJournalPaperEnableSequence: string;
  ESCReceiptAndJournalPaperDisableSequence: string;
  ESCSlipPaperEnableSequence: string;
  ESCSlipPaperDisableSequence: string;
  ESCSlipPaperInsertWaitingTimeSequence: string;
  ESCSlipPaperEjectSequence: string;
  ESCDoublePrintEnableSequence: string;
  ESCDoublePrintDisableSequence: string;
  ESCBarCodeGS1: string;
  ESCBarCodeEAN13: string;
  ESCBarCodeCODE39: string;
  ESCBigFontColor: string;
  PrinterCodePage: number;
  LineFeed: number;
  UniStationValues: boolean;
  MultiStationValues: boolean;
  HandlesDoublePrintAutomatically: boolean;
  ESCPrintBitmapId: string;
  PrinterDensity: number;
  RecLineDots: number;
  RecLineSpacing: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface POSScales {
  ScaleID: number;
  ProtocolEmulation: number;
  Description: string;
  DefaultPort: string;
  DefaultBaudRate: string;
  ReadIntervals: number;
  ReadValidations: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface POSScanners {
  ScannerID: number;
  DefaultPort: string;
  DefaultBaudRate: string;
  Description: string;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface POSSMSMobilePhone {
  SMSMobilePhoneID: number;
  Description: string;
  SMSMobilePhoneType: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface PostVoidAccountCashSchemeDetails {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  LedgerGuid: string;
  DocSerial: string;
  DocID: string;
  DocNumber: bigint;
  DocInstallmentID: number;
  CreateDate: Date | null;
  TaxGroupID: string;
  TaxSequenceID: number;
  CountryId: string;
  TaxRegionId: string;
  TaxRate: number;
  TotalNetAmount: number;
  TotalTaxAmount: number;
  TotalDiscountAmount: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  TaxItemType: number;
  TaxExemptionReasonCode: string;
  TaxCode: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date;
  HrAlt: number;
  AccountTransaction?: AccountTransaction;
}

export interface PostVoidAccountTransaction {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  CreateDate: Date | null;
  CreateTime: number;
  SystemEntryDate: Date | null;
  SystemEntryUser: string;
  UserChanged: string;
  TotalAmount: number;
  TotalRetentionAmount: number;
  TotalRetentionStampDuty: number;
  TotalDiscountAmount: number;
  TotalDiscountPercent: number;
  TotalExchangeDifference: number;
  TotalNetAmount: number;
  TotalOtherDebit: number;
  PartyTypeCode: number;
  PartyID: bigint;
  PartyName: string;
  PartyAddress1: string;
  PartyAddress2: string;
  PartyPostalCode: string;
  PartyAddressID: number;
  PartyCountryID: string;
  PartyProvinceID: string;
  PartyLocalityID: bigint;
  TransferAccountTypeID: string;
  PartyFederalTaxID: string;
  SettleTax: boolean;
  Comments: string;
  SalesmanID: bigint;
  ZoneID: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  CashDiscountTermID: string;
  TransStatus: number;
  AccountingExportDate: Date | null;
  PrintedCopies: number;
  TillID: string;
  FinancialDiscountPercentBase: number;
  ExternalReferenceNumber: string;
  EffectivePaymentDate: Date | null;
  CashAccountingSchemeType: number;
  ChargeableMotive: number;
  AccountingExportDate2: Date | null;
  TransmissionStatus: number;
  ATCUD: string;
  QRCode: string;
  ContractReferenceNumber: string;
  WithholdingTaxType: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  DocumentsSeriesNumber?: DocumentsSeriesNumber;
}

export interface PostVoidAccountTransactionDetails {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  PartyTypeCode: number;
  PartyID: bigint;
  PartyAccountTypeID: string;
  LedgerGuid: string;
  DocSerial: string;
  DocID: string;
  DocNumber: bigint;
  DocInstallmentID: number;
  DocContractReference: string;
  DocCreateDate: Date | null;
  DocDeferredPaymentDate: Date | null;
  TotalOriginalAmount: number;
  TotalPendingAmount: number;
  TotalDiscountAmount: number;
  TotalDiscountPercent: number;
  TotalPayedAmount: number;
  RetentionOriginalAmount: number;
  RetentionPendingAmount: number;
  RetentionPayedAmount: number;
  RetentionOriginalStampDuty: number;
  RetentionPendingStampDuty: number;
  RetentionPayedStampDuty: number;
  DocCurrencyID: string;
  DocCurrencyExchange: number;
  DocCurrencyFactor: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date;
  HrAlt: number;
  AccountTransaction?: AccountTransaction;
}

export interface PostVoidCardTenderLineItem {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  TransOrder: number;
  TenderDetailGuid: string;
  BIDStore: string;
  BIDPos: string;
  BIDSession: string;
  CardType: string;
  CardMediaIssuer: string;
  CardNumber: string;
  CardExpirationDate: string;
  CardHolderName: string;
  ApprovalCode: string;
  ApprovalType: number;
  ApprovalDate: Date | null;
  ApprovalTime: Date | null;
  RequestNumber: bigint;
  ControlNumber: bigint;
  EPSReferenceNumber: string;
  HostProcessor: string;
  OriginRequestNumber: bigint;
  OriginEPSReferenceNumber: string;
  OriginTransSerial: string;
  OriginTransDocument: string;
  OriginTransDocNumber: bigint;
  AmountPaid: number;
  AmountTip: number;
  SalesmanID: bigint;
  DCC_CardholderChoice: boolean;
  DCC_CardholderCurrencyAlfaCode: string;
  DCC_CardholderCurrencyCode: number;
  DCC_CardholderCurrencyDesc: string;
  DCC_CardholderCurrencySymbol: string;
  DCC_ConversionRate: number;
  DCC_InformativeTicket: string;
  EMV_ApplicationLabel: string;
  EMV_AuthorizationResponseCode: string;
  EMV_ApplicationIdentifier: string;
  EMV_ApplicationTransactionCounter: bigint;
  EMV_TerminalVerificationResult: string;
  StoreTicket: string;
  CustomerTicket: string;
  PosIdentification: bigint;
  TillID: string;
  Guid: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface PostVoidTaxTransaction {
  VoidedTransactionSequenceNumber: bigint;
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  ZoneType: number;
  CreateDate: Date | null;
  TaxGroupID: string;
  TaxSequenceID: number;
  TaxRate: number;
  TotalNetAmount: number;
  TotalTaxAmount: number;
  TotalNetChargeableAmount: number;
  TotalTaxChargeableAmount: number;
  ChargeableMotive: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  CountryId: string;
  TaxRegionId: string;
  TransInstallmentId: number;
  TaxItemType: number;
  TaxExemptionReasonCode: string;
  TaxCode: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface PostVoidTaxTransactionDetail {
  VoidedTransactionSequenceNumber: bigint;
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  CreateDate: Date | null;
  LineItemID: bigint;
  LineItemSubID: number;
  ItemID: string;
  ZoneType: number;
  TaxGroupID: string;
  TaxSequenceID: number;
  TaxRate: number;
  TotalNetAmount: number;
  TotalTaxAmount: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  CountryId: string;
  TaxRegionId: string;
  TransInstallmentId: number;
  TaxItemType: number;
  TaxExemptionReasonCode: string;
  TaxCode: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface PostVoidTaxTransactionDetailParty {
  VoidedTransactionSequenceNumber: bigint;
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  LineItemID: bigint;
  LineItemSubID: number;
  ItemID: string;
  TaxGroupID: string;
  TaxSequenceID: number;
  TransInstallmentId: number;
  TaxGroupName: string;
  PartyID: bigint;
  PartyName: string;
  PartyWebAddress: string;
  TaxItemType: number;
  TaxExemptionReasonCode: string;
  TaxCode: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface PostVoidTranDetailExtraFields {
  VoidedTransactionSequenceNumber: bigint;
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  LineItemID: bigint;
  LineItemSubID: number;
  ExtraFieldID: bigint;
  TextAnswer: string;
  NumberAnswer: number;
  DateAnswer: Date | null;
  BooleanAnswer: boolean;
  MemoAnswer: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface PostVoidTranPropDetails {
  VoidedBusinessDayDate: Date | null;
  VoidedTransactionSequenceNumber: bigint;
  VoidedTillID: string;
  VoidedWorkstationID: number;
  VoidedSessionID: number;
  VoidedUserID: number;
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  LineItemID: bigint;
  LineItemSubID: number;
  CreateDate: Date | null;
  ActualDeliveryDate: Date | null;
  PhysicalQtyDate: Date | null;
  ItemID: string;
  PropertyValue1: string;
  PropertyValue1_Key2: string;
  PropertyValue1_Key3: string;
  PropertyValue2: string;
  PropertyValue2_Key2: string;
  PropertyValue2_Key3: string;
  PropertyValue3: string;
  PropertyValue3_Key2: string;
  PropertyValue3_Key3: string;
  PropertyControlType: number;
  PropertyControlMode: number;
  PropertyUseExpirationDate: boolean;
  PropertyUseProductionDate: boolean;
  PropertyExpDateControl: number;
  PropertyMaximumQuantity: number;
  ProductionDate: Date | null;
  ExpirationDate: Date | null;
  PartyTypeCode: number;
  PartyID: bigint;
  Quantity: number;
  PackQuantity: number;
  Units: number;
  StockUnits: number;
  UnitConversion: number;
  UnitOfMeasure: string;
  WarehouseID: number;
  TotalNetAmount: number;
  TotalOtherCostsAmount: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Documents?: Documents;
}

export interface PostVoidTransaction {
  VoidedBusinessDayDate: Date | null;
  VoidedTransactionSequenceNumber: bigint;
  VoidedTillID: string;
  VoidedWorkstationID: number;
  VoidedSessionID: number;
  VoidedUserID: number;
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  CreateDate: Date | null;
  ActualDeliveryDate: Date | null;
  PhysicalQtyDate: Date | null;
  OriginCreateDate: Date | null;
  OriginTransSerial: string;
  OriginTransDocument: string;
  OriginTransDocNumber: bigint;
  OriginLineItemID: bigint;
  OriginLineItemSubID: number;
  OriginQuantity: number;
  OriginUnits: number;
  DestinationTransSerial: string;
  DestinationTransDocument: string;
  DestinationTransDocNumber: bigint;
  DestinationLineItemID: number;
  DestinationLineItemSubID: number;
  DestinationQuantity: number;
  DestinationUnits: number;
  TransactionConverted: boolean;
  LineItemID: bigint;
  LineItemSubID: number;
  ItemID: string;
  POSItemID: string;
  LotID: string;
  ItemType: number;
  SupplierItemID: string;
  ColorID: number;
  SizeID: number;
  Description: string;
  TaxableGroupID: number;
  UnitOfSaleID: string;
  Quantity: number;
  PackQuantity: number;
  Units: number;
  StockUnits: number;
  UnitConversion: number;
  Quantity1: number;
  Quantity2: number;
  Quantity3: number;
  Quantity4: number;
  ComponentQty: number;
  UnitCasesCount: number;
  UnitPrice: number;
  TaxIncludedPrice: number;
  OriginalUnitPrice: number;
  OriginalTaxIncludedPrice: number;
  ItemAverageUnitPrice: number;
  ItemAverageTaxIncludedPrice: number;
  ItemLastCostUnitPrice: number;
  ItemLastCostTaxIncludedPrice: number;
  DiscountPercent: number;
  DiscountValue: number;
  UnitDiscountValue: number;
  DiscountID: number;
  WarehouseID: number;
  CumulativeDiscountPercent1: number;
  CumulativeDiscountPercent2: number;
  CumulativeDiscountPercent3: number;
  PaymentDiscountPercent1: number;
  PaymentDiscountPercent2: number;
  PaymentDiscountPercent3: number;
  PartyTypeCode: number;
  PartyID: bigint;
  SalesmanID: bigint;
  TotalGrossAmount: number;
  TotalLineItemDiscountAmount: number;
  TotalPaymentDiscountAmount: number;
  TotalNetAmount: number;
  TotalNetBaseTaxAmount: number;
  TotalNetPrintAmout: number;
  TotalOtherTaxAmount: number;
  TotalTaxAmount: number;
  TotalAmount: number;
  TotalTaxIncludedAmount: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  PromotionApplied: boolean;
  Comments: string;
  PrintedCopies: number;
  RequiredDeliveryDateTime: Date | null;
  ProductCode: string;
  PlantProtectionSaleAuthNumber: string;
  ProductCategory: number;
  ImputeToCustomerID: bigint;
  CustomerImputeID: bigint;
  RetentionTax: number;
  AdvancementOriginItemID: string;
  AdvancementOriginDescription: string;
  AdvancementMethod: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Documents?: Documents;
}

export interface PostVoidTransactionHeader {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  CreateDate: Date | null;
  SystemEntryDate: Date | null;
  SystemEntryUser: string;
  CreateTime: number;
  DeferredPaymentDate: Date | null;
  ActualDeliveryDate: Date | null;
  ContractReferenceNumber: string;
  DefaultWarehouse: number;
  PartyTypeCode: number;
  PartyID: bigint;
  PartyName: string;
  PartyAddress1: string;
  PartyAddress2: string;
  PartyPostalCode: string;
  PartyAddressID: number;
  PartyCountryID: string;
  PartyProvinceID: string;
  PartyLocalityID: bigint;
  PartyFederalTaxID: string;
  BillToPartyID: bigint;
  SalesmanID: bigint;
  PaymentID: number;
  TenderID: number;
  ZoneID: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  CarrierID: number;
  CarrierDescription: string;
  LoadPlaceID: number;
  LoadPlaceDescription: string;
  LoadPlaceDateTime: Date | null;
  UnloadPlaceID: number;
  UnloadPlaceDescription: string;
  UnloadPlaceDateTime: Date | null;
  TransactionTaxIncluded: boolean;
  TransactionCreditSale: boolean;
  LineItemsCount: bigint;
  TransactionConverted: boolean;
  Comments: string;
  RectificationMotive: string;
  RetentionTax: number;
  GlobalDiscountPercent: number;
  GlobalCumulativeDiscountPercent1: number;
  GlobalCumulativeDiscountPercent2: number;
  GlobalCumulativeDiscountPercent3: number;
  PaymentDiscountPercent: number;
  PaymentCumulativeDiscountPercent1: number;
  PaymentCumulativeDiscountPercent2: number;
  PaymentCumulativeDiscountPercent3: number;
  TotalGrossAmount: number;
  TotalLineItemDiscountAmount: number;
  TotalPaymentDiscountAmount: number;
  TotalRedeemedVoucherAmount: number;
  TotalGlobalDiscountAmount: number;
  TotalNetAmount: number;
  TotalTaxAmount: number;
  TotalOtherTaxesAmount: number;
  TotalFreightAmount: number;
  TotalFreightAmountWithTax: number;
  FreightTaxableGroupID: number;
  TotalAdjustmentAmount: number;
  TotalAmount: number;
  TotalAllowanceAmount: number;
  TotalChargeAmount: number;
  TotalRetentionAmount: number;
  TotalTransactionAmount: number;
  TotalPayedAmount: number;
  TotalAdvancementNetAmount: number;
  TotalAdvancementAmount: number;
  TotalAdvancementRetentionAmount: number;
  FrequentShopperPoints: number;
  DiscountFreqShopperPoints: number;
  SecondIssue: boolean;
  TransStatus: number;
  LogicStatus: number;
  StatusFlags: bigint;
  AccountingExportDate: Date | null;
  VoucherGiftTransSerial: string;
  VoucherGiftTransDocument: string;
  VoucherGiftTransDocNumber: bigint;
  VoucherGiftValue: number;
  CustomerImputeID: bigint;
  VehicleKilometers: number;
  SecondHandTaxRegimen: boolean;
  Signature: string;
  SignatureControl: number;
  SignatureInvoiceNo: string;
  SoftwareCertificateNumber: bigint;
  OriginatingON: string;
  HandWrittenTransactionNumber: string;
  TotalOtherCostAmount: number;
  AccountingOperation: string;
  CurrentStatusID: string;
  TransactionGuid: string;
  PrintedCopies: number;
  TillID: string;
  TransmissionStatus: number;
  DownPaymentInvoice: boolean;
  ShipToAddressDetailLine1: string;
  ShipToAddressDetailLine2: string;
  ShipToPostalCode: string;
  ShipToCountryID: string;
  ShipFromAddressDetailLine1: string;
  ShipFromAddressDetailLine2: string;
  ShipFromPostalCode: string;
  ShipFromCountryID: string;
  ATDocCodeId: string;
  ShipmentDocumentType: number;
  RegistrationPlate: string;
  CashAccountingSchemeType: number;
  PlantProtectionActivityAuth: string;
  PlantProtectionApplicator: string;
  UID: string;
  ChangeSetID: number;
  EInvoiceStatus: number;
  EInvoiceStatusDate: Date | null;
  EInvoiceSender: string;
  EInvoiceReceiver: string;
  EInvoiceSubmitDate: Date | null;
  EntityFiscalStatusID: number;
  LoyaltyId: string;
  LoyaltyUploadDate: Date | null;
  BalanceFreqShopperPoints: number;
  OnlineReceiptTagType: number;
  OnlineReceiptTag: string;
  OnlineReceiptToken: string;
  OnlineReceiptEmail: string;
  PABudgetExpenditureNumber: string;
  PAContractNumber: string;
  PACommitmentNumber: string;
  ATCUD: string;
  QRCode: string;
  PartyGLN: string;
  FrequentShopperProcessingState: number;
  PartyDelivery: string;
  WithholdingTaxType: string;
  SDNStatus: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  UserChanged: string;
  DtAlt: Date | null;
  HrAlt: number;
  DocumentsSeriesNumber?: DocumentsSeriesNumber;
}

export interface POSVideoSurveillance {
  VideoSurveillanceID: number;
  Description: string;
  DefaultPort: string;
  DefaultBaudRate: string;
  VideoSurveillance_DRVType: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface POSWinDrvPrinters {
  POSPrinterID: number;
  DefaultPort: string;
  DefaultBaudRate: string;
  Description: string;
  ESCInicializar: string;
  ESCInvertedPrintOn: string;
  ESCInvertedPrintOff: string;
  ESCFullCut: string;
  ESCCarriageReturn: string;
  ESCReceiptPaperEnableSequence: string;
  ESCReceiptPaperDisableSequence: string;
  ESCReceiptAndJournalPaperEnableSequence: string;
  ESCReceiptAndJournalPaperDisableSequence: string;
  ESCSlipPaperEnableSequence: string;
  ESCSlipPaperDisableSequence: string;
  ESCSlipPaperInsertWaitingTimeSequence: string;
  ESCSlipPaperEjectSequence: string;
  ESCDoublePrintEnableSequence: string;
  ESCDoublePrintDisableSequence: string;
  ESCControlFont: string;
  ESCSmallFont: string;
  ESCSmallFontColor: string;
  ESCBigFont: string;
  ESCBigFontColor: string;
  PrinterCodePage: number;
  LineFeed: number;
  UniStationValues: boolean;
  MultiStationValues: boolean;
  HandlesDoublePrintAutomatically: boolean;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface PriceChangeByDocument {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  ItemID: string;
  PriceLineID: number;
  LotID: string;
  SizeID: number;
  PropertyValue1: string;
  PropertyValue2: string;
  PropertyValue3: string;
  Quantity: number;
  Units: number;
  TotalNetAmount: number;
  TotalNetAmountWithTax: number;
  ItemLastCostUnitPrice: number;
  ItemLastCostTaxIncludedPrice: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  NewPrice: number;
  NewPriceWithTax: number;
  NewPriceCurrency: string;
  NewPriceExchange: number;
  NewPriceFactor: number;
  PartyType: number;
  PartyID: bigint;
  PriceChangeChecked: boolean;
  PriceChangeDate: Date | null;
  PriceChangeDiscarded: boolean;
  FlagControlChange: boolean;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface PriceLine {
  PriceLineID: number;
  PriceLineKey: string;
  LanguageID: string;
  ShortDescription: string;
  Description: string;
  UID: string;
  ChangeSetID: number;
  IsPricing: boolean;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface Promotion {
  PromotionID: number;
  StartDate: Date | null;
  StartTime: Date | null;
  EndDate: Date | null;
  EndTime: Date | null;
  EligibilityRuleType: number;
  EligibilityRule: string;
  AplyRulePredefinition: number;
  AplyRuleField: string;
  AplyRule: string;
  LocalizedEligibilityRule: string;
  LocalizedAplyRule: string;
  PromotionalTypeCode: number;
  PromotionResult1: number;
  PromotionResult2: number;
  PromotionResult3: number;
  ConcurrenceCode: number;
  PromotionActive: boolean;
  AlwaysAvailable: boolean;
  ExcludePromotionItems: boolean;
  WorkstationList: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  PromotionSearchLst?: PromotionSearchLst[];
}

export interface PromotionSearchLst {
  PromotionID: number;
  ListID: number;
  ListField: string;
  ItemCode: string;
  SizeID: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Promotion?: Promotion;
}

export interface PromotionStores {
  PromotionID: number;
  StoreID: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface ProvinceCodes {
  CountryID: string;
  ProvinceID: string;
  ProvinceName: string;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  LocalityCodes?: LocalityCodes[];
  CountryCodes?: CountryCodes;
  StreetCodes?: StreetCodes[];
}

export interface PSRTCustomers {
  StoreID: number;
  SyncUID: bigint;
  State: number;
  SyncCounter: bigint;
  CustomerID: bigint;
  CustomerKey: bigint;
  Syncronize: boolean;
  ModifyDate: Date | null;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface PSRTDocuments {
  ID: Decimal;
  StoreID: number;
  OriginDocType: bigint;
  OriginTransSerial: string;
  DestinTransDocument: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface PSRTDocumentTypes {
  StoreID: number;
  SyncUID: bigint;
  State: number;
  SyncCounter: bigint;
  Code: bigint;
  Description: string;
  ShortDescription: string;
  HeaderUID: bigint;
  FooterUID: bigint;
  BodyUID: bigint;
  NumberOfColumns: bigint;
  DocumentCounterUID: bigint;
  DocumentType: bigint;
  NumVias: bigint;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface PSRTFamilies {
  StoreID: number;
  SyncUID: bigint;
  State: number;
  SyncCounter: bigint;
  Description: string;
  ShortDescription: string;
  Code: bigint;
  DefaultSalesPrice: bigint;
  DefaultSalesTax: bigint;
  PropertyUID: bigint;
  ComissionGroupUID: bigint;
  PrintLocationUID: bigint;
  ModifyDate: Date | null;
  Syncronize: boolean;
  FamilyKey: bigint;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface PSRTItem {
  StoreID: number;
  SyncUID: bigint;
  State: number;
  SyncCounter: bigint;
  Syncronize: boolean;
  ItemID: number;
  ShortDescription2: string;
  ItemKey: string;
  ModifyDate: Date | null;
  FamilyID: number;
  SubFamilyID: number;
  PropertyUID: number;
  ProductLookUp: bigint;
  StockQuantity: number;
  StockAlarm: number;
  StockManagement: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface PSRTMenuLevelPlus {
  StoreID: number;
  SyncUID: bigint;
  State: number;
  SyncCounter: bigint;
  MenuLevelUID: bigint;
  PluUID: bigint;
  ExtraSalesValue: bigint;
  SubFamilyUID: bigint;
  SalesPVP: bigint;
  IsOffer: bigint;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface PSRTMenuLevels {
  StoreID: number;
  SyncUID: bigint;
  State: number;
  SyncCounter: bigint;
  Description: string;
  MenuUID: bigint;
  OrderNumber: bigint;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface PSRTMenus {
  StoreID: number;
  SyncUID: bigint;
  State: number;
  SyncCounter: bigint;
  PLUUID: bigint;
  Description: string;
  InUse: bigint;
  MaxPromotionValue: bigint;
  AddIfBiggerThenPromo: bigint;
  SalesPVP: bigint;
  SalesValue: bigint;
  AddInOrder: bigint;
  TerminalsInUse: string;
  Type: bigint;
  RepeatCount: bigint;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface PSRTPrintLocations {
  StoreID: number;
  SyncUID: bigint;
  State: number;
  SyncCounter: bigint;
  Code: bigint;
  Description: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface PSRTPrintMap {
  StoreID: number;
  SyncUID: bigint;
  State: number;
  SyncCounter: bigint;
  PrintLocationUID: bigint;
  ZoneUID: bigint;
  SalesTerminalUID: bigint;
  ProfileUID: bigint;
  PrinterUID: bigint;
  DocsUID0: bigint;
  DocsUID1: bigint;
  PrintSecondaryOrders: bigint;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface PSRTProperties {
  StoreID: number;
  SyncUID: bigint;
  State: number;
  SyncCounter: bigint;
  Color: bigint;
  ItemType: bigint;
  VariablePrice: bigint;
  ReadQuantityFromScale: bigint;
  SalesPrice1: bigint;
  SalesPrice2: bigint;
  SalesPrice3: bigint;
  SalesPrice4: bigint;
  SalesPrice5: bigint;
  ItemTaxID1: bigint;
  ItemTaxID2: bigint;
  KitchenPrinters: string;
  KDSMaxCookTime: bigint;
  KDSAverageCookTime: bigint;
  PrintingOrder: number;
  CostPrice: bigint;
  WeightConversionFactor: bigint;
  SalesPoints: bigint;
  DisplayOrder: number;
  Link: number;
  ExcludeForCompensationTotal: number;
  IsService: number;
  WithHoldingPercentage: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface PSRTSalesTerminal {
  StoreID: number;
  SyncUID: bigint;
  State: number;
  SyncCounter: bigint;
  Code: bigint;
  Description: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface PSRTStores {
  StoreID: number;
  Description: string;
  ODBCDriverName: string;
  ServerName: string;
  ServerPort: string;
  ServerDBName: string;
  ServerUser: string;
  ServerPassword: string;
  TerminalID: number;
  ItemIDPrefix: string;
  DefaultWarehouseID: number;
  DefaultSupplierID: bigint;
  TransSerial: string;
  ImportDateEntities: Date | null;
  ImportDateTransactions: Date | null;
  CashEntranceTransDocument: string;
  CashWithdrawalTransDocument: string;
  CashWithdrawalSalesmanTransDocument: string;
  CustomerPaymentTransDocument: string;
  CustomerPaymentAccountDocument: string;
  DefaultTenderPayment: number;
  DefaultTaxableGroup: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface PSRTSubFamilies {
  StoreID: number;
  SyncUID: bigint;
  State: number;
  SyncCounter: bigint;
  Description: string;
  ShortDescription: string;
  Code: bigint;
  DefaultSalesPrice: bigint;
  DefaultSalesTax: bigint;
  FamilyUID: bigint;
  PropertyUID: bigint;
  ComissionGroupUID: bigint;
  PrintLocationUID: bigint;
  ModifyDate: Date | null;
  Syncronize: boolean;
  FamilyKey: bigint;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface PSRTTaxableGroup {
  StoreID: number;
  OriginTaxRate: bigint;
  DestinTaxableGroupID: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface PSRTTaxes {
  StoreID: number;
  SyncUID: bigint;
  State: number;
  SyncCounter: bigint;
  Code: bigint;
  Description: string;
  TaxRate: bigint;
  TaxExpirationDate: Date | null;
  Comment: string;
  TaxTypeUID: bigint;
  TaxRegionUID: bigint;
  TaxRatePerc: bigint;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface PSRTTender {
  StoreID: number;
  SyncUID: bigint;
  State: number;
  SyncCounter: bigint;
  ShortDescription: string;
  OriginTenderID: bigint;
  DestinTenderID: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface PSRTTerminalsHardware {
  StoreID: number;
  SyncUID: bigint;
  State: number;
  SyncCounter: bigint;
  HwDescription: string;
  InterfaceTypeID: bigint;
  DeviceManagerUID: bigint;
  DeviceDescription: string;
  DeviceTypeID: bigint;
  DriversUID: bigint;
  SalesTerminalUID: bigint;
  BackupDeviceUID: bigint;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface PSRTZone {
  StoreID: number;
  SyncUID: bigint;
  State: number;
  SyncCounter: bigint;
  Code: bigint;
  Description: string;
  ShortDescription: string;
  TableRange: string;
  DefaultSalesPriceIndex: bigint;
  DefaultTaxUID: bigint;
  DefaultTableName: string;
  PSRTType: bigint;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface PSRTZoneProperties {
  StoreID: number;
  SyncUID: bigint;
  State: number;
  SyncCounter: bigint;
  Description: string;
  Value: string;
  ZoneUID: bigint;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface QEROTransaction {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  QEROMov_Id: number;
  TransactionData: string;
  TransactionAction: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface RemoteData {
  ID: string;
  Name: string;
  Protocol: string;
  Host: string;
  Port: number;
  CompanyID: string;
  UserID: string;
  PasswordE: string;
  Inactive: boolean;
  WarehouseList: string;
  MaxResultsCount: number;
}

export interface Routes {
  RouteID: number;
  Description: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  SalesmanRoutes?: SalesmanRoutes[];
  SubRoutes?: SubRoutes[];
}

export interface SaleGroups {
  GroupID: string;
  Description: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface Salesman {
  SalesmanID: bigint;
  SalesmanKey: string;
  SalesmanName: string;
  AddressLine1: string;
  AddressLine2: string;
  PostalCode: string;
  CountryID: string;
  ProvinceID: string;
  LocalityID: bigint;
  Telephone1: string;
  Telephone2: string;
  Telephone3: string;
  Telephone4: string;
  MobilPhone1: string;
  MobilPhone2: string;
  EmailAddress: string;
  WebAddress: string;
  AdmissionDate: Date | null;
  BirthDate: Date | null;
  SpokenLanguageID: string;
  IdentityCard: string;
  FederalTaxID: string;
  KeyFederalTaxID: bigint;
  SalesmanLevel: number;
  MaximumDiscount: number;
  SalesmanPassword: string;
  SalesmanPasswordE: string;
  Comments: string;
  SalesmanPicturePath: string;
  SalesGroupID: number;
  ComissionOnSale: number;
  ComissionOnPay: number;
  ComissionIncidenceType: number;
  ComissionAccountTypeID: string;
  AplyRetentionTax: boolean;
  RetentionTax: number;
  CardID: string;
  DepartmentID: string;
  DefaultMainTillID: string;
  DefaultTillID: string;
  DefaultOfflineTillID: string;
  AlwaysAvailable: boolean;
  Inactive: boolean;
  PasswordStrength: number;
  ChangeSetId: number;
  GDPRConsent: boolean;
  GDPRConsentDate: Date | null;
  GDPRSystemUserGUID: string;
  GDPRForgetDate: Date | null;
  GDPRForgetUserGUID: string;
  GDPRRequestDate: Date | null;
  GDPRRequestEmail: string;
  GDPRRequestUserGUID: string;
  GDPRStateDate: Date | null;
  GDPRStateUserGUID: string;
  GDPRState: number;
  WithholdingTaxType: string;
  WhatsAppConsent: boolean;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  AppSalesmansGroups?: AppSalesmansGroups[];
  ComissionBySalesman?: ComissionBySalesman[];
  Customer?: Customer[];
  SalesmanLedgerAccount?: SalesmanLedgerAccount[];
  SalesmanRoutes?: SalesmanRoutes[];
}

export interface SalesmanGroups {
  GroupID: number;
  Description: string;
  GroupKey: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface SalesmanLedgerAccount {
  LedgerCounter: Decimal;
  LedgerGuid: string;
  InternalID: bigint;
  ReconciledFlag: boolean;
  CreateDate: Date | null;
  DeferredPaymentDate: Date | null;
  SystemEntryDate: Date | null;
  ContractReferenceNumber: string;
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  TransInstallmentID: number;
  TotalAmount: number;
  TotalPendingAmount: number;
  OperationID: number;
  TotalAccountSign: number;
  BalanceAmount: number;
  BalanceAccountSign: number;
  PartyTypeCode: number;
  PartyID: bigint;
  SalesmanID: bigint;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  ExchangeDifCurrency: string;
  RetentionTotalAmount: number;
  RetentionPendingAmount: number;
  RetentionStampDutyTotal: number;
  RetentionStampDutyPending: number;
  DebitTotalAmount: number;
  CreditTotalAmount: number;
  TransStatus: number;
  PartyAccountTypeID: string;
  OriginTransSerial: string;
  OriginTransDocument: string;
  OriginTransDocNumber: bigint;
  PartyAddressID: number;
  CashAccountingSchemeType: number;
  ComissionAmount: number;
  BalanceCompensationFlag: boolean;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Operation?: Operation;
  Salesman?: Salesman;
}

export interface SalesmanRoutes {
  SalesmanID: bigint;
  RouteID: number;
  OrderID: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Routes?: Routes;
  Salesman?: Salesman;
}

export interface SalesmanSalesGroup {
  SalesGroupID: number;
  Description: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  SalesmanSalesGroupPenalties?: SalesmanSalesGroupPenalties[];
}

export interface SalesmanSalesGroupPenalties {
  SalesGroupID: number;
  Days: number;
  Penalty: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  SalesmanSalesGroup?: SalesmanSalesGroup;
}

export interface SalesmanStores {
  SalesmanID: bigint;
  StoreID: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface SaleTransaction {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  CreateDate: Date | null;
  SystemEntryDate: Date | null;
  SystemEntryUser: string;
  CreateTime: number;
  DeferredPaymentDate: Date | null;
  ActualDeliveryDate: Date | null;
  ContractReferenceNumber: string;
  DefaultWarehouse: number;
  PartyTypeCode: number;
  PartyID: bigint;
  PartyName: string;
  PartyAddress1: string;
  PartyAddress2: string;
  PartyPostalCode: string;
  PartyAddressID: number;
  PartyCountryID: string;
  PartyProvinceID: string;
  PartyLocalityID: bigint;
  PartyFederalTaxID: string;
  BillToPartyID: bigint;
  SalesmanID: bigint;
  PaymentID: number;
  TenderID: number;
  ZoneID: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  CarrierID: number;
  CarrierDescription: string;
  LoadPlaceID: number;
  LoadPlaceDescription: string;
  LoadPlaceDateTime: Date | null;
  UnloadPlaceID: number;
  UnloadPlaceDescription: string;
  UnloadPlaceDateTime: Date | null;
  TransactionTaxIncluded: boolean;
  TransactionCreditSale: boolean;
  LineItemsCount: bigint;
  TransactionConverted: boolean;
  Comments: string;
  RectificationMotive: string;
  RetentionTax: number;
  GlobalDiscountPercent: number;
  GlobalCumulativeDiscountPercent1: number;
  GlobalCumulativeDiscountPercent2: number;
  GlobalCumulativeDiscountPercent3: number;
  PaymentDiscountPercent: number;
  PaymentCumulativeDiscountPercent1: number;
  PaymentCumulativeDiscountPercent2: number;
  PaymentCumulativeDiscountPercent3: number;
  TotalGrossAmount: number;
  TotalLineItemDiscountAmount: number;
  TotalPaymentDiscountAmount: number;
  TotalRedeemedVoucherAmount: number;
  TotalGlobalDiscountAmount: number;
  TotalNetAmount: number;
  TotalTaxAmount: number;
  TotalOtherTaxesAmount: number;
  TotalFreightAmount: number;
  TotalFreightAmountWithTax: number;
  FreightTaxableGroupID: number;
  TotalAdjustmentAmount: number;
  TotalAmount: number;
  TotalAllowanceAmount: number;
  TotalChargeAmount: number;
  TotalRetentionAmount: number;
  TotalTransactionAmount: number;
  TotalPayedAmount: number;
  TotalAdvancementNetAmount: number;
  TotalAdvancementAmount: number;
  TotalAdvancementRetentionAmount: number;
  FrequentShopperPoints: number;
  DiscountFreqShopperPoints: number;
  SecondIssue: boolean;
  TransStatus: number;
  LogicStatus: number;
  StatusFlags: bigint;
  AccountingExportDate: Date | null;
  VoucherGiftTransSerial: string;
  VoucherGiftTransDocument: string;
  VoucherGiftTransDocNumber: bigint;
  VoucherGiftValue: number;
  CustomerImputeID: bigint;
  VehicleKilometers: number;
  SecondHandTaxRegimen: boolean;
  Signature: string;
  SignatureControl: number;
  SignatureInvoiceNo: string;
  SoftwareCertificateNumber: bigint;
  OriginatingON: string;
  HandWrittenTransactionNumber: string;
  TotalOtherCostAmount: number;
  AccountingOperation: string;
  CurrentStatusID: string;
  TransactionGuid: string;
  PrintedCopies: number;
  TillID: string;
  TransmissionStatus: number;
  DownPaymentInvoice: boolean;
  ShipToAddressDetailLine1: string;
  ShipToAddressDetailLine2: string;
  ShipToPostalCode: string;
  ShipToCountryID: string;
  ShipFromAddressDetailLine1: string;
  ShipFromAddressDetailLine2: string;
  ShipFromPostalCode: string;
  ShipFromCountryID: string;
  ATDocCodeId: string;
  ShipmentDocumentType: number;
  RegistrationPlate: string;
  CashAccountingSchemeType: number;
  PlantProtectionActivityAuth: string;
  PlantProtectionApplicator: string;
  UID: string;
  ChangeSetID: number;
  EInvoiceStatus: number;
  EInvoiceStatusDate: Date | null;
  EInvoiceSender: string;
  EInvoiceReceiver: string;
  EInvoiceSubmitDate: Date | null;
  EntityFiscalStatusID: number;
  LoyaltyId: string;
  LoyaltyUploadDate: Date | null;
  BalanceFreqShopperPoints: number;
  OnlineReceiptTagType: number;
  OnlineReceiptTag: string;
  OnlineReceiptToken: string;
  OnlineReceiptEmail: string;
  PABudgetExpenditureNumber: string;
  PAContractNumber: string;
  PACommitmentNumber: string;
  ATCUD: string;
  QRCode: string;
  PartyGLN: string;
  FrequentShopperProcessingState: number;
  PartyDelivery: string;
  WithholdingTaxType: string;
  SDNStatus: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  UserChanged: string;
  DtAlt: Date | null;
  HrAlt: number;
  DocumentsSeriesNumber?: DocumentsSeriesNumber;
  SaleTransactionDetails?: SaleTransactionDetails[];
  SaleTransactionRedeemedVoucher?: SaleTransactionRedeemedVoucher[];
}

export interface SaleTransactionDetails {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  CreateDate: Date | null;
  ActualDeliveryDate: Date | null;
  PhysicalQtyDate: Date | null;
  OriginCreateDate: Date | null;
  OriginTransSerial: string;
  OriginTransDocument: string;
  OriginTransDocNumber: bigint;
  OriginLineItemID: bigint;
  OriginLineItemSubID: number;
  OriginQuantity: number;
  OriginUnits: number;
  DestinationTransSerial: string;
  DestinationTransDocument: string;
  DestinationTransDocNumber: bigint;
  DestinationLineItemID: bigint;
  DestinationLineItemSubID: number;
  DestinationQuantity: number;
  DestinationUnits: number;
  TransactionConverted: boolean;
  LineItemID: bigint;
  LineItemSubID: number;
  ItemID: string;
  POSItemID: string;
  LotID: string;
  ItemType: number;
  SupplierItemID: string;
  ColorID: number;
  SizeID: number;
  Description: string;
  TaxableGroupID: number;
  UnitOfSaleID: string;
  Quantity: number;
  PackQuantity: number;
  Units: number;
  StockUnits: number;
  UnitConversion: number;
  Quantity1: number;
  Quantity2: number;
  Quantity3: number;
  Quantity4: number;
  ComponentQty: number;
  UnitCasesCount: number;
  UnitPrice: number;
  TaxIncludedPrice: number;
  OriginalUnitPrice: number;
  OriginalTaxIncludedPrice: number;
  ItemAverageUnitPrice: number;
  ItemAverageTaxIncludedPrice: number;
  ItemLastCostUnitPrice: number;
  ItemLastCostTaxIncludedPrice: number;
  DiscountPercent: number;
  DiscountValue: number;
  UnitDiscountValue: number;
  DiscountID: number;
  WarehouseID: number;
  CumulativeDiscountPercent1: number;
  CumulativeDiscountPercent2: number;
  CumulativeDiscountPercent3: number;
  PaymentDiscountPercent1: number;
  PaymentDiscountPercent2: number;
  PaymentDiscountPercent3: number;
  PartyTypeCode: number;
  PartyID: bigint;
  SalesmanID: bigint;
  TotalGrossAmount: number;
  TotalLineItemDiscountAmount: number;
  TotalPaymentDiscountAmount: number;
  TotalNetAmount: number;
  TotalNetBaseTaxAmount: number;
  TotalNetPrintAmout: number;
  TotalOtherTaxAmount: number;
  TotalTaxAmount: number;
  TotalAmount: number;
  TotalTaxIncludedAmount: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  PromotionApplied: boolean;
  TransactionDetailClosed: boolean;
  Comments: string;
  DetailGuid: string;
  Signature: string;
  RequiredDeliveryDateTime: Date | null;
  ProductCode: string;
  PlantProtectionSaleAuthNumber: string;
  ProductCategory: number;
  ImputeToCustomerID: bigint;
  CustomerImputeID: bigint;
  RetentionTax: number;
  AdvancementOriginItemID: string;
  AdvancementOriginDescription: string;
  AdvancementMethod: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date;
  HrAlt: number;
  Documents?: Documents;
  SaleTransaction?: SaleTransaction;
}

export interface SaleTransactionLog {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  SignatureMessage: string;
  ControlNumber: bigint;
}

export interface SaleTransactionParty {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  CreateDate: Date | null;
  BillToPartyTypeCode: number;
  BillToPartyID: bigint;
  BillToPartyName: string;
  BillToPartyAddress1: string;
  BillToPartyAddress2: string;
  BillToPartyPostalCode: string;
  BillToPartyAddressID: number;
  BillToPartyCountryID: string;
  BillToPartyProvinceID: string;
  BillToPartyLocalityID: bigint;
  BillToPartyFederalTaxID: string;
  CustomerPaidDeductibleAmount: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  UserChanged: string;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface SaleTransactionRedeemedVoucher {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  TransOrder: number;
  CreateDate: Date | null;
  VoucherTransSerial: string;
  VoucherTransDocument: string;
  VoucherTransDocNumber: bigint;
  VoucherAmountReceived: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  SaleTransaction?: SaleTransaction;
}

export interface SDNTransaction {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  SDNGuid: string;
  ComunicationDate: Date | null;
  ComunicationTime: number;
  SDNStatus: number;
  SDNStatusMessage: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface SecuritiesTenderLineItem {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  TransOrder: number;
  DebitedTransSerial: string;
  DebitedTransDocument: string;
  DebitedTransDocNumber: number;
  Guid: string;
  TenderDetailGuid: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  TenderLineItem?: TenderLineItem;
}

export interface SecuritiesTransaction {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  Guid: string;
  CreateDate: Date | null;
  CreateTime: number;
  AccountingDate: Date | null;
  SystemEntryDate: Date | null;
  SystemEntryUser: string;
  UserChanged: string;
  Comments: string;
  ContractReferenceNumber: string;
  PartyTypeCode: number;
  PartyID: bigint;
  PartyName: string;
  PartyAddress1: string;
  PartyAddress2: string;
  PartyPostalCode: string;
  PartyAddressID: number;
  PartyCountryID: string;
  PartyProvinceID: string;
  PartyLocalityID: bigint;
  PartyFederalTaxID: string;
  BankID: number;
  BankAccountID: bigint;
  TotalAmount: number;
  TotalPayedAmount: number;
  TotalComissionAmount: number;
  TotalInterestsAmount: number;
  TotalStampTaxAmount: number;
  TotalExpensesAmount: number;
  SalesmanID: bigint;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  TransStatus: number;
  AccountingExportDate: Date | null;
  PrintedCopies: number;
  TillID: string;
  StampTaxGroupID: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  SecuritiesTransactionDetails?: SecuritiesTransactionDetails[];
}

export interface SecuritiesTransactionDetails {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  TransactionGuid: string;
  Guid: string;
  PartyTypeCode: number;
  PartyID: bigint;
  DocSerial: string;
  DocID: string;
  DocNumber: bigint;
  DocInstallmentID: number;
  PreviousStateID: number;
  PreviousAccountTypeID: string;
  TotalPayedAmount: number;
  TotalOriginalAmount: number;
  TotalPendingAmount: number;
  TotalComissionAmount: number;
  TotalInterestsAmount: number;
  TotalStampTaxAmount: number;
  TotalExpensesAmount: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  SecuritiesTransaction?: SecuritiesTransaction;
}

export interface Size {
  SizeID: number;
  SizeKey: string;
  Description: string;
  ClothingTypeID: number;
  GenderID: number;
  StandardSizeID: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  CustomerContractItem?: CustomerContractItem[];
  ItemPredefinitionSize?: ItemPredefinitionSize[];
  ItemSize?: ItemSize[];
  POSIdentity?: POSIdentity[];
  ClothingType?: ClothingType;
  Gender?: Gender;
  StandardSize?: StandardSize;
  Stock?: Stock[];
  StockHistory?: StockHistory[];
}

export interface StampTaxGroup {
  StampTaxGroupID: string;
  Description: string;
  EffectiveDate: Date | null;
  ExpireDate: Date | null;
  StampTaxCalculType: number;
  StampTaxRate: number;
  StampTaxValue: number;
  CurrencyID: string;
  CurrencyFactor: number;
  CurrencyExchange: number;
  InternalUse: boolean;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface StandardSize {
  StandardSizeID: number;
  Description: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Size?: Size[];
  StandardSizeGenderClothingType?: StandardSizeGenderClothingType[];
}

export interface StandardSizeGenderClothingType {
  StandardSizeID: number;
  GenderID: number;
  ClothingTypeID: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  ClothingType?: ClothingType;
  Gender?: Gender;
  StandardSize?: StandardSize;
}

export interface Stock {
  IntCod: Decimal;
  ItemID: string;
  LotID: string;
  ColorID: number;
  SizeID: number;
  WarehouseID: number;
  CustomerOrderQty: number;
  SupplierOrderQty: number;
  CustomerConsignmentQty: number;
  SupplierConsignmentQty: number;
  AvailableQty: number;
  PhysicalQty: number;
  CustomerOrderUnits: number;
  SupplierOrderUnits: number;
  CustomerConsignmentUnits: number;
  SupplierConsignmentUnits: number;
  AvailableUnits: number;
  PhysicalUnits: number;
  LastReceivedDate: Date | null;
  LastOutgoingDate: Date | null;
  LastCostPrice: number;
  TaxIncludedLastCostPrice: number;
  AverageCostStockValue: number;
  LastCostStockValue: number;
  ReorderPoint: number;
  RestockLevel: number;
  BinLocation: string;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Color?: Color;
  Item?: Item;
  Size?: Size;
  Warehouse?: Warehouse;
}

export interface StockHistory {
  StockCounter: Decimal;
  InternalID: bigint;
  CreateDate: Date | null;
  ActualDeliveryDate: Date;
  LineItemID: bigint;
  LineItemSubID: number;
  ItemID: string;
  LotID: string;
  ColorID: number;
  SizeID: number;
  PropertyValue1: string;
  PropertyValue2: string;
  PropertyValue3: string;
  Quantity: number;
  StockUnits: number;
  UnitConversion: number;
  UnitOfMeasure: string;
  PhysicalQtyRule: number;
  WarehouseID: number;
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  ContractReferenceNumber: string;
  UnitPrice: number;
  LastCostPrice: number;
  TotalNetAmount: number;
  TotalDiscountAmount: number;
  TotalTaxAmount: number;
  TotalOtherCostsAmount: number;
  TotalStockAmount: number;
  TotalInventoryBalance: number;
  CostComputed: boolean;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  PartyTypeCode: number;
  PartyID: bigint;
  OperationID: number;
  StatementInternalID: bigint;
  StatementQuantityReceived: number;
  StatementQuantityOutgoing: number;
  StatementQuantityBalance: number;
  StatementUnitsReceived: number;
  StatementUnitsOutgoing: number;
  StatementUnitsBalance: number;
  StatementStockValue: number;
  StatementStockValueReceived: number;
  StatementStockValueOutgoing: number;
  StatementAverageCostPrice: number;
  StatementLastCostPrice: number;
  ProductCategory: number;
  AvailableQuantityOffset: number;
  AvailableUnitsOffset: number;
  StockGuid: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Color?: Color;
  Operation?: Operation;
  Size?: Size;
}

export interface StockProperty {
  ItemID: string;
  WarehouseID: number;
  PropertyValue1: string;
  PropertyValue1_Key2: string;
  PropertyValue1_Key3: string;
  PropertyValue2: string;
  PropertyValue2_Key2: string;
  PropertyValue2_Key3: string;
  PropertyValue3: string;
  PropertyValue3_Key2: string;
  PropertyValue3_Key3: string;
  SupplierID: bigint;
  ProductionDate: Date | null;
  ExpirationDate: Date | null;
  PhysicalQty: number;
  PhysicalUnits: number;
  QuantityReceived: number;
  QuantityOutgoing: number;
  LastCostPrice: number;
  AverageCostStockValue: number;
  LastReceivedDate: Date | null;
  LastOutgoingDate: Date | null;
  CurrencyID: string;
  CurrencyFactor: number;
  CurrencyExchange: number;
  FirstTransSerial: string;
  FirstTransDocument: string;
  FirstTransDocNumber: bigint;
  DirectEntry: boolean;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface StockTransaction {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  CreateDate: Date | null;
  CreateTime: number;
  ContractReferenceNumber: string;
  ActualDeliveryDate: Date | null;
  PartyTypeCode: number;
  PartyID: bigint;
  PartyName: string;
  PartyAddress1: string;
  PartyAddress2: string;
  PartyPostalCode: string;
  PartyAddressID: number;
  PartyCountryID: string;
  PartyProvinceID: string;
  PartyLocalityID: bigint;
  PartyFederalTaxID: string;
  WarehouseReceipt: number;
  WarehouseOutgoing: number;
  TotalNetAmount: number;
  TotalTaxAmount: number;
  TotalAmount: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  TransactionTaxIncluded: boolean;
  LineItemsCount: bigint;
  TransactionConverted: boolean;
  TransStatus: number;
  Comments: string;
  AccountingExportDate: Date | null;
  PrintedCopies: number;
  SystemEntryUser: string;
  UserChanged: string;
  BuyOriginTransID: string;
  ATCUD: string;
  QRCode: string;
  PartyGLN: string;
  PartyDelivery: string;
  SaleOriginTransSerial: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface StockTransactionDetails {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  CreateDate: Date | null;
  ActualDeliveryDate: Date | null;
  PhysicalQtyDate: Date | null;
  OriginTransSerial: string;
  OriginTransDocument: string;
  OriginTransDocNumber: bigint;
  OriginLineItemID: bigint;
  OriginLineItemSubID: number;
  OriginQuantity: number;
  OriginUnits: number;
  DestinationTransSerial: string;
  DestinationTransDocument: string;
  DestinationTransDocNumber: bigint;
  DestinationLineItemID: bigint;
  DestinationLineItemSubID: number;
  DestinationQuantity: number;
  DestinationUnits: number;
  TransactionConverted: boolean;
  LineItemID: bigint;
  LineItemSubID: number;
  ItemID: string;
  POSItemID: string;
  LotID: string;
  ItemType: number;
  ColorID: number;
  SizeID: number;
  Description: string;
  TaxableGroupID: number;
  UnitOfSaleID: string;
  CountedQuantity: number;
  ConsignmentQuantity: number;
  Quantity: number;
  PackQuantity: number;
  Units: number;
  StockUnits: number;
  UnitConversion: number;
  Quantity1: number;
  Quantity2: number;
  Quantity3: number;
  Quantity4: number;
  ComponentQty: number;
  UnitCasesCount: number;
  QntyAdjustmentBalanceCount: number;
  DateAdjustmentBalanceCount: Date | null;
  TimeAdjustmentBalanceCount: number;
  QntyAdjustmentBalanceDiff: number;
  UnitPrice: number;
  TaxIncludedPrice: number;
  DiscountPercent: number;
  DiscountValue: number;
  UnitDiscountValue: number;
  WarehouseID: number;
  WarehouseOutgoing: number;
  WarehouseReceipt: number;
  TotalGrossAmount: number;
  TotalLineItemDiscountAmount: number;
  TotalPaymentDiscountAmount: number;
  TotalNetAmount: number;
  TotalNetBaseTaxAmount: number;
  TotalNetPrintAmout: number;
  TotalOtherTaxAmount: number;
  TotalTaxAmount: number;
  TotalAmount: number;
  TotalTaxIncludedAmount: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  PhysicalQtyRule: number;
  LastCostPrice: number;
  AverageCostStockValue: number;
  LastCostStockValue: number;
  WorkstationID: number;
  ProductCode: string;
  ProductCategory: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date;
  HrAlt: number;
}

export interface StreetCodes {
  Guid: string;
  CountryID: string;
  ProvinceID: string;
  LocalityID: bigint;
  PoblationName: string;
  Street: string;
  BranchStreet: string;
  DoorStart: string;
  CustomerName: string;
  CustomerAddress: string;
  PostalCode: string;
  PostalCodeDescription: string;
  ProvinceCodes?: ProvinceCodes;
}

export interface Style {
  StyleID: number;
  Description: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface SubRoutes {
  RouteID: number;
  SubRouteID: number;
  Description: string;
  CustomerID: bigint;
  CustomerOrderID: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Customer?: Customer;
  Routes?: Routes;
}

export interface Supplier {
  SupplierID: bigint;
  PartyID: bigint;
  SupplierKey: string;
  CreateDate: Date | null;
  OrganizationName: string;
  FederalTaxID: string;
  KeyFederalTaxID: bigint;
  EmailAddress: string;
  WebAddress: string;
  Telephone1: string;
  Telephone2: string;
  Telephone3: string;
  Telephone4: string;
  MobileTelephone1: string;
  MobileTelephone2: string;
  Fax: string;
  ZoneID: number;
  PaymentID: number;
  TenderID: number;
  CashDiscountTermID: string;
  SupplierGroupDescription: string;
  LastUpdated: Date | null;
  LastTransSerial: string;
  LastTransDocument: string;
  LastTransDocNumber: bigint;
  EntityFiscalStatusID: number;
  AplyRetentionTax: boolean;
  RetentionTax: number;
  LastTransWasTaxIncluded: boolean;
  Comments: string;
  DirectDiscount: number;
  SupplierPicturePath: string;
  SendXMLMailAfterSave: boolean;
  UseIntraStat: boolean;
  IntraStatPortID: string;
  PriceItemDecimalPlaces: number;
  FreightOnLedgerAccount: boolean;
  SupplierCustomerID: string;
  ActiveParty: boolean;
  Locked: boolean;
  RelationshipID: number;
  CashAccountingSchemeSignIn: Date | null;
  CashAccountingSchemeSignOut: Date | null;
  PlantProtectionActivityAuth: string;
  WorkstationID: number;
  FinancialDiscountPercentBase: number;
  TaxablePersonType: number;
  UID: string;
  ChangeSetID: number;
  O365Id: string;
  GDPRConsent: boolean;
  GDPRConsentDate: Date | null;
  GDPRSystemUserGUID: string;
  GDPRForgetDate: Date | null;
  GDPRForgetUserGUID: string;
  GDPRRequestDate: Date | null;
  GDPRRequestEmail: string;
  GDPRRequestUserGUID: string;
  GDPRStateDate: Date | null;
  GDPRStateUserGUID: string;
  GDPRState: number;
  WithholdingTaxType: string;
  HasSelfBillingWSAgreement: boolean;
  WhatsAppConsent: boolean;
  XCHOnboarded: boolean;
  XCHConsent: boolean;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date;
  HrAlt: number;
  Item?: Item[];
  EntityFiscalStatus?: EntityFiscalStatus;
  Payment?: Payment;
  Tender?: Tender;
  Zone?: Zone;
  SupplierFamilyDiscounts?: SupplierFamilyDiscounts[];
  SupplierLedgerAccount?: SupplierLedgerAccount[];
}

export interface SupplierFamilyDiscounts {
  SupplierID: bigint;
  FamilyID: bigint;
  DiscountPercent: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Family?: Family;
  Supplier?: Supplier;
}

export interface SupplierLedgerAccount {
  LedgerCounter: Decimal;
  LedgerGuid: string;
  InternalID: bigint;
  ReconciledFlag: boolean;
  CreateDate: Date | null;
  DeferredPaymentDate: Date | null;
  SystemEntryDate: Date | null;
  ContractReferenceNumber: string;
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  TransInstallmentID: number;
  TotalAmount: number;
  TotalPendingAmount: number;
  OperationID: number;
  TotalAccountSign: number;
  BalanceAmount: number;
  BalanceAccountSign: number;
  PartyTypeCode: number;
  PartyID: bigint;
  SalesmanID: bigint;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  ExchangeDifCurrency: string;
  RetentionTotalAmount: number;
  RetentionPendingAmount: number;
  RetentionStampDutyTotal: number;
  RetentionStampDutyPending: number;
  DebitTotalAmount: number;
  CreditTotalAmount: number;
  TransStatus: number;
  PartyAccountTypeID: string;
  OriginTransSerial: string;
  OriginTransDocument: string;
  OriginTransDocNumber: bigint;
  PartyAddressID: number;
  CashAccountingSchemeType: number;
  ComissionAmount: number;
  BalanceCompensationFlag: boolean;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Operation?: Operation;
  Supplier?: Supplier;
}

export interface SyncEntities {
  Id: Decimal;
  TableName: string;
  HeadOfficeBehaviour: number;
  StoreBehaviour: number;
  RelatedTable: string;
  RelatedTableClause: string;
  SelfFilter: string;
  StoreSelfFilter: string;
  BootLoader: boolean;
  ClearOnFirstSync: boolean;
  HeadOfficeLimitFields: string;
  StoreLimitFields: string;
  Precedence: number;
  HeadOfficeTracking: boolean;
  StoreTracking: boolean;
  LCSync: boolean;
  WorkstationId: number;
  SessionId: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface SyncFiles {
  Id: Decimal;
  Entity: string;
  Source: string;
  Destination: string;
  Filter: string;
  SubFolders: boolean;
  WorkstationId: number;
  SessionId: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface SyncFilesTracking {
  Id: Decimal;
  Entity: string;
  FileName: string;
  LastSyncDate: Date | null;
  WorkstationId: number;
  SessionId: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface SyncSessions {
  Session: string;
  MinVersion: bigint;
  MaxVersion: bigint;
  CreateDate: Date | null;
  StartDate: Date | null;
  EndDate: Date | null;
  State: number;
}

export interface SyncWorkBatch {
  Session: string;
  TableName: string;
  StoreId: number;
  ChangeType: number;
  Operation: string;
  State: number;
  CreateDate: Date | null;
}

export interface sysdiagrams {
  name: string;
  principal_id: number;
  diagram_id: number;
  version: number | null;
  definition: Buffer | null;
}

export interface SystemWordTerms {
  TableName: string;
  FieldName: string;
  LanguageID: string;
  LookupCode: number;
  WordTerm: string;
  LanguageCodes?: LanguageCodes;
}

export interface TagAlongEdition {
  ItemID: string;
  LotID: string;
  TagAlongItemID: string;
  TagAlongLotID: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  ItemLot_TagAlongEdition_ItemID_LotIDToItemLot?: ItemLot;
  ItemLot_TagAlongEdition_TagAlongItemID_TagAlongLotIDToItemLot?: ItemLot;
}

export interface TaxableGroup {
  TaxableGroupID: number;
  Description: string;
  InternalUse: boolean;
  UID: string;
  ChangeSetID: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  TaxableGroupRules?: TaxableGroupRules[];
}

export interface TaxableGroupRules {
  TaxableGroupID: number;
  TaxGroupID: string;
  TaxSequenceID: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  TaxableGroup?: TaxableGroup;
  TaxGroup?: TaxGroup;
}

export interface TaxAuthority {
  CountryID: string;
  TaxRegionID: string;
  RegionName: string;
  InternalUse: boolean;
  UID: string;
  ChangeSetID: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  CountryCodes?: CountryCodes;
  TaxTable?: TaxTable[];
  Zone?: Zone[];
}

export interface TaxAuthorityConfigHistory {
  Id: number;
  TaxAuthorityType: number;
  ServiceStartDate: Date | null;
  ServiceEndDate: Date | null;
  AuditStartUserGuid: string;
  AuditEndUserGuid: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface TaxAuthorityInvoiceReport {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  TransactionGuid: string;
  ReportDateTime: Date | null;
  ReportType: number;
  ReturnCode: number;
  ReturnMessage: string;
  SystemEntryUser: string;
  EstimatedDeliveryDateTime: Date | null;
  AuditFileName: string;
  DocumentStatus: string;
  WorkstationID: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface TaxAuthoritySerials {
  TransSerial: string;
  TransDocument: string;
  TaxAuthoritySerial: string;
  TaxAuthoritySerialDate: Date | null;
  TaxAuthorityState: bigint;
  SaftDocType: string;
  ProcessingType: string;
  StartingSequenceNumber: bigint;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface TaxChangeSellingPrices {
  ItemID: string;
  SizeID: number;
  LotID: string;
  PriceLineID: number;
  UnitPrice: number;
  TaxIncludedPrice: number;
  PriceUnitID: string;
}

export interface TaxExemptionMotive {
  ID: string;
  Description: string;
  Ordinance: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface TaxGroup {
  TaxGroupID: string;
  Description: string;
  ShortDescription: string;
  TaxOnGrossAmountFlag: boolean;
  TaxedAtTransactionLevelFlag: boolean;
  Printable: boolean;
  CalculusType: number;
  CalculateIncidence: boolean;
  TaxOverOtherTaxes: boolean;
  SequenceNumber: number;
  TaxCalculFormula: string;
  IncidenceCalcFormula: string;
  TaxInverseCalculFormula: string;
  IncidenceInverseCalcFormula: string;
  RoundingCode: number;
  RoundingDigitsQuantity: number;
  SecondHandTaxRegimen: boolean;
  InternalUse: boolean;
  UID: string;
  ChangeSetID: number;
  CIUSPTTaxID: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  TaxableGroupRules?: TaxableGroupRules[];
  TaxGroupFiscalStatus?: TaxGroupFiscalStatus[];
  TaxTable?: TaxTable[];
}

export interface TaxGroupFiscalStatus {
  EntityFiscalStatusID: number;
  TaxGroupID: string;
  TaxSequenceID: number;
  TaxItemType: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  EntityFiscalStatus?: EntityFiscalStatus;
  TaxGroup?: TaxGroup;
}

export interface TaxTable {
  TaxGroupID: string;
  TaxSequenceID: number;
  CountryID: string;
  TaxRegionID: string;
  TaxRate: number;
  TaxOnShipping: boolean;
  TaxExemptionReason: string;
  TaxExpirationDate: Date | null;
  InternalUse: boolean;
  UID: string;
  ChangeSetID: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  TaxExemptionReasonCode: string;
  TaxCode: string;
  TaxAuthority?: TaxAuthority;
  TaxGroup?: TaxGroup;
}

export interface TaxTransaction {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  ZoneType: number;
  CreateDate: Date | null;
  TaxGroupID: string;
  TaxSequenceID: number;
  TaxRate: number;
  TotalNetAmount: number;
  TotalTaxAmount: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  Printable: boolean;
  CountryId: string;
  TaxRegionId: string;
  TransInstallmentId: number;
  TotalNetChargeableAmount: number;
  TotalTaxChargeableAmount: number;
  ChargeableMotive: number;
  TaxItemType: number;
  TaxExemptionReasonCode: string;
  TaxCode: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  DocumentsSeriesNumber?: DocumentsSeriesNumber;
}

export interface TaxTransactionDetail {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  CreateDate: Date | null;
  LineItemID: bigint;
  LineItemSubID: number;
  ItemID: string;
  ZoneType: number;
  TaxGroupID: string;
  TaxSequenceID: number;
  TaxRate: number;
  TotalNetAmount: number;
  TotalTaxAmount: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  Printable: boolean;
  CountryId: string;
  TaxRegionId: string;
  TransInstallmentId: number;
  TaxItemType: number;
  TaxExemptionReasonCode: string;
  TaxCode: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface TaxTransactionDetailParty {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  LineItemID: bigint;
  LineItemSubID: number;
  ItemID: string;
  TaxGroupID: string;
  TaxSequenceID: number;
  TransInstallmentId: number;
  TaxGroupName: string;
  PartyID: bigint;
  PartyName: string;
  PartyWebAddress: string;
  TaxItemType: number;
  TaxExemptionReasonCode: string;
  TaxCode: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface Telephone {
  TelephoneID: bigint;
  PartyID: bigint;
  PersonID: bigint;
  TelephoneTypeCode: number;
  TelephoneNumber: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Person?: Person;
}

export interface TempItemSellingPricesLabels {
  ItemID: string;
  POSItemID: string;
  SizeID: number;
  LotID: string;
  PriceLineID: number;
  CreateDate: Date | null;
  UnitPrice: number;
  TaxIncludedPrice: number;
  FixedProfitRate: number;
  CurrencyID: string;
  CurrencyFactor: number;
  CurrencyExchange: number;
  ExcludesGlobalDiscount: boolean;
  PriceUnitID: string;
  ColorID: number;
  DiscountPercent: number;
  WorkstationID: number;
  UserAlt: number;
  SessionID: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface TempTaxTransaction {
  TransDocType: number;
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  IndexValue: bigint;
  CreateDate: Date | null;
  TaxGroupID: string;
  TaxSequenceID: number;
  TaxRate: number;
  TotalNetAmount: number;
  TotalTaxAmount: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  CountryId: string;
  TaxRegionId: string;
  TransInstallmentId: number;
  TaxItemType: number;
  TaxExemptionReasonCode: string;
  TaxCode: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface TempTaxTransactionDetail {
  TransDocType: number;
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  IndexValue: bigint;
  CreateDate: Date | null;
  LineItemID: bigint;
  LineItemSubID: number;
  ItemID: string;
  TaxGroupID: string;
  TaxSequenceID: number;
  TaxRate: number;
  TotalNetAmount: number;
  TotalTaxAmount: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  CountryId: string;
  TaxRegionId: string;
  TransInstallmentId: number;
  TaxItemType: number;
  TaxExemptionReasonCode: string;
  TaxCode: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface TempTaxTransactionDetailParty {
  TransDocType: number;
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  IndexValue: bigint;
  LineItemID: bigint;
  LineItemSubID: number;
  ItemID: string;
  TaxGroupID: string;
  TaxSequenceID: number;
  TaxGroupName: string;
  PartyID: bigint;
  PartyName: string;
  PartyWebAddress: string;
  TaxItemType: number;
  TaxExemptionReasonCode: string;
  TaxCode: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface TempTransaction {
  TransDocType: number;
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  IndexValue: bigint;
  TransactionGuid: string;
  CreateDate: Date | null;
  CreateTime: number;
  SystemEntryDate: Date | null;
  SalesmanID: bigint;
  ContractReferenceNumber: string;
  PartyTypeCode: number;
  PartyID: bigint;
  PartyName: string;
  PartyAddress1: string;
  PartyAddress2: string;
  PartyPostalCode: string;
  PartyAddressID: number;
  PartyCountryID: string;
  PartyProvinceID: string;
  PartyLocalityID: bigint;
  PartyFederalTaxID: string;
  WarehouseReceipt: number;
  WarehouseOutgoing: number;
  PaymentID: number;
  TenderID: number;
  ZoneID: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  CarrierID: number;
  CarrierDescription: string;
  LoadPlaceID: number;
  LoadPlaceDescription: string;
  LoadPlaceDateTime: Date | null;
  UnloadPlaceID: number;
  UnloadPlaceDescription: string;
  UnloadPlaceDateTime: Date | null;
  TransactionTaxIncluded: boolean;
  LineItemsCount: bigint;
  Comments: string;
  RectificationMotive: string;
  PaymentDiscountPercent: number;
  PaymentCumulativeDiscountPercent1: number;
  PaymentCumulativeDiscountPercent2: number;
  PaymentCumulativeDiscountPercent3: number;
  GlobalDiscountPercent: number;
  GlobalCumulativeDiscountPercent1: number;
  GlobalCumulativeDiscountPercent2: number;
  GlobalCumulativeDiscountPercent3: number;
  TotalGrossAmount: number;
  TotalLineItemDiscountAmount: number;
  TotalPaymentDiscountAmount: number;
  TotalRedeemedVoucherAmount: number;
  TotalGlobalDiscountAmount: number;
  TotalNetAmount: number;
  TotalTaxAmount: number;
  TotalFreightAmount: number;
  TotalFreightAmountWithTax: number;
  FreightTaxableGroupID: number;
  TotalAdjustmentAmount: number;
  TotalAmount: number;
  TotalRetentionAmount: number;
  TotalTransactionAmount: number;
  TotalPayedAmount: number;
  FrequentShopperPoints: number;
  DiscountFreqShopperPoints: number;
  VoucherGiftTransSerial: string;
  VoucherGiftTransDocument: string;
  VoucherGiftTransDocNumber: bigint;
  VoucherGiftValue: number;
  CustomerImputeID: bigint;
  VehicleKilometers: number;
  SecondIssue: boolean;
  SecondHandTaxRegimen: boolean;
  OriginatingON: string;
  ShipToAddressDetailLine1: string;
  ShipToAddressDetailLine2: string;
  ShipToPostalCode: string;
  ShipToCountryID: string;
  ShipFromAddressDetailLine1: string;
  ShipFromAddressDetailLine2: string;
  ShipFromPostalCode: string;
  ShipFromCountryID: string;
  TillID: string;
  PlantProtectionActivityAuth: string;
  PlantProtectionApplicator: string;
  EntityFiscalStatusID: number;
  LoyaltyId: string;
  LoyaltyUploadDate: Date | null;
  BalanceFreqShopperPoints: number;
  PABudgetExpenditureNumber: string;
  PAContractNumber: string;
  PACommitmentNumber: string;
  ATCUD: string;
  QRCode: string;
  PartyGLN: string;
  FrequentShopperProcessingState: number;
  PartyDelivery: string;
  WithholdingTaxType: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface TempTransactionDetailExtraFields {
  TransDocType: number;
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  IndexValue: bigint;
  LineItemID: bigint;
  LineItemSubID: number;
  ExtraFieldID: bigint;
  TextAnswer: string;
  NumberAnswer: number;
  DateAnswer: Date | null;
  BooleanAnswer: boolean;
  MemoAnswer: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface TempTransactionDetails {
  TransDocType: number;
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  IndexValue: bigint;
  CreateDate: Date | null;
  ActualDeliveryDate: Date | null;
  PhysicalQtyDate: Date | null;
  OriginCreateDate: Date | null;
  OriginTransSerial: string;
  OriginTransDocument: string;
  OriginTransDocNumber: bigint;
  OriginLineItemID: bigint;
  OriginLineItemSubID: number;
  OriginQuantity: number;
  OriginUnits: number;
  DestinationTransSerial: string;
  DestinationTransDocument: string;
  DestinationTransDocNumber: bigint;
  DestinationLineItemID: bigint;
  DestinationLineItemSubID: number;
  DestinationQuantity: number;
  DestinationUnits: number;
  TransactionConverted: boolean;
  LineItemID: bigint;
  LineItemSubID: number;
  ItemID: string;
  POSItemID: string;
  LotID: string;
  ItemType: number;
  SupplierItemID: string;
  SalesmanID: bigint;
  ColorID: number;
  SizeID: number;
  Description: string;
  TaxableGroupID: number;
  UnitOfSaleID: string;
  Quantity: number;
  PackQuantity: number;
  Units: number;
  StockUnits: number;
  UnitConversion: number;
  Quantity1: number;
  Quantity2: number;
  Quantity3: number;
  Quantity4: number;
  PhysicalQtyRule: number;
  ComponentQty: number;
  UnitCasesCount: number;
  UnitPrice: number;
  TaxIncludedPrice: number;
  OriginalUnitPrice: number;
  OriginalTaxIncludedPrice: number;
  ItemAverageUnitPrice: number;
  ItemAverageTaxIncludedPrice: number;
  ItemLastCostUnitPrice: number;
  ItemLastCostTaxIncludedPrice: number;
  DiscountPercent: number;
  DiscountValue: number;
  UnitDiscountValue: number;
  DiscountID: number;
  WarehouseID: number;
  WarehouseReceipt: number;
  WarehouseOutgoing: number;
  CumulativeDiscountPercent1: number;
  CumulativeDiscountPercent2: number;
  CumulativeDiscountPercent3: number;
  PaymentDiscountPercent1: number;
  PaymentDiscountPercent2: number;
  PaymentDiscountPercent3: number;
  PartyTypeCode: number;
  PartyID: bigint;
  TotalGrossAmount: number;
  TotalLineItemDiscountAmount: number;
  TotalPaymentDiscountAmount: number;
  TotalNetAmount: number;
  TotalNetBaseTaxAmount: number;
  TotalNetPrintAmout: number;
  TotalOtherTaxAmount: number;
  TotalTaxAmount: number;
  TotalAmount: number;
  TotalTaxIncludedAmount: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  PromotionApplied: boolean;
  Comments: string;
  RequiredDeliveryDateTime: Date | null;
  ProductCode: string;
  PlantProtectionSaleAuthNumber: string;
  ProductCategory: number;
  ImputeToCustomerID: bigint;
  CustomerImputeID: bigint;
  RetentionTax: number;
  AdvancementOriginItemID: string;
  AdvancementOriginDescription: string;
  AdvancementMethod: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface TempTransactionParty {
  TransDocType: number;
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  IndexValue: bigint;
  TransactionGuid: string;
  CreateDate: Date | null;
  PartyID: bigint;
  BillToPartyTypeCode: number;
  BillToPartyID: bigint;
  BillToPartyName: string;
  BillToPartyAddress1: string;
  BillToPartyAddress2: string;
  BillToPartyPostalCode: string;
  BillToPartyAddressID: number;
  BillToPartyCountryID: string;
  BillToPartyProvinceID: string;
  BillToPartyLocalityID: bigint;
  BillToPartyFederalTaxID: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface TempTransactionPropDetails {
  TransDocType: number;
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  IndexValue: bigint;
  LineItemID: bigint;
  LineItemSubID: number;
  CreateDate: Date | null;
  ActualDeliveryDate: Date | null;
  PhysicalQtyDate: Date | null;
  ItemID: string;
  PropertyValue1: string;
  PropertyValue1_Key2: string;
  PropertyValue1_Key3: string;
  PropertyValue2: string;
  PropertyValue2_Key2: string;
  PropertyValue2_Key3: string;
  PropertyValue3: string;
  PropertyValue3_Key2: string;
  PropertyValue3_Key3: string;
  PropertyControlType: number;
  PropertyControlMode: number;
  PropertyUseExpirationDate: boolean;
  PropertyUseProductionDate: boolean;
  PropertyExpDateControl: number;
  PropertyMaximumQuantity: number;
  ProductionDate: Date | null;
  ExpirationDate: Date | null;
  PartyTypeCode: number;
  PartyID: bigint;
  Quantity: number;
  PackQuantity: number;
  Units: number;
  StockUnits: number;
  UnitConversion: number;
  UnitOfMeasure: string;
  WarehouseID: number;
  TotalNetAmount: number;
  TotalOtherCostsAmount: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface Tender {
  TenderID: number;
  TenderKey: string;
  MaximumAcceptAmount: number;
  MinimumSaleAmount: number;
  MaxAcceptAmntCurrencyID: string;
  MaxAcceptAmntCurrencyFactor: number;
  MaxAcceptAmntCurrencyExchange: number;
  CanReturnMoneyChange: boolean;
  TenderUse: number;
  UseDOCToPay: boolean;
  DocIDUsedToPay: string;
  TenderType: number;
  CustomerIdentificationRequiredFlag: boolean;
  AccountIdentificationRequiredFlag: boolean;
  OpenCashDrawerRequiredFlag: boolean;
  OldTenderID: number;
  InternalUse: boolean;
  UpdateTillReport: boolean;
  DebitedOnAccount: boolean;
  Inactive: boolean;
  StampDutyBillOfExchange: string;
  SAFTPaymentMechanism: string;
  ChangeSetID: number;
  ChargeDaysAfterDueDate: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  CardServiceFee?: CardServiceFee[];
  Customer?: Customer[];
  Supplier?: Supplier[];
  TenderBarcode?: TenderBarcode[];
  TenderLineItem?: TenderLineItem[];
  TenderNames?: TenderNames[];
}

export interface TenderBarcode {
  TenderID: number;
  BarCodeMask: string;
  TransSerial: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Tender?: Tender;
}

export interface TenderDebitedDocument {
  TenderID: number;
  TenderUse: number;
  AccountUsed: number;
  TransDocument: string;
  BondStatusID: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface TenderLineItem {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  TenderDetailGuid: string;
  CreateDate: Date | null;
  SystemEntryDate: Date | null;
  SalesmanID: bigint;
  PartyTypeCode: number;
  PartyID: bigint;
  PartyName: string;
  Amount: number;
  TenderType: number;
  TransOrder: number;
  TenderID: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  TillID: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  BillOfExchangeTenderLineItem?: BillOfExchangeTenderLineItem | null;
  CardTenderLineItem?: CardTenderLineItem | null;
  CheckTenderLineItem?: CheckTenderLineItem | null;
  DirectDebitTenderLineItem?: DirectDebitTenderLineItem | null;
  SecuritiesTenderLineItem?: SecuritiesTenderLineItem | null;
  Tender?: Tender;
  VoucherTenderLineItem?: VoucherTenderLineItem | null;
  WireTransferTenderLineItem?: WireTransferTenderLineItem | null;
}

export interface TenderNames {
  TenderID: number;
  LanguageID: string;
  Description: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  LanguageCodes?: LanguageCodes;
  Tender?: Tender;
}

export interface TenderTransaction {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  AccountUsed: number;
  CreateDate: Date | null;
  CreateTime: number;
  SystemEntryDate: Date | null;
  SystemEntryUser: string;
  UserChanged: string;
  SalesmanID: bigint;
  TotalAmount: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  Comments: string;
  TransStatus: number;
  AccountingExportDate: Date | null;
  PrintedCopies: number;
  TillID: string;
  PartyType: number;
  PartyID: bigint;
  PartyName: string;
  PartyAddressID: number;
  PartyAddress1: string;
  PartyAddress2: string;
  PartyPostalCode: string;
  PartyCountryID: string;
  PartyProvinceID: string;
  PartyLocalityID: bigint;
  PartyFederalTaxID: string;
  PartyAccountTypeID: string;
  BankID: number;
  BankAccountID: bigint;
  CounterTillID: string;
  AssignedSessionDate: Date | null;
  AssignedSessionID: number;
  RouteID: number;
  SubRouteID: number;
  CarrierID: number;
  StartKm: number;
  EndKm: number;
  ChangeSetId: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  DocumentsSeriesNumber?: DocumentsSeriesNumber;
}

export interface TenderTransactionCoins {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  Guid: string;
  BankNoteID: bigint;
  BankNoteCount: number;
  BankNoteAmount: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface TenderTransactionDetails {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  Guid: string;
  TenderID: number;
  TenderType: number;
  LineID: number;
  AccumulatesOnMainTill: boolean;
  PreviousBalance: number;
  DefaultCashBalance: number;
  CalculatedBalance: number;
  Amount: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  ReferenceGUID: string;
  HasCoins: boolean;
  CardServiceFee: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface Till {
  TillID: string;
  Description: string;
  StatusCode: number;
  MinimumWarningAmount: number;
  DefaultCashBalanceAmount: number;
  MaximumWarningAmount: number;
  MaximumLockoutAmount: number;
  MainTill: boolean;
  OfflineTill: boolean;
  StoreID: number;
  MaximumSessionsPerDay: number;
  TillOpenMode: number;
  OnTouchUseRoute: boolean;
  CanHaveOpenTill: boolean;
  TillLockToSalesman: boolean;
  FixSalesmanForSession: boolean;
  CanChangeTranOnSignOffTill: boolean;
  CheckForTempTransactionOnSignOff: boolean;
  OnStatementCanHaveDiscrepancy: boolean;
  StatementDiscrepancyAmount: number;
  OperatorTenderStatement: boolean;
  ExclusiveToOwnerSalesman: boolean;
  TenderStatementTentatives: number;
  BuiltIn: boolean;
  Comments: string;
  DiscrepancyTillID: string;
  DiscrepancyAccountTypeID: string;
  ChangeSetID: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface TillBankAccount {
  TillID: string;
  TenderID: number;
  BankID: number;
  BankAccountID: bigint;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface TillSession {
  TillID: string;
  SessionID: number;
  BusinessDayDate: Date;
  IsOpen: boolean;
  SalesmanID: bigint;
  RouteID: number;
  SubRouteID: number;
  CarrierID: number;
  StartKm: number;
  EndKm: number;
  CashBalanceAmount: number;
  SignOnTransSerial: string;
  SignOnTransDocument: string;
  SignOnTransDocNumber: bigint;
  SignOnDateTime: Date | null;
  SignOffTransSerial: string;
  SignOffTransDocument: string;
  SignOffTransDocNumber: bigint;
  SignOffDateTime: Date | null;
  SignOffCurrencyID: string;
  SignOffCurrencyExchange: number;
  SignOffCurrencyFactor: number;
  SalesTotalAmount: number;
  TenderTotalAmount: number;
  SalesTransactionCount: bigint;
  TransactionCount: bigint;
  WorkstationID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface TillWorkstationAssignment {
  SignedWorkstation: number;
  BusinessDayDate: Date;
  TillID: string;
  SalesmanID: bigint;
  WorkstationID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface TouchBtnTemplates {
  TemplateName: string;
  CaptionAlign: number;
  CaptionJustify: number;
  Fnt_Bold: boolean;
  Fnt_Charset: number;
  Fnt_Italic: boolean;
  Fnt_Name: string;
  Fnt_Size: number;
  Fnt_Strikethrough: boolean;
  Fnt_Underline: boolean;
  Fnt_Weight: number;
  FontColor: number;
  PictureKeepRatio: boolean;
  PictureKeepRatioMargin: boolean;
  PicTopMargin: number;
  PicBottomMargin: number;
  PicLeftMargin: number;
  PicRightMargin: number;
  UseMaskColor: boolean;
  MaskColor: number;
  UseTexture: boolean;
  TexturePath: string;
  TextureColorMix: number;
  ButtonColor: number;
  ShowGridOnDown: boolean;
  Height: number;
  Width: number;
  RoundedCorners: boolean;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface TouchButtons {
  Guid: string;
  WorkstationID: number;
  Page: number;
  Index: bigint;
  Top: number;
  Left: number;
  Height: number;
  Width: number;
  Caption: string;
  CaptionAlign: number;
  CaptionJustify: number;
  Fnt_Bold: boolean;
  Fnt_Charset: number;
  Fnt_Italic: boolean;
  Fnt_Name: string;
  Fnt_Size: number;
  Fnt_Strikethrough: boolean;
  Fnt_Underline: boolean;
  Fnt_Weight: number;
  FontColor: number;
  PicturePath: string;
  PictureDownPath: string;
  PictureKeepRatio: boolean;
  PictureKeepRatioMargin: boolean;
  PicTopMargin: number;
  PicBottomMargin: number;
  PicLeftMargin: number;
  PicRightMargin: number;
  UseMaskColor: boolean;
  MaskColor: number;
  UseTexture: boolean;
  TexturePath: string;
  TextureColorMix: number;
  ButtonColor: number;
  ShowGridOnDown: boolean;
  Function: string;
  FunctionParam: string;
  Password: string;
  PasswordE: string;
  RoundedCorners: boolean;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface TouchPageTemplates {
  TemplateName: string;
  Index: bigint;
  Top: number;
  Left: number;
  Height: number;
  Width: number;
  Caption: string;
  CaptionAlign: number;
  CaptionJustify: number;
  Fnt_Bold: boolean;
  Fnt_Charset: number;
  Fnt_Italic: boolean;
  Fnt_Name: string;
  Fnt_Size: number;
  Fnt_Strikethrough: boolean;
  Fnt_Underline: boolean;
  Fnt_Weight: number;
  FontColor: number;
  PicturePath: string;
  PictureDownPath: string;
  PictureKeepRatio: boolean;
  PictureKeepRatioMargin: boolean;
  PicTopMargin: number;
  PicBottomMargin: number;
  PicLeftMargin: number;
  PicRightMargin: number;
  UseMaskColor: boolean;
  MaskColor: number;
  UseTexture: boolean;
  TexturePath: string;
  TextureColorMix: number;
  ButtonColor: number;
  ShowGridOnDown: boolean;
  Function: string;
  FunctionParam: string;
  Password: string;
  PasswordE: string;
  RoundedCorners: boolean;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface TransactionAllowanceCharge {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  AllowanceChargeID: number;
  AllowanceChargeReason: number;
  ReimbursementTransSerial: string;
  ReimbursementTransDocument: string;
  ReimbursementTransDocNumber: bigint;
  AllowanceChargeValue: number;
  TotalAllowanceChargeAmount: number;
  AllowanceChargeDate: Date | null;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface TransactionDetailExtraFields {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  LineItemID: bigint;
  LineItemSubID: number;
  ExtraFieldID: bigint;
  TextAnswer: string;
  NumberAnswer: number;
  DateAnswer: Date | null;
  BooleanAnswer: boolean;
  MemoAnswer: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface TransactionExtraFields {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  ExtraFieldID: bigint;
  TextAnswer: string;
  NumberAnswer: number;
  DateAnswer: Date | null;
  BooleanAnswer: boolean;
  MemoAnswer: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  ConfExtraFields?: ConfExtraFields;
  DocumentsSeriesNumber?: DocumentsSeriesNumber;
}

export interface TransactionPayment {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  PaymentID: string;
  TransInstallmentID: number;
  PayNowUrl: string;
  MotoPayNowUrl: string;
  Status: string;
  SubmissionDate: Date | null;
  Amount: number;
  AmountPayed: number;
  Fees: number;
  PaymentDate: Date | null;
  EmittedDocument: string;
  EntityMB: string;
  ReferenceMB: string;
  RequestIdMB: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  UserChanged: string;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface TransactionPropDetails {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  LineItemID: bigint;
  LineItemSubID: number;
  CreateDate: Date | null;
  ActualDeliveryDate: Date | null;
  PhysicalQtyDate: Date | null;
  ItemID: string;
  PropertyValue1: string;
  PropertyValue1_Key2: string;
  PropertyValue1_Key3: string;
  PropertyValue2: string;
  PropertyValue2_Key2: string;
  PropertyValue2_Key3: string;
  PropertyValue3: string;
  PropertyValue3_Key2: string;
  PropertyValue3_Key3: string;
  PropertyControlType: number;
  PropertyControlMode: number;
  PropertyUseExpirationDate: boolean;
  PropertyUseProductionDate: boolean;
  PropertyExpDateControl: number;
  PropertyMaximumQuantity: number;
  ProductionDate: Date | null;
  ExpirationDate: Date | null;
  PartyTypeCode: number;
  PartyID: bigint;
  Quantity: number;
  PackQuantity: number;
  Units: number;
  StockUnits: number;
  UnitConversion: number;
  UnitOfMeasure: string;
  WarehouseID: number;
  TotalNetAmount: number;
  TotalOtherCostsAmount: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface TransactionStatus {
  StatusID: string;
  Description: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  TransactionStatusFlow_TransactionStatusFlow_NewStatusIDToTransactionStatus?: TransactionStatusFlow[];
  TransactionStatusFlow_TransactionStatusFlow_OriginalStatusIDToTransactionStatus?: TransactionStatusFlow[];
}

export interface TransactionStatusFlow {
  StatusFlowID: string;
  TransDocumentID: string;
  OriginalStatusID: string;
  NewStatusID: string;
  StatusChangeAction: bigint;
  StatusChangeDenial: bigint;
  TurnaroundTransDocumentID: string;
  StatusColor: bigint;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Documents?: Documents;
  TransactionStatus_TransactionStatusFlow_NewStatusIDToTransactionStatus?: TransactionStatus;
  TransactionStatus_TransactionStatusFlow_OriginalStatusIDToTransactionStatus?: TransactionStatus;
}

export interface TransactionVoidReason {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  CreateDate: Date | null;
  VoidType: number;
  VoidReason: string;
  WorkstationID: number;
  SessionID: number;
  SystemEntryUser: string;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface TransCumulativeDiscounts {
  CreateDate: Date | null;
  CreateTime: number;
  PartyID: bigint;
  SalesmanLevel: number;
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  DetailGuid: string;
  DiscountID: number;
  ItemID: string;
  SizeID: number;
  FamilyID: bigint;
  Quantity: number;
  TotalNetAmount: number;
  TotalTaxIncludedAmount: number;
  IsOffer: boolean;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface UNECEUnitcodes {
  ID: string;
  Name: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface UnitOfMeasure {
  UnitOfMeasureID: string;
  UnitOfMeasureKey: string;
  LanguageID: string;
  Description: string;
  EnglishMetricFlag: boolean;
  UnitOfMeasureTypeCode: number;
  UnitOfMeasureConversion: number;
  ConversionTo: string;
  CalcFormula: string;
  MaximumDecimals: number;
  UID: string;
  ChangeSetID: number;
  UNECEUnitcode: string;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  LanguageCodes?: LanguageCodes;
}

export interface VoidedStockHistory {
  StockGuid: string;
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface Voucher {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  DateSold: Date | null;
  ExpirationDate: Date | null;
  FaceValueAmount: number;
  SpentValueAmount: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  OpenAmountFlag: boolean;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  DocumentsSeriesNumber?: DocumentsSeriesNumber;
}

export interface VoucherTenderLineItem {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  TransOrder: number;
  TenderDetailGuid: string;
  VoucherTransSerial: string;
  VoucherTransDocument: string;
  VoucherTransDocNumber: bigint;
  VoucherAmountReceived: number;
  TillID: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  TenderLineItem?: TenderLineItem;
}

export interface Warehouse {
  WarehouseID: number;
  WarehouseKey: string;
  Description: string;
  AddressLine1: string;
  AddressLine2: string;
  PostalCode: string;
  CountryID: string;
  ProvinceID: string;
  LocalityID: bigint;
  IsExternal: boolean;
  ProductCategory: number;
  StoreID: number;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  CustomerContract?: CustomerContract[];
  Stock?: Stock[];
}

export interface WireTransferTenderLineItem {
  TransSerial: string;
  TransDocument: string;
  TransDocNumber: bigint;
  TransOrder: number;
  AccountingDate: Date | null;
  TenderDetailGuid: string;
  BankID: number;
  BankAccountID: bigint;
  PartyBankAccountID: bigint;
  PartyBankAccountNumber: string;
  PartyBankCode: string;
  PartyBranchCode: string;
  PartyAccountCheckDigit: string;
  PartyBankSwift: string;
  ContractReferenceNumber: string;
  ExportedToFile: boolean;
  PartyBankCountryID: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  TenderLineItem?: TenderLineItem;
}

export interface WireTransferTransaction {
  TransSerial: string;
  TransDocNumber: bigint;
  CreateDate: Date | null;
  CreateTime: number;
  SystemEntryDate: Date | null;
  SystemEntryUser: string;
  DocumentID: string;
  AccountingDate: Date | null;
  TransferDay: number;
  ExportDirectory: string;
  ExportType: number;
  AccumulateOnExport: boolean;
  UrgentTransaction: boolean;
  BankID: number;
  BankAccountID: bigint;
  BankCountryID: string;
  BankCode: string;
  BankSwift: string;
  BankName: string;
  BranchCode: string;
  AccountCheckDigit: string;
  FormattedDAN: string;
  FormattedIBAN: string;
  TotalAmount: number;
  CurrencyID: string;
  CurrencyExchange: number;
  CurrencyFactor: number;
  Comments: string;
  TransStatus: number;
  AccountingExportDate: Date | null;
  FileExportDate: Date | null;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  UserChanged: string;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface WireTransferTransactionDetails {
  TransSerial: string;
  TransDocNumber: bigint;
  TransOrder: number;
  DocSerial: string;
  DocID: string;
  DocNumber: bigint;
  DocCreateDate: Date | null;
  DocAccountingDate: Date | null;
  DocContractReferenceNumber: string;
  DocAmount: number;
  DocCurrencyID: string;
  DocCurrencyExchange: number;
  DocCurrencyFactor: number;
  PartyTypeCode: number;
  PartyID: bigint;
  PartyName: string;
  PartyCountryID: string;
  PartyAddressLine1: string;
  PartyAddressLine2: string;
  PartyPostalCode: string;
  PartyBankAccountID: bigint;
  PartyBankCode: string;
  PartyBankSwift: string;
  PartyBankName: string;
  PartyBranchCode: string;
  PartyAccountCheckDigit: string;
  PartyFormattedIBAN: string;
  PartyBankAccountNumber: string;
  PartyBankCountryID: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
}

export interface Zone {
  ZoneID: number;
  ZoneKey: string;
  Description: string;
  ZoneType: number;
  CurrencyID: string;
  CountryID: string;
  TaxRegionID: string;
  TaxExemptionReasonCode: string;
  TaxExemptionReasonCodeService: string;
  WorkstationID: number;
  SessionID: number;
  UserAlt: number;
  DtAlt: Date | null;
  HrAlt: number;
  Customer?: Customer[];
  Supplier?: Supplier[];
  Currency?: Currency;
  TaxAuthority?: TaxAuthority;
}

type Decimal = { valueOf(): string };
